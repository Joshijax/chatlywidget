{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://vue-widget/./src/App.vue","webpack://vue-widget/./src/utils/firebaseDb.js","webpack://vue-widget/./src/utils/firbase_utils.js","webpack://vue-widget/./src/App.vue?7ccd","webpack://vue-widget/./src/testApp.vue","webpack://vue-widget/./src/views/test/chatmaintest.vue","webpack://vue-widget/./src/components/test/singleChat.vue","webpack://vue-widget/./src/components/test/singleChat.vue?2f03","webpack://vue-widget/./src/views/test/testing.vue","webpack://vue-widget/./src/components/NewImage.vue","webpack://vue-widget/./src/components/NewImage.vue?d6b8","webpack://vue-widget/./src/components/test/feedBack.vue","webpack://vue-widget/./src/components/test/feedBack.vue?8cc5","webpack://vue-widget/./src/views/test/testing.vue?5def","webpack://vue-widget/./src/views/test/chatmaintest.vue?e000","webpack://vue-widget/./src/testApp.vue?efb9","webpack://vue-widget/./src/plugins/vuetify.js","webpack://vue-widget/./src/views/chatmain.vue","webpack://vue-widget/./src/components/singleChat.vue","webpack://vue-widget/./src/components/singleChat.vue?7686","webpack://vue-widget/./src/views/chatmain.vue?aa02","webpack://vue-widget/./src/views/chatView.vue","webpack://vue-widget/./src/components/feedBack.vue","webpack://vue-widget/./src/components/mainPage.vue","webpack://vue-widget/./src/components/mainPage.vue?12ff","webpack://vue-widget/./src/components/feedBack.vue?a3d5","webpack://vue-widget/./src/views/chatView.vue?60aa","webpack://vue-widget/./src/views/feedbackView.vue","webpack://vue-widget/./src/views/feedbackView.vue?9f5d","webpack://vue-widget/./src/router/index.js","webpack://vue-widget/./src/main.js","webpack://vue-widget/webpack/bootstrap","webpack://vue-widget/webpack/runtime/chunk loaded","webpack://vue-widget/webpack/runtime/compat get default export","webpack://vue-widget/webpack/runtime/define property getters","webpack://vue-widget/webpack/runtime/global","webpack://vue-widget/webpack/runtime/hasOwnProperty shorthand","webpack://vue-widget/webpack/runtime/make namespace object","webpack://vue-widget/webpack/runtime/publicPath","webpack://vue-widget/webpack/runtime/jsonp chunk loading","webpack://vue-widget/webpack/startup"],"sourcesContent":["<template>\n  <div>\n    <transition name=\"bounce\">\n      <div\n        class=\"chat-container\"\n        :style=\"[\n          showPop\n            ? 'border: 1px solid rgb(242, 242, 242); box-shadow: 6px 2px 15px 5px rgba(0, 0, 0, 0.1);'\n            : '',\n        ]\"\n      >\n        <div v-if=\"isLoading\" class=\"loading-div\"></div>\n        <router-view\n          :checkFirst=\"checkFirst\"\n          :updateState=\"updateState\"\n          :addConversation=\"addConversation\"\n          :updateConversation=\"updateConversation\"\n          :removeConversation=\"removeConversation\"\n          :getConversationBy=\"getConversationBy\"\n          :showChat=\"showChat\"\n          :showPop=\"showPop\"\n          :stateval=\"stateval\"\n          :user=\"user\"\n          :unreadMsg=\"unreadMsg\"\n          :botName=\"botName\"\n          @createNewConvo=\"createNewConvo\"\n          @updateUnreadMsg=\"updateUnreadMsg\"\n          v-if=\"showPop\"\n        />\n      </div>\n    </transition>\n\n    <div class=\"chat-icon\" @click=\"showPop = !showPop\">\n      <transition name=\"bounce\">\n        <svg\n          v-if=\"!showPop\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path\n            d=\"M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64h96v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L309.3 416H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z\"\n          />\n          <circle cx=\"80%\" cy=\"20%\" r=\"25\" fill=\"red\" />\n          <text\n            x=\"77%\"\n            y=\"23%\"\n            font-size=\"14px\"\n            fill=\"white\"\n            text-anchor=\"middle\"\n          >\n            1\n          </text>\n        </svg>\n      </transition>\n      <transition name=\"bounce\">\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          v-show=\"showPop\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M18.601 8.39897C18.269 8.06702 17.7309 8.06702 17.3989 8.39897L12 13.7979L6.60099 8.39897C6.26904 8.06702 5.73086 8.06702 5.39891 8.39897C5.06696 8.73091 5.06696 9.2691 5.39891 9.60105L11.3989 15.601C11.7309 15.933 12.269 15.933 12.601 15.601L18.601 9.60105C18.9329 9.2691 18.9329 8.73091 18.601 8.39897Z\"\n            fill=\"white\"\n          ></path>\n        </svg>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\nexport default {\n  data() {\n    return {\n      showChat: false,\n      showPop: false,\n      user: \"\",\n      ip: \"\",\n      stateval: {},\n      unreadMsg: 0,\n      botName: \"Alex\",\n      isLoading: false,\n    };\n  },\n\n  methods: {\n    updateUnreadMsg(value) {\n      this.unreadMsg = this.unreadMsg + value;\n      console.log(value, \"updating unread messge\", this.unreadMsg);\n    },\n    async checkFirst() {\n      let statecheck = localStorage.getItem(\"appState\");\n      if (statecheck === null) {\n        let data = {\n          user: {\n            role: \"lead\",\n            locale: \"en\",\n            hasConversations: true,\n          },\n          conversations: {\n            byId: {},\n          },\n        };\n        localStorage.setItem(\"appState\", JSON.stringify(data));\n      }\n    },\n    async updateState(newState) {\n      this.stateval = newState;\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\n    },\n    addConversation(conversationId, conversationData) {\n      const newState = {\n        ...this.stateval,\n        conversations: {\n          ...this.stateval.conversations,\n          byId: {\n            ...this.stateval.conversations.byId,\n            [conversationId]: conversationData,\n          },\n        },\n      };\n      this.updateState(newState);\n    },\n    updateConversation(conversationId, conversationData) {\n      const newState = {\n        ...this.stateval,\n        conversations: {\n          ...this.stateval.conversations,\n          byId: {\n            ...this.stateval.conversations.byId,\n            [conversationId]: {\n              ...this.stateval.conversations.byId[conversationId],\n              ...conversationData,\n            },\n          },\n        },\n      };\n      this.updateState(newState);\n    },\n    getConversationBy(conversationId) {\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\n      const conversations = data.conversations.byId;\n      if (conversations.hasOwnProperty(conversationId)) {\n        return conversations[conversationId];\n      } else {\n        return null;\n      }\n    },\n    removeConversation(conversationId) {\n      const {\n        [conversationId]: removedConversation,\n        ...remainingConversations\n      } = this.stateval.conversations.byId;\n      const newState = {\n        ...this.stateval,\n        conversations: {\n          ...this.stateval.conversations,\n          byId: remainingConversations,\n        },\n      };\n      this.updateState(newState);\n    },\n\n    async get_creat_user() {\n      // Check if we have a user ID cookie\n      // this.setCookie(\"userId\", \"10511221794\", 7)\n      // const userIdCookie = await this.getCookie(\"userId\");\n\n      const userIdCookie = localStorage.getItem(\"userId\");\n\n      // console.log(userIdCookie, \"okay the this\");\n\n      if (userIdCookie) {\n        // If we have a user ID cookie, use that\n        this.user = userIdCookie;\n      } else {\n        // Otherwise, fetch the user's IP address and create a new user ID\n        await fetch(\"https://api.ipify.org?format=json\")\n          .then((x) => x.json())\n          .then(({ ip }) => {\n            this.user = ip.split(\".\").join(\"\");\n            this.ip = ip;\n          });\n\n        // Set the new user ID as a cookie\n        // Cookies.set(\"userId\", this.user, { expires: 365 });\n        localStorage.setItem(\"userId\", this.user);\n      }\n\n      // console.log(this.ip, this.user, \"hellooooooooo\");\n    },\n\n    async saveConversationId(conversationId) {\n      // Check if conversation ID has expired\n\n      const timestamp = Date.now();\n\n      const conversationData = {\n        fetchState: \"partial\",\n        read: true,\n        expire: timestamp,\n        ended: false,\n      };\n      this.addConversation(conversationId, conversationData);\n\n      // localStorage.setItem(\"conversationId\", conversationData);\n    },\n\n    async createNewConvo() {\n      this.isLoading = true;\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\n\n      const conversationsById = savedState.conversations.byId;\n\n      const lastIdKey = Object.keys(conversationsById).pop();\n\n      const lastConversation = Object.values(conversationsById).pop();\n      const lastConversationEnded = lastConversation\n        ? lastConversation.ended\n        : true;\n      console.log(\n        \"Last conversation ended:\",\n        lastConversationEnded,\n        lastConversation,\n        lastIdKey\n      );\n\n      if (lastConversationEnded) {\n        this.isLoading = true;\n        let chatId = await createConversationId(this.user);\n        console.log(chatId);\n        await this.saveConversationId(chatId);\n        this.isLoading = false;\n        this.$router.push({\n          name: \"conversation\",\n          params: { id: chatId },\n        });\n      } else {\n        this.$router.push({\n          name: \"conversation\",\n          params: { id: lastIdKey },\n        });\n        this.isLoading = false;\n      }\n    },\n  },\n\n  async mounted() {\n    this.checkFirst();\n\n    const savedState =\n      JSON.parse(localStorage.getItem(\"appState\")) || this.stateval;\n    await this.updateState(savedState);\n\n    this.removeConversation(\"undefined\");\n\n    // this.addConversation(\"ei6I4cTFfnyA6KeiQXck\", {\n    //   fetchState: \"partial\",\n    //   read: true,\n    //   expire: 1679263135957,\n    // });\n  },\n\n  async created() {\n    await this.checkFirst();\n    await this.get_creat_user();\n    const appState = JSON.parse(localStorage.getItem(\"appState\")) || {};\n    // console.log(\"Created...\", appState.router.location.name);\n\n    if (appState.router.location.name === \"conversation\") {\n      console.log(\"here hello\");\n      this.showPop = true;\n      this.$router.push(appState.router.location.pathname);\n    }\n  },\n};\n</script>\n\n<style scope>\n.badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: red;\n  color: white;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  font-size: 12px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { initializeApp } from \"firebase/app\";\r\n\r\nimport { getFirestore, Timestamp } from \"firebase/firestore\";\r\n\r\nfunction StartFirebase() {\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyCkr7FFrAeCGR1GRo_cUNPyFf5kz8Zm9Ho\",\r\n    authDomain: \"chatly-9e73d.firebaseapp.com\",\r\n    projectId: \"chatly-9e73d\",\r\n    storageBucket: \"chatly-9e73d.appspot.com\",\r\n    messagingSenderId: \"692360901272\",\r\n    appId: \"1:692360901272:web:f2e46455a122ed050216ed\",\r\n    measurementId: \"G-DN2SKEJYP6\",\r\n  };\r\n  const app = initializeApp(firebaseConfig);\r\n  return getFirestore(app);\r\n}\r\n\r\nexport default StartFirebase;\r\n","import StartFirebase from \"./firebaseDb\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  doc,\r\n  query,\r\n  where,\r\n  addDoc,\r\n  serverTimestamp,\r\n  orderBy,\r\n  updateDoc,\r\n  limit,\r\n} from \"firebase/firestore\";\r\nconst db = StartFirebase();\r\n\r\nconst createConversationId = async (user) => {\r\n  const dbref = collection(db, \"conversation\");\r\n  let val = \"\";\r\n  try {\r\n    const docRef = await addDoc(dbref, { step: 0, user: user, agent: \"\" }).then(\r\n      async (res) => {\r\n        // console.log(res, \"this is the resspin\");\r\n        // console.log(\"Document written with ID: \", res.id);\r\n        val = res.id;\r\n        const conversationDocRef = doc(db, \"conversation\", val);\r\n      }\r\n    );\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n  return val;\r\n};\r\n\r\nconst getStepConversation = async (id) => {\r\n  const snap = await getDoc(doc(db, \"conversation\", id));\r\n\r\n  if (snap.exists()) {\r\n    console.log(snap.data(), \"steppsss\");\r\n    return snap.data().step;\r\n  } else {\r\n    console.log(\"No such document\");\r\n  }\r\n};\r\n\r\nconst getConversationAgent = async (id) => {\r\n  const snap = await getDoc(doc(db, \"conversation\", id));\r\n\r\n  if (snap.exists()) {\r\n    // console.log(snap.data(), \"steppsss\");\r\n    return snap.data().agent;\r\n  } else {\r\n    console.log(\"No such document\");\r\n  }\r\n};\r\n\r\nconst setStepConversation = async (id, step) => {\r\n  const collectRef = collection(db, \"conversation\");\r\n  try {\r\n    await updateDoc(doc(collectRef, id), { step: step });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst updateConversationAgent = async (id, agent) => {\r\n  const collectRef = collection(db, \"conversation\");\r\n  try {\r\n    await updateDoc(doc(collectRef, id), { agent: agent });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst saveChats = async (message, id) => {\r\n  console.log(message, id, \"trying to save\");\r\n\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n  const subcollectionRef = collection(parentDocRef, \"chat\");\r\n\r\n  const { text, type, user, isUser } = message;\r\n\r\n  const newMessage = {\r\n    text: text,\r\n    type: type,\r\n    user: user,\r\n    createdAt: serverTimestamp(),\r\n  };\r\n\r\n  // Add a new document to the sub-collection with the current timestamp\r\n  await addDoc(subcollectionRef, newMessage).then(async (res) => {\r\n    console.log(\"Document written with ID: \", res.id);\r\n\r\n    // Update the conversation document to indicate that a new message has been added\r\n    if (isUser) {\r\n      await updateDoc(parentDocRef, {\r\n        agentNewmessage: true,\r\n        lastMsgTime: serverTimestamp(),\r\n      });\r\n      console.log(\"Conversation document updated with agentNewmessage: true\");\r\n    } else {\r\n      await updateDoc(parentDocRef, {\r\n        userNewmessage: true,\r\n        lastMsgTime: serverTimestamp(),\r\n      });\r\n      console.log(\"Conversation document updated with userNewmessage: true\");\r\n    }\r\n  });\r\n};\r\n\r\nconst getConversation = async (id) => {\r\n  const snap = await getDoc(doc(db, \"conversation\", id));\r\n\r\n  if (snap.exists()) {\r\n    // console.log(snap.data(), \"steppsss\");\r\n    return snap.data();\r\n  } else {\r\n    console.log(\"No such document\");\r\n  }\r\n};\r\n\r\nconst getLastChat = async (id) => {\r\n  // Create a reference to the parent document that contains the sub-collection\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n\r\n  // Create a reference to the sub-collection and order by \"createdAt\" in descending order\r\n  const subcollectionRef = collection(parentDocRef, \"chat\");\r\n  const queryVal = query(\r\n    subcollectionRef,\r\n    orderBy(\"createdAt\", \"desc\"),\r\n    limit(1)\r\n  );\r\n\r\n  let parentData = await getDoc(doc(db, \"conversation\", id));\r\n  if (parentData.exists()) {\r\n    // console.log(snap.data(), \"steppsss\");\r\n    parentData = parentData.data();\r\n  }\r\n  // Get the first document in the query snapshot\r\n  const querySnapshot = await getDocs(queryVal);\r\n\r\n  // console.log(querySnapshot.docs[0].data(), \"fetch data\");\r\n  if (querySnapshot.docs.length > 0) {\r\n    const lastChatData = querySnapshot.docs[0].data();\r\n    return { lastChatData, parentData };\r\n  } else {\r\n    return { lastChatData: null, parentData };\r\n  }\r\n};\r\n\r\nconst findRefobj = async (table, obj, objval) => {\r\n  // console.log(table, obj, objval);\r\n  const refCollectionRef = collection(db, table);\r\n  const q = query(refCollectionRef, where(obj, \"==\", objval));\r\n  const querySnapshot = await getDocs(q);\r\n  // console.log(\"got here again\", querySnapshot);\r\n  if (querySnapshot.size === 0) {\r\n    // console.log(\"false\");\r\n    return false;\r\n  }\r\n\r\n  // console.log(\"got here again\");\r\n\r\n  // console.log(\"size\", querySnapshot.docs[0].data());\r\n\r\n  let valdata = querySnapshot.docs[0].data();\r\n  let value = {\r\n    wallet: valdata.wallet,\r\n    ref_code: valdata.ref_code,\r\n  };\r\n\r\n  // console.log(value, \"value\");\r\n\r\n  return valdata;\r\n};\r\n\r\nconst updateConvo = async (id, data) => {\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n  await updateDoc(parentDocRef, data);\r\n};\r\n\r\nconst getConvoChats = async (id) => {\r\n  // Create a reference to the parent document that contains the sub-collection\r\n  // console.log(\"convo ID\", id);\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n  const value = [];\r\n\r\n  // Create a reference to the sub-collection\r\n  // const subcollectionRef = collection(parentDocRef, \"chat\");\r\n\r\n  // Create a reference to the sub-collection and order by \"createdAt\" in descending order\r\n  const subcollectionRef = collection(parentDocRef, \"chat\");\r\n\r\n  const orderedSubcollection = query(\r\n    subcollectionRef,\r\n    orderBy(\"createdAt\", \"asc\")\r\n  );\r\n\r\n  await updateDoc(parentDocRef, { userNewmessage: false });\r\n\r\n  // Get the documents in the sub-collection ordered by \"createdAt\"\r\n  const querySnapshot = await getDocs(orderedSubcollection);\r\n\r\n  // console.log(\"docs\", querySnapshot);\r\n\r\n  // Iterate over the documents in the query snapshot\r\n  querySnapshot.forEach((doc) => {\r\n    // console.log(doc.id, \" => \", doc.data());\r\n    value.push(doc.data());\r\n  });\r\n\r\n  return value;\r\n};\r\n\r\nconst readMessage = async (id) => {\r\n  // Create a reference to the parent document that contains the sub-collection\r\n  // console.log(\"convo ID\", id);\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n\r\n  await updateDoc(parentDocRef, { userNewmessage: false });\r\n};\r\n\r\nexport {\r\n  setStepConversation,\r\n  createConversationId,\r\n  saveChats,\r\n  getConvoChats,\r\n  getStepConversation,\r\n  getLastChat,\r\n  updateConversationAgent,\r\n  getConversationAgent,\r\n  findRefobj,\r\n  readMessage,\r\n  getConversation,\r\n  updateConvo,\r\n};\r\n","import { render } from \"./App.vue?vue&type=template&id=7a2e71e7\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7a2e71e7&scope=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <transition name=\"bounce\">\r\n      <div\r\n        class=\"chat-container\"\r\n        :style=\"[\r\n          showPop\r\n            ? 'border: 1px solid rgb(242, 242, 242); box-shadow: 6px 2px 15px 5px rgba(0, 0, 0, 0.1);'\r\n            : '',\r\n        ]\"\r\n      >\r\n        <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n        <chatmaintest\r\n          :checkFirst=\"checkFirst\"\r\n          :updateState=\"updateState\"\r\n          :addConversation=\"addConversation\"\r\n          :updateConversation=\"updateConversation\"\r\n          :removeConversation=\"removeConversation\"\r\n          :getConversationBy=\"getConversationBy\"\r\n          :showChat=\"showChat\"\r\n          :showPop=\"showPop\"\r\n          :stateval=\"stateval\"\r\n          :user=\"user\"\r\n          :unreadMsg=\"unreadMsg\"\r\n          :botName=\"botName\"\r\n          @createNewConvo=\"createNewConvo\"\r\n          @updateUnreadMsg=\"updateUnreadMsg\"\r\n          v-if=\"showPop\"\r\n        />\r\n      </div>\r\n    </transition>\r\n\r\n    <div class=\"chat-icon\" @click=\"showPop = !showPop\">\r\n      <transition name=\"bounce\">\r\n        <svg\r\n          v-if=\"!showPop\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n        >\r\n          <path\r\n            d=\"M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64h96v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L309.3 416H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z\"\r\n          />\r\n          <circle cx=\"80%\" cy=\"20%\" r=\"25\" fill=\"red\" />\r\n          <text\r\n            x=\"77%\"\r\n            y=\"23%\"\r\n            font-size=\"14px\"\r\n            fill=\"white\"\r\n            text-anchor=\"middle\"\r\n          >\r\n            1\r\n          </text>\r\n        </svg>\r\n      </transition>\r\n      <transition name=\"bounce\">\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          v-show=\"showPop\"\r\n        >\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            clip-rule=\"evenodd\"\r\n            d=\"M18.601 8.39897C18.269 8.06702 17.7309 8.06702 17.3989 8.39897L12 13.7979L6.60099 8.39897C6.26904 8.06702 5.73086 8.06702 5.39891 8.39897C5.06696 8.73091 5.06696 9.2691 5.39891 9.60105L11.3989 15.601C11.7309 15.933 12.269 15.933 12.601 15.601L18.601 9.60105C18.9329 9.2691 18.9329 8.73091 18.601 8.39897Z\"\r\n            fill=\"white\"\r\n          ></path>\r\n        </svg>\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\r\nimport chatmaintest from \"./views/test/chatmaintest.vue\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showChat: false,\r\n      showPop: false,\r\n      user: \"\",\r\n      ip: \"\",\r\n      stateval: {},\r\n      unreadMsg: 0,\r\n      botName: \"Alex\",\r\n      isLoading: false,\r\n    };\r\n  },\r\n  components: { chatmaintest },\r\n\r\n  methods: {\r\n    updateUnreadMsg(value) {\r\n      this.unreadMsg = this.unreadMsg + value;\r\n      //   console.log(value, \"updating unread messge\", this.unreadMsg);\r\n    },\r\n    async checkFirst() {\r\n      let statecheck = localStorage.getItem(\"appState\");\r\n      if (statecheck === null) {\r\n        let data = {\r\n          user: {\r\n            role: \"lead\",\r\n            locale: \"en\",\r\n            hasConversations: true,\r\n          },\r\n          conversations: {\r\n            byId: {},\r\n          },\r\n        };\r\n        localStorage.setItem(\"appState\", JSON.stringify(data));\r\n      }\r\n    },\r\n    async updateState(newState) {\r\n      this.stateval = newState;\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n    addConversation(conversationId, conversationData) {\r\n      const newState = {\r\n        ...this.stateval,\r\n        conversations: {\r\n          ...this.stateval.conversations,\r\n          byId: {\r\n            ...this.stateval.conversations.byId,\r\n            [conversationId]: conversationData,\r\n          },\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n    updateConversation(conversationId, conversationData) {\r\n      const newState = {\r\n        ...this.stateval,\r\n        conversations: {\r\n          ...this.stateval.conversations,\r\n          byId: {\r\n            ...this.stateval.conversations.byId,\r\n            [conversationId]: {\r\n              ...this.stateval.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    removeConversation(conversationId) {\r\n      const {\r\n        [conversationId]: removedConversation,\r\n        ...remainingConversations\r\n      } = this.stateval.conversations.byId;\r\n      const newState = {\r\n        ...this.stateval,\r\n        conversations: {\r\n          ...this.stateval.conversations,\r\n          byId: remainingConversations,\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n\r\n    async get_creat_user() {\r\n      // Check if we have a user ID cookie\r\n      // this.setCookie(\"userId\", \"10511221794\", 7)\r\n      // const userIdCookie = await this.getCookie(\"userId\");\r\n\r\n      const userIdCookie = localStorage.getItem(\"userId\");\r\n\r\n      // console.log(userIdCookie, \"okay the this\");\r\n\r\n      if (userIdCookie) {\r\n        // If we have a user ID cookie, use that\r\n        this.user = userIdCookie;\r\n      } else {\r\n        // Otherwise, fetch the user's IP address and create a new user ID\r\n        await fetch(\"https://api.ipify.org?format=json\")\r\n          .then((x) => x.json())\r\n          .then(({ ip }) => {\r\n            this.user = ip.split(\".\").join(\"\");\r\n            this.ip = ip;\r\n          });\r\n\r\n        // Set the new user ID as a cookie\r\n        // Cookies.set(\"userId\", this.user, { expires: 365 });\r\n        localStorage.setItem(\"userId\", this.user);\r\n      }\r\n\r\n      // console.log(this.ip, this.user, \"hellooooooooo\");\r\n    },\r\n\r\n    async saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n        ended: false,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    async createNewConvo() {\r\n      this.isLoading = true;\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n      const conversationsById = savedState.conversations.byId;\r\n\r\n      const lastIdKey = Object.keys(conversationsById).pop();\r\n\r\n      const lastConversation = Object.values(conversationsById).pop();\r\n      const lastConversationEnded = lastConversation\r\n        ? lastConversation.ended\r\n        : true;\r\n      //   console.log(\r\n      //     \"Last conversation ended:\",\r\n      //     lastConversationEnded,\r\n      //     lastConversation,\r\n      //     lastIdKey\r\n      //   );\r\n\r\n      if (lastConversationEnded) {\r\n        this.isLoading = true;\r\n        let chatId = await createConversationId(this.user);\r\n        // console.log(chatId);\r\n        await this.saveConversationId(chatId);\r\n        this.isLoading = false;\r\n        this.$router.push({\r\n          name: \"conversation\",\r\n          params: { id: chatId },\r\n        });\r\n      } else {\r\n        this.$router.push({\r\n          name: \"conversation\",\r\n          params: { id: lastIdKey },\r\n        });\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    this.checkFirst();\r\n\r\n    const savedState =\r\n      JSON.parse(localStorage.getItem(\"appState\")) || this.stateval;\r\n    await this.updateState(savedState);\r\n\r\n    this.removeConversation(\"undefined\");\r\n\r\n    // this.addConversation(\"ei6I4cTFfnyA6KeiQXck\", {\r\n    //   fetchState: \"partial\",\r\n    //   read: true,\r\n    //   expire: 1679263135957,\r\n    // });\r\n  },\r\n\r\n  async created() {\r\n    await this.checkFirst();\r\n    await this.get_creat_user();\r\n    const appState = JSON.parse(localStorage.getItem(\"appState\")) || {};\r\n    // console.log(\"Created...\", appState.router.location.name);\r\n\r\n    if (appState.router.location.name === \"conversation\") {\r\n      //   console.log(\"here hello\");\r\n      this.showPop = true;\r\n      this.$router.push(appState.router.location.pathname);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scope>\r\n.badge {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -5px;\r\n  background-color: red;\r\n  color: white;\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\nnav {\r\n  padding: 30px;\r\n}\r\n\r\nnav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\nnav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div v-if=\"!showingConvo\">\r\n      <div id=\"chatview\">\r\n        <transition name=\"bounce\">\r\n          <div>\r\n            <div class=\"chat-header\">\r\n              <h3>Chatly</h3>\r\n              <!-- <i class=\"fa fa-times\" @click=\"showPop = false\"></i> -->\r\n            </div>\r\n            <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n              <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n              <!-- Line loader for chat timeout -->\r\n              <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n              <div class=\"message-box\">\r\n                <v-list item-props lines=\"two\">\r\n                  <SingleChat\r\n                    :convo=\"convo\"\r\n                    v-for=\"convo in sortedConversations\"\r\n                    :key=\"convo.text\"\r\n                    :agent=\"convo.agent\"\r\n                    :user=\"user\"\r\n                    @updateUnreadMsg=\"updateUnreadMsg\"\r\n                    class=\"chat-transition\"\r\n                    @click=\"show(convo.conversationId)\"\r\n                  />\r\n                </v-list>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"chat-footer\">\r\n              <v-btn\r\n                @click=\"createNewConvo\"\r\n                class=\"start\"\r\n                :aria-details=\"getCount\"\r\n                getCount\r\n                v-if=\"!getCount && !isLoading\"\r\n              >\r\n                Start Conversation\r\n              </v-btn>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n    <test\r\n      :botName=\"botName\"\r\n      :user=\"user\"\r\n      :conversationId=\"conversationId\"\r\n      @goBack=\"goBack\"\r\n      @goBackTo=\"goBackTo\"\r\n      v-else\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SingleChat from \"../../components/test/singleChat.vue\";\r\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\r\nimport io from \"socket.io-client\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\nimport test from \"./testing.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      socketMainpage: null,\r\n      chatActive: false,\r\n      isLoading: false,\r\n      conversations: [],\r\n      showingConvo: false,\r\n      conversationId: \"\",\r\n    };\r\n  },\r\n  props: [\"showPop\", \"addConversation\", \"user\", \"botName\"],\r\n  components: {\r\n    SingleChat,\r\n    test,\r\n  },\r\n  methods: {\r\n    show(convoId) {\r\n      this.conversationId = \"\";\r\n      this.conversationId = convoId;\r\n      this.showingConvo = true;\r\n    },\r\n\r\n    async goBack() {\r\n      this.showingConvo = false;\r\n      await this.init();\r\n      this.$forceUpdate();\r\n    },\r\n\r\n    async goBackTo() {\r\n      this.showingConvo = false;\r\n      await this.init();\r\n      this.$forceUpdate();\r\n    },\r\n\r\n    updateUnreadMsg() {\r\n      this.$emit(\"updateUnreadMsg\");\r\n    },\r\n\r\n    async saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n        ended: false,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    handleNewMessage(newMessage) {\r\n      //   console.log(newMessage.createdAt, \"time check\");\r\n      const conversationIndex = this.conversations.findIndex(\r\n        (c) => c.conversationId === newMessage.conversationId\r\n      );\r\n      if (conversationIndex > -1) {\r\n        // Update the conversation with the new message text\r\n        const conversation = this.conversations[conversationIndex];\r\n        conversation.text = newMessage.text;\r\n        conversation.userNewmessage = true;\r\n        conversation.createdAt = newMessage.createdAt;\r\n        this.conversations.splice(conversationIndex, 1, conversation);\r\n\r\n        // Move the conversation to the top of the list\r\n      }\r\n    },\r\n\r\n    async getAllInfo(conversation) {\r\n      const result = await getLastChat(conversation);\r\n\r\n      let userNewmessage = (await result.parentData.userNewmessage) || false;\r\n      let lastMsg = await result.lastChatData;\r\n      if (result.lastChatData === null) {\r\n        lastMsg = {\r\n          text: \"hello message\",\r\n          user: \"Bot\",\r\n          createdAt: Timestamp.now(),\r\n        };\r\n      }\r\n      let ended;\r\n      if (result.parentData.hasOwnProperty(\"ended\")) {\r\n        ended = result.parentData.ended;\r\n      } else {\r\n        ended = false;\r\n      }\r\n\r\n      return {\r\n        conversationId: conversation,\r\n        text: lastMsg.text,\r\n        user: lastMsg.user,\r\n        agent: result.parentData.agent,\r\n        ended,\r\n        userNewmessage: userNewmessage,\r\n        createdAt: lastMsg.createdAt,\r\n      };\r\n    },\r\n\r\n    async createNewConvo() {\r\n      this.isLoading = true;\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n      const conversationsById = savedState.conversations.byId;\r\n\r\n      const lastIdKey = Object.keys(conversationsById).pop();\r\n\r\n      const lastConversation = Object.values(conversationsById).pop();\r\n      const lastConversationEnded = lastConversation\r\n        ? lastConversation.ended\r\n        : true;\r\n      //   console.log(\r\n      //     \"Last conversation ended:\",\r\n      //     lastConversationEnded,\r\n      //     lastConversation,\r\n      //     lastIdKey\r\n      //   );\r\n\r\n      if (lastConversationEnded) {\r\n        this.isLoading = true;\r\n        let chatId = await createConversationId(this.user);\r\n        // console.log(chatId);\r\n        await this.saveConversationId(chatId);\r\n        this.isLoading = false;\r\n        this.show(chatId);\r\n      } else {\r\n        this.show(lastIdKey);\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      const conversationId = localStorage.getItem(\"conversationId\");\r\n      if (conversationId) {\r\n        const conversationTimestamp = parseInt(conversationId.split(\"-\")[1]);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n\r\n    async init() {\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n      const conversationsById = savedState.conversations.byId;\r\n\r\n      const valuesArray = [];\r\n\r\n      for (const id in conversationsById) {\r\n        const obj = { ...conversationsById[id], id };\r\n        valuesArray.push(obj);\r\n      }\r\n\r\n      const reversedArray = valuesArray.reverse(); // reverse the order of the array\r\n\r\n      const firstThree = reversedArray.slice(0, 3); // get the first three elements of the reversed array\r\n\r\n      //   console.log(firstThree, \"data i want\");\r\n\r\n      for (let i = 0; i < firstThree.length; i++) {\r\n        const element = firstThree[i];\r\n        let convoInfo = await this.getAllInfo(element.id);\r\n\r\n        // Check if the conversation already exists in the array\r\n        const index = this.conversations.findIndex(\r\n          (c) => c.conversationId === convoInfo.conversationId\r\n        );\r\n\r\n        // If the conversation exists, update the existing object\r\n        if (index !== -1) {\r\n          this.conversations[index] = convoInfo;\r\n        } else {\r\n          // Otherwise, add the new object to the array\r\n          this.conversations.push(convoInfo);\r\n        }\r\n      }\r\n\r\n      if (firstThree.length > 0) {\r\n        this.socketMainpage.emit(\"join\", {\r\n          id: firstThree[0].id,\r\n          user: this.user,\r\n        });\r\n      }\r\n\r\n      //   console.log(this.conversations, \"data i want\");\r\n\r\n      this.isLoading = false;\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.isLoading = true;\r\n    this.socketMainpage = io(\"http://localhost:3000/\");\r\n    this.socketMainpage.on(\"connect\", () => {\r\n      //   console.log(\"Connected to server\");\r\n    });\r\n\r\n    this.socketMainpage.on(\"newMessage\", (message) => {\r\n      message.createdAt = Timestamp.now();\r\n      //   console.log(message.conversationId, this.user, \"the new message\");\r\n      this.handleNewMessage(message);\r\n    });\r\n\r\n    await this.init();\r\n  },\r\n  computed: {\r\n    sortedConversations() {\r\n      return this.conversations.slice().sort((a, b) => {\r\n        return b.createdAt.seconds - a.createdAt.seconds;\r\n      });\r\n    },\r\n\r\n    getCount() {\r\n      const endedCount = this.conversations.reduce((count, message) => {\r\n        return count + (!message.ended ? 1 : 0);\r\n      }, 0);\r\n      //   console.log(\"computed\", endedCount);\r\n\r\n      return endedCount > 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* @import url('https://use.fontawesome.com/f06b0f987d.js\"'); */\r\n\r\n.chat-transition {\r\n  transition: all 0.3s ease-out;\r\n}\r\n\r\n.chat-icon {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  cursor: pointer;\r\n  background: #1263ff;\r\n  padding: 15px;\r\n  border-radius: 50%;\r\n  width: 55px;\r\n  height: 52px;\r\n  z-index: 999999999;\r\n}\r\n\r\n.chat-icon svg {\r\n  fill: #fff;\r\n}\r\n\r\n.chat-container {\r\n  position: fixed;\r\n  min-width: 454px;\r\n  max-width: 454px;\r\n  z-index: 999999999;\r\n\r\n  /* min-height: 500px;\r\n      max-height: 500px; */\r\n\r\n  bottom: 90px;\r\n  right: 20px;\r\n  border-radius: 8px;\r\n  /* border: 1px solid rgb(242, 242, 242); */\r\n  background: #f8f8f8;\r\n  /* box-shadow: 6px 2px 15px 5px rgba(0, 0, 0, 0.1); */\r\n  z-index: 999;\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  background: #0056ff 0% 0% no-repeat padding-box;\r\n  color: #ffffff;\r\n}\r\n\r\n.chat-header h3 {\r\n  margin: 0;\r\n}\r\n\r\n.chat-header .fa-times {\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-body {\r\n  height: 350px;\r\n  overflow-y: auto;\r\n  background: #ffffff;\r\n  padding: 15px;\r\n}\r\n\r\n.chat-body::-webkit-scrollbar-track {\r\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  border-radius: 10px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.chat-body::-webkit-scrollbar {\r\n  width: 12px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.chat-body::-webkit-scrollbar-thumb {\r\n  border-radius: 10px;\r\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  background-color: #555;\r\n}\r\n\r\n.chat-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n}\r\n\r\n.chat-footer input[type=\"text\"] {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 20px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.chat-footer textarea {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 20px;\r\n  margin-right: 20px;\r\n  resize: none;\r\n  overflow: auto;\r\n  max-height: 200px;\r\n}\r\n\r\n.chat-footer > button {\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  background-color: rgb(17, 103, 255);\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-footer .start {\r\n  width: 425px;\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  background-color: rgb(17, 103, 255);\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.bounce-enter-active {\r\n  animation: bounce-in 0.5s;\r\n}\r\n.bounce-leave-active {\r\n  animation: bounce-in 0.5s reverse;\r\n}\r\n@keyframes bounce-in {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  50% {\r\n    transform: scale(1.25);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.message-bubble {\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  margin-bottom: 10px;\r\n  /* max-width: 80%; */\r\n  word-wrap: break-word;\r\n  width: 100%;\r\n}\r\n\r\n/* for the chip select */\r\n\r\n.md-chip {\r\n  display: inline-block;\r\n  background: transparent;\r\n  padding: 0 12px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 32px;\r\n  font-size: 15px;\r\n}\r\n\r\n.md-chip.md-chip-hover:hover {\r\n  background: #ccc;\r\n}\r\n\r\n.md-chip-clickable {\r\n  cursor: pointer;\r\n}\r\n\r\n.md-chip,\r\n.md-chip-icon {\r\n  height: 32px;\r\n  line-height: 32px;\r\n}\r\n\r\n.md-chip-icon {\r\n  display: block;\r\n  float: left;\r\n  background: #009587;\r\n  width: 32px;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  color: white;\r\n  margin: 0 8px 0 -12px;\r\n}\r\n\r\n.md-chip-remove {\r\n  display: inline-block;\r\n  background: #aaa;\r\n  border: 0;\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  margin: 0 -4px 0 4px;\r\n  cursor: pointer;\r\n  font: inherit;\r\n  line-height: 20px;\r\n}\r\n\r\n.md-chip-remove:after {\r\n  color: #e0e0e0;\r\n  content: \"x\";\r\n}\r\n.md-chip-remove:hover {\r\n  background: #999;\r\n}\r\n.md-chip-remove:active {\r\n  background: #777;\r\n}\r\n\r\n.md-chips {\r\n  padding: 12px 0;\r\n}\r\n\r\n.md-chips.md-chip {\r\n  margin: 0 5px 3px 0;\r\n}\r\n\r\n.md-chip-raised {\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  display: none;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked + label {\r\n  -webkit-transition: all 500ms ease;\r\n  transition: all 500ms ease;\r\n  background-color: #1579b3;\r\n  color: white;\r\n  border-color: #fc6c27;\r\n}\r\n\r\n/* chat csss */\r\n\r\n.chat-body .message-content__item .chat-body-header {\r\n  border-bottom: 1px solid #e0e2e4;\r\n  padding: 20px 15px;\r\n  position: relative;\r\n  height: 95px;\r\n}\r\n.chat-body .message-content__item .chat-body-header .name {\r\n  font-size: 21px;\r\n  color: #535357;\r\n  font-weight: 500;\r\n}\r\n.chat-body .message-content__item .chat-body-header .phone {\r\n  font-size: 16px;\r\n  color: #a3a3a7;\r\n}\r\n.chat-body .message-content__item .chat-body-header img {\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 15px;\r\n}\r\n.chat-body .message-box {\r\n  /* padding: 25px;\r\n      height: calc(100% - 175px); */\r\n}\r\n.chat-body .message-box .message-box__item {\r\n  margin-bottom: 15px;\r\n}\r\n.chat-body .message-box .message-box__item.incoming {\r\n  text-align: left;\r\n}\r\n.chat-body .message-box .message-box__item.incoming .time {\r\n  right: 0;\r\n}\r\n.chat-body .message-box .message-box__item.outgoing {\r\n  text-align: right;\r\n}\r\n.chat-body .message-box .message-box__item.outgoing .time {\r\n  left: 0;\r\n}\r\n.chat-body .message-box .message-box__item .name {\r\n  color: #535357;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n.chat-body .message-box .message-box__item .bot-text {\r\n  background: #f4f3f6 0% 0% no-repeat padding-box;\r\n  display: inline-block;\r\n  padding: 20px 15px;\r\n  /* padding-right: 50px; */\r\n  font-size: 15px;\r\n  color: #535357;\r\n  border-radius: 7px;\r\n  max-width: 61%;\r\n  margin-top: 3px;\r\n  text-align: left;\r\n  position: relative;\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n.chat-body .message-box .message-box__item .user-text {\r\n  background: #0056ff 0% 0% no-repeat padding-box;\r\n  display: inline-block;\r\n  padding: 20px 15px;\r\n  /* padding-right: 50px; */\r\n  font-size: 15px;\r\n  color: #ffffff;\r\n  border-radius: 7px;\r\n  max-width: 62%;\r\n  margin-top: 3px;\r\n  text-align: left;\r\n  position: relative;\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n.chat-body .message-form {\r\n  height: 75px;\r\n  border-top: 1px solid #e0e2e4;\r\n  padding: 20px 15px;\r\n}\r\n.chat-body .message-form input {\r\n  width: calc(100% - 50px);\r\n  border: none;\r\n  font-size: 16px;\r\n  margin-top: 5px;\r\n}\r\n.chat-body .message-form img {\r\n  float: right;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* SPINNER */\r\n\r\n.spinner {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 45px;\r\n  height: 9px;\r\n  margin-left: -22px;\r\n  margin-top: -13px;\r\n  text-align: center;\r\n}\r\n\r\n.spinner > div {\r\n  width: 9px;\r\n  height: 9px;\r\n  background-color: #dcdcdc;\r\n  border-radius: 100%;\r\n  display: inline-block;\r\n  -webkit-animation: bouncedelay 1.4s infinite ease-in-out;\r\n  animation: bouncedelay 1400ms ease-in-out infinite;\r\n  /* Prevent first frame from flickering when animation starts */\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n}\r\n\r\n.spinner .bounce1 {\r\n  -webkit-animation-delay: -0.32s;\r\n  animation-delay: -0.32s;\r\n}\r\n\r\n.spinner .bounce2 {\r\n  -webkit-animation-delay: -0.16s;\r\n  animation-delay: -0.16s;\r\n}\r\n\r\n@-webkit-keyframes bouncedelay {\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scale(0);\r\n    -webkit-transform: scale(0);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n    -webkit-transform: scale(1);\r\n  }\r\n}\r\n@keyframes bouncedelay {\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scale(0);\r\n    -webkit-transform: scale(0);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n    -webkit-transform: scale(1);\r\n  }\r\n}\r\n#container {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  display: -ms-flexbox;\r\n  justify-content: space-around;\r\n  -webkit-justify-content: space-around;\r\n  align-items: center;\r\n  -webkit-align-items: center;\r\n}\r\n\r\n#loading-bubble {\r\n  display: flex;\r\n  display: -ms-flexbox;\r\n  justify-content: center;\r\n  -webkit-justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  background: #f4f3f6 0% 0% no-repeat padding-box;\r\n  display: inline-block;\r\n  padding: 20px 15px;\r\n  /* padding-right: 50px; */\r\n  font-size: 15px;\r\n  color: #535357;\r\n  border-radius: 7px;\r\n  max-width: 55%;\r\n  margin-top: 3px;\r\n  text-align: left;\r\n  -webkit-animation: message-bounce 2.5s infinite ease-in-out;\r\n  animation: message-bounce 2.5s ease-in-out infinite;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n}\r\n#loading-bubble.grey {\r\n  background-color: #a5b0b5;\r\n}\r\n\r\n#loading-bubble .spinner {\r\n  position: static !important;\r\n  margin-top: -11px;\r\n  margin-left: 0px;\r\n}\r\n#loading-bubble .spinner div {\r\n  background-color: #2e66bd;\r\n}\r\n\r\n@-webkit-keyframes message-bounce {\r\n  0% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    -webkit-transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n}\r\n\r\n@keyframes message-bounce {\r\n  0% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    -webkit-transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n}\r\n\r\n.join-message {\r\n  background-color: green;\r\n  color: white;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  max-width: 80%;\r\n}\r\n\r\n.just-joined {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n}\r\n\r\n.line-loader {\r\n  height: 4px;\r\n  background-color: #ccc;\r\n  position: relative;\r\n}\r\n\r\n.line-loader:before {\r\n  content: \"\";\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  background-color: #007aff;\r\n  animation: line-loader 5s linear;\r\n  animation-fill-mode: forwards;\r\n}\r\n\r\n@keyframes line-loader {\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 32px;\r\n  top: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  opacity: 0.3;\r\n}\r\n.close:hover {\r\n  opacity: 1;\r\n}\r\n.close:before,\r\n.close:after {\r\n  position: absolute;\r\n  left: 15px;\r\n  content: \" \";\r\n  height: 15px;\r\n  width: 2px;\r\n  background-color: #fff;\r\n}\r\n.close:before {\r\n  transform: rotate(45deg);\r\n}\r\n.close:after {\r\n  transform: rotate(-45deg);\r\n}\r\n\r\n.loading-div {\r\n  position: absolute;\r\n  /* top: 0; */\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  z-index: 1000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.loading-div::after {\r\n  content: \"\";\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #ccc;\r\n  border-top-color: #333;\r\n  border-radius: 50%;\r\n  animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div v-if=\"loaded\">\r\n    <v-list-item\r\n      :title=\"convo.text\"\r\n      :subtitle=\"convo.subtitle\"\r\n      :prepend-avatar=\"imageSrc\"\r\n      append-icon\r\n    >\r\n      <template #append>\r\n        <v-badge color=\"green\" v-if=\"convo.userNewmessage\">\r\n          <!-- <v-icon small>mdi-circle-medium</v-icon> -->\r\n        </v-badge>\r\n      </template>\r\n      <template v-slot:subtitle=\"{}\">\r\n        <span class=\"text-primary\">\r\n          {{\r\n            capitalizeName(\r\n              convo.user === \"bot\"\r\n                ? \"Alex\"\r\n                : convo.user === user\r\n                ? \"you\"\r\n                : agent || \"bot\"\r\n            )\r\n          }}\r\n        </span>\r\n        &mdash; {{ timeAgo(convo.createdAt) }}\r\n      </template>\r\n    </v-list-item>\r\n    <v-divider inset></v-divider>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLastChat } from \"@/utils/firbase_utils\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\nexport default {\r\n  data: () => ({\r\n    loaded: false,\r\n  }),\r\n  props: [\"convo\", \"agent\", \"user\"],\r\n  components: {},\r\n\r\n  methods: {\r\n    capitalizeName(name) {\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n    timeAgo(timestamp) {\r\n      const now = dayjs();\r\n      const datetime = dayjs(timestamp.toDate());\r\n      let diff = datetime.diff(now, \"second\");\r\n      let suffix = diff > 0 ? \" ago\" : \" ago\";\r\n      diff = Math.abs(diff);\r\n\r\n      if (diff < 60) {\r\n        return `Just now`;\r\n      } else if (diff < 3600) {\r\n        let minutes = Math.floor(diff / 60);\r\n        return `${minutes} ${minutes > 1 ? \"minutes\" : \"minute\"}${suffix}`;\r\n      } else if (diff < 86400) {\r\n        let hours = Math.floor(diff / 3600);\r\n        return `${hours} ${hours > 1 ? \"hours\" : \"hour\"}${suffix}`;\r\n      } else {\r\n        let days = Math.floor(diff / 86400);\r\n        return `${days} ${days > 1 ? \"days\" : \"day\"}${suffix}`;\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    console.log(this.convo, \"the convovov\");\r\n    this.loaded = true;\r\n  },\r\n  computed: {\r\n    displayAgent() {\r\n      // let theUser = this.agent || \"bot\";\r\n      // if (this.convo.user === \"bot\") {\r\n      //   theUser = this.convo.user;\r\n      // }\r\n      return this.convo.user === \"bot\" ? \"Alex\" : this.agent || \"bot\";\r\n    },\r\n\r\n    imageSrc() {\r\n      // console.log(this.displayAgent, \"the agent \");\r\n      const url = `https://ui-avatars.com/api/?name=${this.displayAgent}&size=40&background=%23ccc&color=fff&color=fff&rounded=true&font-size=0.5`;\r\n      return url;\r\n    },\r\n\r\n    // ...other computed properties\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-list-item {\r\n  cursor: pointer !important;\r\n}\r\n</style>\r\n","import { render } from \"./singleChat.vue?vue&type=template&id=9f5dd014&scoped=true\"\nimport script from \"./singleChat.vue?vue&type=script&lang=js\"\nexport * from \"./singleChat.vue?vue&type=script&lang=js\"\n\nimport \"./singleChat.vue?vue&type=style&index=0&id=9f5dd014&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9f5dd014\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div v-show=\"!feedback\" id=\"chatview\">\r\n      <transition name=\"bounce\">\r\n        <div>\r\n          <div class=\"chat-header\">\r\n            <v-icon\r\n              style=\"cursor: pointer\"\r\n              @click=\"$emit('goBack')\"\r\n              start\r\n              icon=\"mdi-arrow-left\"\r\n            ></v-icon>\r\n            <h3>Chatly {{ agent }}</h3>\r\n            <NewImage v-if=\"agent !== null\" :name=\"botName\" size=\"50\" />\r\n            <v-btn\r\n              v-if=\"!ended && ended !== null\"\r\n              color=\"green\"\r\n              @click=\"showFeeback\"\r\n              >end Convo</v-btn\r\n            >\r\n          </div>\r\n          <div\r\n            v-if=\"showLoader\"\r\n            class=\"line-loader\"\r\n            :style=\"{ width: loaderWidth + '%' }\"\r\n          ></div>\r\n          <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n            <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n            <!-- Line loader for chat timeout -->\r\n            <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n            <div class=\"message-box\">\r\n              <div\r\n                v-for=\"(message, index) in messages\"\r\n                :key=\"index\"\r\n                :value=\"user\"\r\n                :style=\"[\r\n                  !checkNxt(message, index) ? 'margin-bottom: 6px;' : '',\r\n                ]\"\r\n                :class=\"[\r\n                  message.user === user\r\n                    ? 'message-box__item outgoing'\r\n                    : message.user === 'user'\r\n                    ? 'message-box__item outgoing'\r\n                    : 'message-box__item incoming',\r\n                ]\"\r\n              >\r\n                <div v-if=\"message.type === 'text'\">\r\n                  <div v-show=\"checkPrev(message, index)\" class=\"name\">\r\n                    <NewImage\r\n                      v-if=\"message.user !== user\"\r\n                      :name=\"message.user == 'bot' ? botName : message.user\"\r\n                      :size=\"20\"\r\n                    />\r\n                    {{\r\n                      capitalizeName(\r\n                        message.user == \"bot\"\r\n                          ? botName\r\n                          : message.user === user\r\n                          ? \"you\"\r\n                          : message.user\r\n                      )\r\n                    }}\r\n                  </div>\r\n\r\n                  <div\r\n                    :class=\"[\r\n                      message.user === user\r\n                        ? 'user-text'\r\n                        : message.user === 'user'\r\n                        ? 'user-text'\r\n                        : 'bot-text',\r\n                    ]\"\r\n                  >\r\n                    <span v-html=\"renderMessage(message.text)\"></span>\r\n                  </div>\r\n                </div>\r\n                <div v-else-if=\"message.type === 'option'\">\r\n                  <div\r\n                    v-for=\"(options, index) in message.option\"\r\n                    :key=\"index\"\r\n                    style=\"margin-bottom: 5px\"\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      :name=\"`name${index}`\"\r\n                      :value=\"options.text\"\r\n                      :id=\"index\"\r\n                    />\r\n                    <label\r\n                      :for=\"index\"\r\n                      class=\"md-chip md-chip-clickable md-chip-hover\"\r\n                      @click=\"clickSelect(options, message)\"\r\n                    >\r\n                      {{ options.text }}</label\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"message.type === 'joined'\" class=\"just-joined\">\r\n                  <span class=\"join-message\"\r\n                    >{{ message.text }} Just joined chat</span\r\n                  >\r\n                </div>\r\n              </div>\r\n\r\n              <div style=\"text-align: left; margin-bottom: 15px\">\r\n                <div v-if=\"isTyping || loading\" id=\"loading-bubble\">\r\n                  <div class=\"spinner\">\r\n                    <div class=\"bounce1\"></div>\r\n                    <div class=\"bounce2\"></div>\r\n                    <div class=\"bounce3\"></div>\r\n                  </div>\r\n                  <!-- <div>{{ typingMsg }}</div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"!ended\">\r\n            <div\r\n              v-if=\"!automated\"\r\n              class=\"chat-footer\"\r\n              :style=\"[ended ? 'display: block' : '']\"\r\n            >\r\n              <textarea\r\n                rows=\"1\"\r\n                ref=\"message\"\r\n                :disabled=\"automated\"\r\n                v-model=\"newMessage\"\r\n                @keyup.enter=\"sendMessage\"\r\n                @keydown.shift.enter.prevent=\"insertNewLine\"\r\n                @keyup=\"onTyping\"\r\n                type=\"text\"\r\n                placeholder=\"Type a message...\"\r\n                style=\"max-height: calc(3 * (1.5em + 2px))\"\r\n              ></textarea>\r\n              <button :disabled=\"newMessage === ''\" @click=\"sendMessage\">\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            v-else\r\n            class=\"chat-footer\"\r\n            :style=\"[ended ? 'display: block' : '']\"\r\n          >\r\n            <div\r\n              style=\"\r\n                margin: '24px auto 12px';\r\n                text-align: 'center';\r\n                font-size: '14px';\r\n                line-height: '21px';\r\n                padding-top: '0px';\r\n                color: 'rgb(115, 115, 115)';\r\n              \"\r\n            >\r\n              Your conversation has ended\r\n            </div>\r\n            <button @click=\"$emit('createNewConvo')\" class=\"start\">\r\n              Start Conversation\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n    <feedBack\r\n      @getConversationBy=\"getConversationBy\"\r\n      @updateConversation=\"updateConversation\"\r\n      v-show=\"feedback\"\r\n      :conversationId=\"conversationId\"\r\n      @goBack=\"feedback = false\"\r\n      @goBackTo=\"$emit('goBackTo')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import incoming from \"../../assets/incoming.mp3\";\r\n// import outgoing from \"../../assets/outgoing.mp3\";\r\nvar incoming = document.querySelector('audio[src$=\"incoming.mp3\"]');\r\nvar outgoing = document.querySelector('audio[src$=\"outgoing.mp3\"]');\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  readMessage,\r\n  getConvoChats,\r\n  saveChats,\r\n  setStepConversation,\r\n  getConversation,\r\n} from \"@/utils/firbase_utils\";\r\n\r\nimport NewImage from \"../../components/NewImage.vue\";\r\nimport feedBack from \"../../components/test/feedBack.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"chatView\",\r\n  data() {\r\n    return {\r\n      feedback: false,\r\n      socket: null,\r\n      automated: true,\r\n      loading: false,\r\n      showErrorDialog: true,\r\n      isLoading: false,\r\n      errorMessage: \"Error Message\",\r\n      showChat: false,\r\n      agent: null,\r\n      ip: \"\",\r\n      newMessage: \"\",\r\n      // conversationId: \"\",\r\n      isTyping: false,\r\n      joined: false,\r\n      typingMsg: \"\",\r\n      step: 0,\r\n      messages: [],\r\n      chatTimeout: null,\r\n      chatTimeoutDuration: 300000, // 5 minutes\r\n      chatStartTime: null,\r\n      loaderWidth: 0,\r\n      intervalIds: [],\r\n      showLoader: false,\r\n      convoEnded: false,\r\n      isBotEnabled: true,\r\n      ended: null,\r\n      flow: [\r\n        {\r\n          step: 0,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Hi! I'm glad to assist you today. Let's know each other:\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              text: \"Do you have an order already?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 1,\r\n                  text: \"Yes\",\r\n                },\r\n                {\r\n                  id: 2,\r\n                  text: \"No\",\r\n                },\r\n              ],\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Please select what you want to do with the order\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 1.1,\r\n                  text: \"i want to make a return/swap\",\r\n                },\r\n                {\r\n                  id: 1.2,\r\n                  text: \"I want to know the order status\",\r\n                },\r\n                {\r\n                  id: 1.3,\r\n                  text: \"Others\",\r\n                },\r\n              ],\r\n\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.1,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can easly Return or swap an order here: <a href='https://site.com/return' target='_blank'>https://site.com/return</a> \",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.2,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can track your order here: <a href='https://site.com/tracking' target='_blank'>https://site.com/tracking</a>\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.3,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"Tell us how else can we help?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"What would you like to do?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 2.1,\r\n                  text: \"Place a new order\",\r\n                },\r\n                {\r\n                  id: 2.2,\r\n                  text: \"I have a question\",\r\n                },\r\n                {\r\n                  id: 2.3,\r\n                  text: \"Others\",\r\n                },\r\n              ],\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.1,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"What products do you want?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.2,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can ask any question, we are here for you\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.3,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"What other thing do you want us to do for you?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      newMessage: \"\",\r\n    };\r\n  },\r\n  components: {\r\n    NewImage,\r\n    feedBack,\r\n  },\r\n  props: [\r\n    \"addConversation\",\r\n    \"user\",\r\n    \"updateConversation\",\r\n    \"getConversationBy\",\r\n    \"botName\",\r\n    \"createNewConvo\",\r\n    \"conversationId\",\r\n  ],\r\n  methods: {\r\n    insertNewLine(event) {\r\n      if (event.shiftKey) {\r\n        const textarea = this.$refs.message;\r\n        const startPos = textarea.selectionStart;\r\n        const endPos = textarea.selectionEnd;\r\n        const currentValue = this.newMessage;\r\n        this.newMessage = `${currentValue.substring(\r\n          0,\r\n          startPos\r\n        )}\\n${currentValue.substring(endPos)}`;\r\n        // prevent the default behavior of inserting a new line\r\n        event.preventDefault();\r\n      }\r\n    },\r\n    showFeeback() {\r\n      this.feedback = true;\r\n    },\r\n\r\n    async joinConversation(conversationId) {\r\n      if (!this.ended) {\r\n        this.socket.emit(\"join\", { id: conversationId, user: this.user });\r\n        // console.log(`${this.user} just joined conversation ${conversationId}`);\r\n        this.joined = true;\r\n      }\r\n    },\r\n\r\n    async sendMessage() {\r\n      if (this.newMessage === \"\") {\r\n        return;\r\n      }\r\n      const message = { text: this.newMessage };\r\n      // const response = await axios.post('/api/messages', { conversationId: this.conversationId, message });\r\n      await this.socket.emit(\"message\", {\r\n        conversationId: this.conversationId,\r\n        type: \"text\",\r\n        username: this.user,\r\n        message: message,\r\n        isUser: true,\r\n      });\r\n\r\n      this.socket.emit(\"typing\", {\r\n        status: false,\r\n        user: this.user,\r\n        id: this.conversationId,\r\n      });\r\n      this.chatStartTime = Date.now();\r\n      localStorage.setItem(\"chatStarted\", true);\r\n      localStorage.setItem(\r\n        `chatStartTime-${this.conversationId}`,\r\n        this.chatStartTime\r\n      );\r\n      this.resetChatTimeout();\r\n      this.newMessage = \"\";\r\n    },\r\n\r\n    onTyping() {\r\n      if (!this.isTyping) {\r\n        this.socket.emit(\"typing\", {\r\n          status: true,\r\n          user: this.user,\r\n          id: this.conversationId,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          this.socket.emit(\"typing\", {\r\n            status: false,\r\n            user: this.user,\r\n            id: this.conversationId,\r\n          });\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    checkPrev(object, index) {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      if (this.messages[index - 1].user === object.user) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    checkNxt(object, index) {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      const lastIndex = this.messages.length - 1;\r\n      const currentIndex = this.messages.indexOf(object);\r\n      if (currentIndex === lastIndex) {\r\n        return true;\r\n      }\r\n      if (this.messages[index + 1].user === object.user) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    async newMessageSound(sound) {\r\n      // var audio = new Audio(sound);\r\n      sound.play();\r\n    },\r\n\r\n    async clickSelect(msg, fullmsg) {\r\n      // console.log(msg, \"the message\");\r\n      this.newMessageSound(outgoing);\r\n      this.loading = true;\r\n      this.messages.pop();\r\n      const newMessage = {\r\n        text: msg.text,\r\n        user: \"user\",\r\n        type: \"text\",\r\n      };\r\n      this.messages = [...this.messages, newMessage];\r\n\r\n      this.loading = true;\r\n      await this.checkCase(this.step, true, msg, false);\r\n      await this.checkCase(this.step, false, msg, false);\r\n      this.newMessageSound(incoming);\r\n      this.chatToChatbottom();\r\n      this.loading = false;\r\n    },\r\n\r\n    async chatToChatbottom() {\r\n      if (document.querySelector(\"#chat-body\")) {\r\n        // console.log(\"scroll\");\r\n        document.querySelector(\"#chat-body\").scrollTop =\r\n          document.querySelector(\"#chat-body\").scrollHeight;\r\n      }\r\n    },\r\n\r\n    async saveMessage(msg, id) {\r\n      const newMessage = {\r\n        text: msg.text,\r\n        type: msg.type,\r\n        user: msg.user,\r\n        isUser: true,\r\n      };\r\n      await saveChats(newMessage, id);\r\n    },\r\n\r\n    requestAssistance() {\r\n      if (!this.agent && !this.ended) {\r\n        const data = { conversationId: this.conversationId, userId: this.user };\r\n        this.socket.emit(\"requestAssistance\", data);\r\n        // Check if chat session has already started\r\n        const chatStarted = localStorage.getItem(\"chatStarted\");\r\n        this.showLoader = true;\r\n      }\r\n    },\r\n\r\n    async stopAutomate() {\r\n      // const botMsg = {\r\n      //   text: \"Great 😄 A member of our team will be in touch shortly. what can we do for you?\",\r\n      //   user: \"bot\",\r\n      //   type: \"text\",\r\n      //   isUser: true,\r\n      // };\r\n      // this.messages.push(botMsg);\r\n      // this.saveMessage(botMsg, this.conversationId);\r\n      this.joinConversation(this.conversationId);\r\n      this.automated = false;\r\n      this.chatToChatbottom();\r\n      this.requestAssistance();\r\n    },\r\n\r\n    isSocketInConversation() {\r\n      const conversationRoom = `conversation:${this.conversationId}`;\r\n\r\n      this.socket.emit(\r\n        \"isSocketInConversation\",\r\n        conversationRoom,\r\n        (isJoined) => {\r\n          if (isJoined) {\r\n            // console.log(\r\n            //   `Socket has joined conversation ${this.conversationId}`\r\n            // );\r\n          } else {\r\n            // console.log(\r\n            //   `Socket has not joined conversation ${this.conversationId}`\r\n            // );\r\n            this.joinConversation(this.conversationId);\r\n          }\r\n        }\r\n      );\r\n    },\r\n\r\n    async checkCase(step, save, msg, first) {\r\n      // find the object that has the step give in the function value\r\n      // console.log(save, \"the messages\", step, first);\r\n      let valueStep = this.flow.find((obj) => obj.step === step);\r\n      // console.log(save, \"the messages\", valueStep);\r\n      if (valueStep.next === \"end\" && first) {\r\n        // console.log(\"the end of it \");\r\n        if (!valueStep.auto) {\r\n          this.isSocketInConversation();\r\n          let intervalIdReq;\r\n\r\n          // Start the interval\r\n          // intervalIdReq = setInterval(() => {\r\n          //   // Call your method here\r\n          //   this.requestAssistance();\r\n          // }, 4000);\r\n\r\n          this.automated = false;\r\n        }\r\n        this.chatToChatbottom();\r\n        return;\r\n      }\r\n\r\n      if (save) {\r\n        // console.log(valueStep);\r\n        valueStep.messages.pop();\r\n        // loop through and  save user options\r\n        for (let index = 0; index < valueStep.messages.length; index++) {\r\n          const element = valueStep.messages[index];\r\n          element.isUser = true;\r\n          await this.saveMessage(element, this.conversationId);\r\n        }\r\n\r\n        let userMsg = {\r\n          text: msg.text,\r\n          user: this.user,\r\n          type: \"text\",\r\n          isUser: true,\r\n        };\r\n        await this.saveMessage(userMsg, this.conversationId);\r\n        await setStepConversation(this.conversationId, msg.id);\r\n        this.step = msg.id;\r\n      }\r\n\r\n      // No check and update next question for automated process\r\n      if (!save) {\r\n        for (let index = 0; index < valueStep.messages.length; index++) {\r\n          const element = valueStep.messages[index];\r\n          element.isUser = true;\r\n          // console.log(\"valueStep\", valueStep);\r\n          this.messages.push(element);\r\n          if (valueStep.next === \"end\" || !valueStep.auto) {\r\n            await this.saveMessage(element, this.conversationId);\r\n            // console.log(\"saving ending \");\r\n          }\r\n        }\r\n        if (valueStep.next === \"end\" && !valueStep.auto) {\r\n          await this.stopAutomate();\r\n          await this.sendToBot(\"point 3\");\r\n        }\r\n      }\r\n      // console.log(valueStep.next, save, \"the values\", step);\r\n    },\r\n\r\n    async lastMessageIsBot() {\r\n      const lastMessage = this.messages[this.messages.length - 1];\r\n\r\n      if (lastMessage.user === \"bot\") {\r\n        // console.log(lastMessage, \"last message\");\r\n      }\r\n      return lastMessage && lastMessage.user === \"bot\";\r\n    },\r\n\r\n    startChatTimeout() {\r\n      // Calculate remaining time based on elapsed time\r\n      const elapsedTime = Date.now() - this.chatStartTime;\r\n      const remainingTime = Math.max(this.chatTimeoutDuration - elapsedTime, 0);\r\n\r\n      // Start the chat timeout timer\r\n      this.chatTimeout = setTimeout(() => {\r\n        // End the chat session on timeout\r\n        if (!this.ended) {\r\n          this.socket.emit(\"timeUp\", this.conversationId);\r\n        }\r\n\r\n        this.expiredConvId(true);\r\n      }, remainingTime);\r\n\r\n      // Update the line loader every second\r\n      const intervalId = setInterval(() => {\r\n        const elapsedTime = Date.now() - this.chatStartTime;\r\n        const remainingTime = Math.max(\r\n          this.chatTimeoutDuration - elapsedTime,\r\n          0\r\n        );\r\n        const remainingPercentage =\r\n          (remainingTime / this.chatTimeoutDuration) * 100;\r\n        this.loaderWidth = 100 - remainingPercentage;\r\n      }, 1000);\r\n\r\n      this.intervalIds.push(intervalId);\r\n    },\r\n\r\n    resetChatTimeout() {\r\n      // Reset the chat timeout timer\r\n      clearTimeout(this.chatTimeout);\r\n      if (!this.chatStartTime) {\r\n        this.chatStartTime = Date.now();\r\n      }\r\n      this.startChatTimeout();\r\n\r\n      // Clear the line loader interval\r\n      clearInterval(this.intervalIds.pop());\r\n      this.loaderWidth = 0;\r\n    },\r\n\r\n    getConversationById(conversationId) {\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\")) || {};\r\n      const conversation =\r\n        savedState.conversations?.byId[conversationId] || null;\r\n      return conversation;\r\n    },\r\n\r\n    getConversationIdFromLocalStorage() {\r\n      const conversationData = localStorage.getItem(\"conversationId\");\r\n      if (conversationData) {\r\n        const conversationId = conversationData.split(\"-\")[0];\r\n        return conversationId;\r\n      }\r\n      return null; // conversation ID not found or invalid\r\n    },\r\n\r\n    saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      // const conversationId = localStorage.getItem(\"conversationId\");\r\n      const convo = this.conversationId || this.conversationId;\r\n      const expire = this.getConversationById(convo).expire;\r\n      if (convo) {\r\n        const conversationTimestamp = parseInt(expire);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n\r\n    async expiredConvId(value) {\r\n      if (this.isConversationIdExpired() || value) {\r\n        // this.ended = true;\r\n      }\r\n    },\r\n\r\n    async getConversationId() {\r\n      let localChatId = this.conversationId || null;\r\n      if (localChatId === null) {\r\n        this.$router.push({ name: \"home\" });\r\n      }\r\n\r\n      return localChatId;\r\n    },\r\n\r\n    capitalizeName(name) {\r\n      // console.log(name, \"the name\");\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n\r\n    iniStartTime() {\r\n      this.chatStartTime = localStorage.getItem(\r\n        `chatStartTime-${this.conversationId}`\r\n      );\r\n      if (this.chatStartTime) {\r\n        // Restore chat start time from local storage\r\n\r\n        this.showLoader = true;\r\n        this.startChatTimeout();\r\n      }\r\n      // Set the chatStarted flag and chat start time in local storage\r\n      if (!this.chatStartTime) {\r\n        this.chatStartTime = Date.now();\r\n        localStorage.setItem(\r\n          `chatStartTime-${this.conversationId}`,\r\n          this.chatStartTime\r\n        );\r\n      }\r\n    },\r\n\r\n    async updateConversation(conversationId, conversationData) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const newState = {\r\n        ...data,\r\n        conversations: {\r\n          ...data.conversations,\r\n          byId: {\r\n            ...data.conversations.byId,\r\n            [conversationId]: {\r\n              ...data.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      //   this.updateState(newState);\r\n      // console.log(newState, \"updateing feedback\");\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async sendToBot(point) {\r\n      // console.log(\"joshijax\", point);\r\n      this.sending = true;\r\n      this.isTyping = true;\r\n      let messageStrings = this.messages.map((msg) => \"\\n\" + msg.text);\r\n      let isbot = await this.lastMessageIsBot();\r\n\r\n      if (isbot || this.automated) {\r\n        this.sending = false;\r\n        this.isTyping = false;\r\n        return;\r\n      }\r\n      let allMessageText = \" \\nhello\\n \" + messageStrings.join(\"\");\r\n      // console.log(allMessageText, \"TEXT\", messageStrings);\r\n      this.inputText = \"\";\r\n      try {\r\n        // console.log(allMessageText, \"TEXT2\");\r\n        const response = await axios({\r\n          method: \"post\",\r\n          url: \"http://127.0.0.1:8000/answer-me/\",\r\n\r\n          data: {\r\n            prompt: allMessageText,\r\n          },\r\n        });\r\n\r\n        // console.log(\"JOSHIJAX\", typeof response.data.response);\r\n\r\n        await this.socket.emit(\"message\", {\r\n          conversationId: this.conversationId,\r\n          type: \"text\",\r\n          username: \"bot\",\r\n          message: { text: response.data.response },\r\n          isUser: false,\r\n        });\r\n        this.isTyping = false;\r\n      } catch (error) {\r\n        // console.error(error);\r\n        this.isTyping = false;\r\n      }\r\n      this.sending = false;\r\n    },\r\n\r\n    messageEndsWithGoodbye(statement) {\r\n      if (!statement) {\r\n        return false;\r\n      }\r\n      // Define common keywords and phrases that indicate a goodbye message\r\n      const goodbyeKeywords = [\r\n        \"goodbye\",\r\n        \"bye\",\r\n        \"farewell\",\r\n        \"see you\",\r\n        \"take care\",\r\n        \"have a nice\",\r\n        \"later\",\r\n      ];\r\n\r\n      // Define regular expressions to match common patterns in goodbye messages\r\n      const patterns = [\r\n        /\\b(thanks|thank you)\\b/gi,\r\n        /\\b(good night|night)\\b/gi,\r\n        /\\b(talk to you|chat with you)\\b/gi,\r\n        /\\b(see you|cu|ttyl|ttys)\\b/gi,\r\n        /\\b(be safe)\\b/gi,\r\n        /\\b(have a great|have a nice)\\b/gi,\r\n        /\\b(take care)\\b/gi,\r\n        /\\b(sleep well)\\b/gi,\r\n        /\\b(catch you later|laters)\\b/gi,\r\n      ];\r\n\r\n      // Check if the statement contains a goodbye keyword\r\n      for (const keyword of goodbyeKeywords) {\r\n        if (statement.toLowerCase().includes(keyword)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // Check if the statement matches any of the common patterns\r\n      for (const pattern of patterns) {\r\n        if (pattern.test(statement)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // If no keywords or patterns were found, assume it's not a goodbye message\r\n      return false;\r\n    },\r\n\r\n    renderMessage(message) {\r\n      // Detect links in the message and render them as clickable links\r\n      const linkRegex = /(https?|ftp):\\/\\/[^\\s]+/gi;\r\n\r\n      if (this.isLink(message)) {\r\n        // Replace the link in the message with an anchor tag element\r\n        message = message.replace(\r\n          linkRegex,\r\n          '<a href=\"$&\" target=\"_blank\">$&</a>'\r\n        );\r\n      }\r\n\r\n      return message;\r\n    },\r\n\r\n    isLink(text) {\r\n      // Match links that do not already have an anchor tag\r\n      const linkRegex = /^(?!.*?<a\\s).*?(https?|ftp):\\/\\/[^\\s]+.*$/i;\r\n      return linkRegex.test(text);\r\n    },\r\n\r\n    async iniChat() {\r\n      // console.log(\"joshijaxmsg\", this.botName);\r\n      this.isLoading = true;\r\n      let convoinfo = {};\r\n\r\n      convoinfo = await getConversation(this.conversationId);\r\n      this.agent = convoinfo.agent;\r\n\r\n      this.messages = await getConvoChats(this.conversationId);\r\n\r\n      // console.log(\"glory\", this.messages);\r\n\r\n      this.step = convoinfo.step;\r\n\r\n      await this.expiredConvId(false);\r\n\r\n      this.chatToChatbottom();\r\n\r\n      this.iniStartTime();\r\n      // await this.submitText();\r\n      this.isLoading = false;\r\n      if (convoinfo.hasOwnProperty(\"ended\")) {\r\n        this.ended = convoinfo.ended;\r\n        let item = this.getConversationBy(this.conversationId);\r\n\r\n        item.ended = convoinfo.ended;\r\n        // console.log(item, \"the item\");\r\n        await this.updateConversation(this.conversationId, item);\r\n      } else {\r\n        this.ended = false;\r\n      }\r\n\r\n      await this.checkCase(this.step, false, null, true);\r\n\r\n      if (!this.ended && this.isBotEnabled && !this.automated) {\r\n        let logivVal = await this.lastMessageIsBot();\r\n\r\n        if (!logivVal) {\r\n          this.sendToBot(\"point 2\");\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    // console.log(\"botName 2\", this.botName);\r\n    this.socket = io(\"http://localhost:3000/\");\r\n    this.socket.on(\"connect\", () => {\r\n      // console.log(\"Connected to server\");\r\n\r\n      this.socket.emit(\"userType\", \"customer\");\r\n    });\r\n\r\n    // litsen to new\r\n\r\n    this.socket.on(\"newMessage\", async (message) => {\r\n      console.log(message.user, this.user);\r\n      if (message.user === this.user || message.user === \"user\") {\r\n        if (this.user === message.user) {\r\n        }\r\n        let value = {\r\n          text: message.text,\r\n          user: message.user,\r\n          type: \"text\",\r\n        };\r\n        console.log(\"sent out\", value);\r\n        await this.messages.push(value);\r\n        // console.log(this.messages, \"here final\");\r\n        await this.chatToChatbottom();\r\n        await this.newMessageSound(outgoing);\r\n        if (this.isBotEnabled) {\r\n          this.sendToBot(\"point 1\");\r\n        }\r\n      } else {\r\n        console.log(\"recieved\", message);\r\n        this.messages.push(message);\r\n        // console.log(this.messages, \"here final\");\r\n        this.chatToChatbottom();\r\n        this.newMessageSound(incoming);\r\n        readMessage(this.conversationId);\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"joined\", async (message) => {\r\n      // console.log(\r\n      //   this.user != message.user,\r\n      //   this.user,\r\n      //   message.user,\r\n      //   \"the data i need\"\r\n      // );\r\n\r\n      if (this.user != message.user) {\r\n        if (this.agent !== message.user) {\r\n          this.messages.push(message);\r\n          // this.saveMessage(message);\r\n          await this.chatToChatbottom();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"typing\", (isTyping) => {\r\n      // console.log(isTyping);\r\n      this.isTyping = isTyping.status;\r\n      this.typingMsg = `${isTyping.user} is typing`;\r\n      this.chatToChatbottom();\r\n    });\r\n\r\n    this.socket.on(\"requestAccepted\", async (data) => {\r\n      // console.log(data, \"requestAccepted\");\r\n      this.agent = data.userId;\r\n    });\r\n\r\n    await this.iniChat();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.socket.off();\r\n  },\r\n\r\n  watch: {\r\n    messages: {\r\n      handler(newMessages) {\r\n        const lastMessage = newMessages[newMessages.length - 1];\r\n        if (\r\n          lastMessage &&\r\n          this.messageEndsWithGoodbye(lastMessage.text) &&\r\n          this.ended !== null &&\r\n          !this.ended\r\n        ) {\r\n          // console.log('Last message ended with \"Goodbye\"');\r\n\r\n          setTimeout(() => {\r\n            this.showFeeback();\r\n            // console.log('Last message ended with \"Goodbye\"')\r\n          }, 3000);\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n\r\n    $route: {\r\n      async handler(to, from) {\r\n        await this.iniChat();\r\n        // if (to.params.id !== from.params.id) {\r\n\r\n        // }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    displayAgent() {\r\n      return this.agent || \"bot\";\r\n    },\r\n    // ...other computed properties\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <canvas ref=\"canvas\"></canvas>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    name: String,\r\n    size: {\r\n      type: Number,\r\n      default: 40,\r\n    },\r\n  },\r\n  mounted() {\r\n    const canvas = this.$refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n    const size = this.size; // Size of the canvas\r\n    const fontSize = size / 2; // Font size of the letter\r\n    const fontFamily = \"Arial\"; // Font family of the letter\r\n\r\n    // Set the canvas size\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n\r\n    // Draw the letter\r\n    context.fillStyle = \"#ccc\"; // Background color\r\n    context.fillRect(0, 0, size, size);\r\n    context.fillStyle = \"#fff\"; // Text color\r\n    context.textAlign = \"center\";\r\n    context.textBaseline = \"middle\";\r\n    context.font = `${fontSize}px ${fontFamily}`;\r\n    context.fillText(this.getNameInitial(), size / 2, size / 2);\r\n  },\r\n  methods: {\r\n    getNameInitial() {\r\n      return this.name ? this.name[0].toUpperCase() : \"B\";\r\n    },\r\n  },\r\n  watch: {\r\n    name: function (newValue, oldValue) {\r\n      console.log(newValue, \"there was a chnage\");\r\n      const canvas = this.$refs.canvas;\r\n      const context = canvas.getContext(\"2d\");\r\n      const size = 40; // Size of the canvas\r\n      const fontSize = size / 2; // Font size of the letter\r\n      const fontFamily = \"Arial\"; // Font family of the letter\r\n\r\n      // Set the canvas size\r\n      canvas.width = size;\r\n      canvas.height = size;\r\n\r\n      // Draw the letter\r\n      context.fillStyle = \"#ccc\"; // Background color\r\n      context.fillRect(0, 0, size, size);\r\n      context.fillStyle = \"#fff\"; // Text color\r\n      context.textAlign = \"center\";\r\n      context.textBaseline = \"middle\";\r\n      context.font = `${fontSize}px ${fontFamily}`;\r\n      context.fillText(this.getNameInitial(), size / 2, size / 2);\r\n      // Re-mount the component\r\n      // this.$nextTick(() => {\r\n      //   this.$forceUpdate();\r\n      // });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\ncanvas {\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n","import { render } from \"./NewImage.vue?vue&type=template&id=220b3d75&scoped=true\"\nimport script from \"./NewImage.vue?vue&type=script&lang=js\"\nexport * from \"./NewImage.vue?vue&type=script&lang=js\"\n\nimport \"./NewImage.vue?vue&type=style&index=0&id=220b3d75&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-220b3d75\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"chatview\">\r\n    <transition name=\"bounce\">\r\n      <div>\r\n        <div class=\"chat-header\">\r\n          <v-icon\r\n            style=\"cursor: pointer\"\r\n            @click=\"$emit('goBack')\"\r\n            start\r\n            icon=\"mdi-arrow-left\"\r\n          ></v-icon>\r\n          <h3>Chatly</h3>\r\n        </div>\r\n\r\n        <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n          <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n\r\n          <div class=\"d-flex flex-wrap\">\r\n            <v-form ref=\"form\">\r\n              <h3>Please tell us how was your experience?</h3>\r\n              <v-btn-toggle v-model=\"selectedEmoji\" mandatory>\r\n                <v-btn\r\n                  v-for=\"emoji in emojis\"\r\n                  :key=\"emoji.value\"\r\n                  :value=\"emoji.value\"\r\n                  class=\"ma-2 custom-btn\"\r\n                >\r\n                  <span class=\"emoji\">{{ emoji.label }}</span>\r\n                  <v-tooltip top>\r\n                    <span class=\"tooltip-value\">{{ emoji.value }}</span>\r\n                  </v-tooltip>\r\n                </v-btn>\r\n              </v-btn-toggle>\r\n              <v-text-field\r\n                v-model=\"comments\"\r\n                label=\"Additional Comments\"\r\n                :rules=\"rules.comments\"\r\n              ></v-text-field>\r\n              <v-btn\r\n                color=\"blue\"\r\n                @click=\"submitFeedback\"\r\n                :disabled=\"selectedEmoji === null\"\r\n                >Submit</v-btn\r\n              >\r\n            </v-form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-footer\">\r\n          <!-- <div\r\n                style=\"\r\n                  margin: 24px auto 12px;\r\n                  text-align: center;\r\n                  font-size: 14px;\r\n                  line-height: 21px;\r\n                  padding-top: 0px;\r\n                  color: rgb(115, 115, 115);\r\n                \"\r\n              >\r\n                Your conversation has ended\r\n              </div>\r\n              <button @click=\"createNewConvo\" class=\"start\">\r\n                Start Conversation\r\n              </button> -->\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <ErrorDialog\r\n      v-if=\"showErrorDialog\"\r\n      :error=\"errorMessage\"\r\n      @dismiss=\"hideErrorDialog\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { updateConvo } from \"@/utils/firbase_utils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmoji: null,\r\n      comments: \"\",\r\n      isLoading: false,\r\n      emojis: [\r\n        { value: \"bad\", label: \"😠\" },\r\n        { value: \"fair\", label: \"😕\" },\r\n        { value: \"good\", label: \"😊\" },\r\n        { value: \"great\", label: \"😄\" },\r\n      ],\r\n      rules: {\r\n        comments: [\r\n          (value) => !!value || \"Comments are required\",\r\n          (value) =>\r\n            value.length <= 1000 ||\r\n            \"Comments must be less than 1000 characters\",\r\n        ],\r\n      },\r\n    };\r\n  },\r\n\r\n  components: {},\r\n  props: [\"conversationId\"],\r\n\r\n  methods: {\r\n    async updateConversation(conversationId, conversationData) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const newState = {\r\n        ...data,\r\n        conversations: {\r\n          ...data.conversations,\r\n          byId: {\r\n            ...data.conversations.byId,\r\n            [conversationId]: {\r\n              ...data.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      //   this.updateState(newState);\r\n      console.log(newState, \"updateing feedback\");\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async submitFeedback() {\r\n      if (this.$refs.form.validate()) {\r\n        await updateConvo(this.conversationId, {\r\n          ended: true,\r\n          comment: this.comments,\r\n          reaction: this.selectedEmoji,\r\n        });\r\n        let item = this.getConversationBy(this.conversationId);\r\n        console.log(\"the item\", item);\r\n        item.ended = true;\r\n        // console.log(item, \"the item\");\r\n        await this.updateConversation(this.conversationId, item);\r\n        this.$emit(\"goBackTo\");\r\n        // this.$router.push({ name: \"home\" });\r\n      }\r\n      // Code to submit feedback goes here\r\n    },\r\n  },\r\n\r\n  created() {},\r\n};\r\n</script>\r\n<style scoped>\r\n.v-btn-toggle {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.custom-btn {\r\n  font-size: 37px;\r\n  padding: 16px;\r\n}\r\n\r\n.emoji {\r\n  display: block;\r\n}\r\n\r\n.tooltip-value {\r\n  font-size: 14px;\r\n}\r\n\r\n.v-btn-group--density-default.v-btn-group {\r\n  height: 95px;\r\n}\r\n</style>\r\n","import { render } from \"./feedBack.vue?vue&type=template&id=247ad48f&scoped=true\"\nimport script from \"./feedBack.vue?vue&type=script&lang=js\"\nexport * from \"./feedBack.vue?vue&type=script&lang=js\"\n\nimport \"./feedBack.vue?vue&type=style&index=0&id=247ad48f&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-247ad48f\"]])\n\nexport default __exports__","import { render } from \"./testing.vue?vue&type=template&id=cb007ca4\"\nimport script from \"./testing.vue?vue&type=script&lang=js\"\nexport * from \"./testing.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./chatmaintest.vue?vue&type=template&id=2f608977\"\nimport script from \"./chatmaintest.vue?vue&type=script&lang=js\"\nexport * from \"./chatmaintest.vue?vue&type=script&lang=js\"\n\nimport \"./chatmaintest.vue?vue&type=style&index=0&id=2f608977&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./testApp.vue?vue&type=template&id=5c211996\"\nimport script from \"./testApp.vue?vue&type=script&lang=js\"\nexport * from \"./testApp.vue?vue&type=script&lang=js\"\n\nimport \"./testApp.vue?vue&type=style&index=0&id=5c211996&scope=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport '@mdi/font/css/materialdesignicons.css'\nimport 'vuetify/styles'\n\n// Vuetify\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify(\n  // https://vuetifyjs.com/en/introduction/why-vuetify/#feature-guides\n)\n","<template>\r\n  <div>\r\n    <div id=\"chatview\">\r\n      <transition name=\"bounce\">\r\n        <div>\r\n          <div class=\"chat-header\">\r\n            <h3>Chatly</h3>\r\n            <!-- <i class=\"fa fa-times\" @click=\"showPop = false\"></i> -->\r\n          </div>\r\n          <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n            <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n            <!-- Line loader for chat timeout -->\r\n            <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n            <div class=\"message-box\">\r\n              <v-list item-props lines=\"two\">\r\n                <SingleChat\r\n                  :convo=\"convo\"\r\n                  v-for=\"convo in sortedConversations\"\r\n                  :key=\"convo.text\"\r\n                  :agent=\"convo.agent\"\r\n                  :user=\"user\"\r\n                  @updateUnreadMsg=\"updateUnreadMsg\"\r\n                  class=\"chat-transition\"\r\n                />\r\n              </v-list>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"chat-footer\">\r\n            <v-btn\r\n              @click=\"$emit('createNewConvo')\"\r\n              class=\"start\"\r\n              :aria-details=\"getCount\"\r\n              getCount\r\n              v-if=\"!getCount && !isLoading\"\r\n            >\r\n              Start Conversation\r\n            </v-btn>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SingleChat from \"../components/singleChat.vue\";\r\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\r\nimport io from \"socket.io-client\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      socketMainpage: null,\r\n      chatActive: false,\r\n      isLoading: false,\r\n      conversations: [],\r\n    };\r\n  },\r\n  props: [\"showPop\", \"addConversation\", \"user\", \"createNewConvo\"],\r\n  components: {\r\n    SingleChat,\r\n  },\r\n  methods: {\r\n    show() {\r\n      this.$emit(\"showPoper\");\r\n    },\r\n\r\n    updateUnreadMsg() {\r\n      this.$emit(\"updateUnreadMsg\", 1);\r\n    },\r\n\r\n    async saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n        ended: false,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    handleNewMessage(newMessage) {\r\n      console.log(newMessage.createdAt, \"time check\");\r\n      const conversationIndex = this.conversations.findIndex(\r\n        (c) => c.conversationId === newMessage.conversationId\r\n      );\r\n      if (conversationIndex > -1) {\r\n        // Update the conversation with the new message text\r\n        const conversation = this.conversations[conversationIndex];\r\n        conversation.text = newMessage.text;\r\n        conversation.userNewmessage = true;\r\n        conversation.createdAt = newMessage.createdAt;\r\n        this.conversations.splice(conversationIndex, 1, conversation);\r\n\r\n        // Move the conversation to the top of the list\r\n      }\r\n    },\r\n\r\n    async getAllInfo(conversation) {\r\n      const result = await getLastChat(conversation);\r\n\r\n      let userNewmessage = (await result.parentData.userNewmessage) || false;\r\n      let lastMsg = await result.lastChatData;\r\n      if (result.lastChatData === null) {\r\n        lastMsg = {\r\n          text: \"hello message\",\r\n          user: \"Bot\",\r\n          createdAt: Timestamp.now(),\r\n        };\r\n      }\r\n      let ended;\r\n      if (result.parentData.hasOwnProperty(\"ended\")) {\r\n        ended = result.parentData.ended;\r\n      } else {\r\n        ended = false;\r\n      }\r\n\r\n      return {\r\n        conversationId: conversation,\r\n        text: lastMsg.text,\r\n        user: lastMsg.user,\r\n        agent: result.parentData.agent,\r\n        ended,\r\n        userNewmessage: userNewmessage,\r\n        createdAt: lastMsg.createdAt,\r\n      };\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      const conversationId = localStorage.getItem(\"conversationId\");\r\n      if (conversationId) {\r\n        const conversationTimestamp = parseInt(conversationId.split(\"-\")[1]);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.isLoading = true;\r\n    this.socketMainpage = io(\"http://localhost:3000/\");\r\n    this.socketMainpage.on(\"connect\", () => {\r\n      console.log(\"Connected to server\");\r\n    });\r\n\r\n    this.socketMainpage.on(\"newMessage\", (message) => {\r\n      message.createdAt = Timestamp.now();\r\n      console.log(message.conversationId, this.user, \"the new message\");\r\n      this.handleNewMessage(message);\r\n    });\r\n\r\n    const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n    const conversationsById = savedState.conversations.byId;\r\n\r\n    const valuesArray = [];\r\n\r\n    for (const id in conversationsById) {\r\n      const obj = { ...conversationsById[id], id };\r\n      valuesArray.push(obj);\r\n    }\r\n\r\n    const reversedArray = valuesArray.reverse(); // reverse the order of the array\r\n\r\n    const firstThree = reversedArray.slice(0, 3); // get the first three elements of the reversed array\r\n\r\n    console.log(firstThree, \"data i want\");\r\n\r\n    for (let i = 0; i < firstThree.length; i++) {\r\n      const element = firstThree[i];\r\n      let convoInfo = await this.getAllInfo(element.id);\r\n\r\n      this.conversations = [...this.conversations, convoInfo];\r\n    }\r\n\r\n    if (firstThree.length > 0) {\r\n      this.socketMainpage.emit(\"join\", {\r\n        id: firstThree[0].id,\r\n        user: this.user,\r\n      });\r\n    }\r\n\r\n    console.log(this.conversations, \"data i want\");\r\n\r\n    this.isLoading = false;\r\n  },\r\n  computed: {\r\n    sortedConversations() {\r\n      return this.conversations.slice().sort((a, b) => {\r\n        return b.createdAt.seconds - a.createdAt.seconds;\r\n      });\r\n    },\r\n\r\n    getCount() {\r\n      const endedCount = this.conversations.reduce((count, message) => {\r\n        return count + (!message.ended ? 1 : 0);\r\n      }, 0);\r\n      console.log(\"computed\", endedCount);\r\n\r\n      return endedCount > 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* @import url('https://use.fontawesome.com/f06b0f987d.js\"'); */\r\n\r\n.chat-transition {\r\n  transition: all 0.3s ease-out;\r\n}\r\n\r\n.chat-icon {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  cursor: pointer;\r\n  background: #1263ff;\r\n  padding: 15px;\r\n  border-radius: 50%;\r\n  width: 55px;\r\n  height: 52px;\r\n}\r\n\r\n.chat-icon svg {\r\n  fill: #fff;\r\n}\r\n\r\n.chat-container {\r\n  position: fixed;\r\n  min-width: 454px;\r\n  max-width: 454px;\r\n\r\n  /* min-height: 500px;\r\n    max-height: 500px; */\r\n\r\n  bottom: 90px;\r\n  right: 20px;\r\n  border-radius: 8px;\r\n  /* border: 1px solid rgb(242, 242, 242); */\r\n  background: #f8f8f8;\r\n  /* box-shadow: 6px 2px 15px 5px rgba(0, 0, 0, 0.1); */\r\n  z-index: 999;\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  background: #0056ff 0% 0% no-repeat padding-box;\r\n  color: #ffffff;\r\n}\r\n\r\n.chat-header h3 {\r\n  margin: 0;\r\n}\r\n\r\n.chat-header .fa-times {\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-body {\r\n  height: 350px;\r\n  overflow-y: auto;\r\n  background: #ffffff;\r\n  padding: 15px;\r\n}\r\n\r\n.chat-body::-webkit-scrollbar-track {\r\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  border-radius: 10px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.chat-body::-webkit-scrollbar {\r\n  width: 12px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.chat-body::-webkit-scrollbar-thumb {\r\n  border-radius: 10px;\r\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  background-color: #555;\r\n}\r\n\r\n.chat-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n}\r\n\r\n.chat-footer input[type=\"text\"] {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 20px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.chat-footer textarea {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 20px;\r\n  margin-right: 20px;\r\n  resize: none;\r\n  overflow: auto;\r\n  max-height: 200px;\r\n}\r\n\r\n.chat-footer > button {\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  background-color: rgb(17, 103, 255);\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-footer .start {\r\n  width: 425px;\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  background-color: rgb(17, 103, 255);\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.bounce-enter-active {\r\n  animation: bounce-in 0.5s;\r\n}\r\n.bounce-leave-active {\r\n  animation: bounce-in 0.5s reverse;\r\n}\r\n@keyframes bounce-in {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  50% {\r\n    transform: scale(1.25);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.message-bubble {\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  margin-bottom: 10px;\r\n  /* max-width: 80%; */\r\n  word-wrap: break-word;\r\n  width: 100%;\r\n}\r\n\r\n/* for the chip select */\r\n\r\n.md-chip {\r\n  display: inline-block;\r\n  background: transparent;\r\n  padding: 0 12px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 32px;\r\n  font-size: 15px;\r\n}\r\n\r\n.md-chip.md-chip-hover:hover {\r\n  background: #ccc;\r\n}\r\n\r\n.md-chip-clickable {\r\n  cursor: pointer;\r\n}\r\n\r\n.md-chip,\r\n.md-chip-icon {\r\n  height: 32px;\r\n  line-height: 32px;\r\n}\r\n\r\n.md-chip-icon {\r\n  display: block;\r\n  float: left;\r\n  background: #009587;\r\n  width: 32px;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  color: white;\r\n  margin: 0 8px 0 -12px;\r\n}\r\n\r\n.md-chip-remove {\r\n  display: inline-block;\r\n  background: #aaa;\r\n  border: 0;\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  margin: 0 -4px 0 4px;\r\n  cursor: pointer;\r\n  font: inherit;\r\n  line-height: 20px;\r\n}\r\n\r\n.md-chip-remove:after {\r\n  color: #e0e0e0;\r\n  content: \"x\";\r\n}\r\n.md-chip-remove:hover {\r\n  background: #999;\r\n}\r\n.md-chip-remove:active {\r\n  background: #777;\r\n}\r\n\r\n.md-chips {\r\n  padding: 12px 0;\r\n}\r\n\r\n.md-chips.md-chip {\r\n  margin: 0 5px 3px 0;\r\n}\r\n\r\n.md-chip-raised {\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  display: none;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked + label {\r\n  -webkit-transition: all 500ms ease;\r\n  transition: all 500ms ease;\r\n  background-color: #1579b3;\r\n  color: white;\r\n  border-color: #fc6c27;\r\n}\r\n\r\n/* chat csss */\r\n\r\n.chat-body .message-content__item .chat-body-header {\r\n  border-bottom: 1px solid #e0e2e4;\r\n  padding: 20px 15px;\r\n  position: relative;\r\n  height: 95px;\r\n}\r\n.chat-body .message-content__item .chat-body-header .name {\r\n  font-size: 21px;\r\n  color: #535357;\r\n  font-weight: 500;\r\n}\r\n.chat-body .message-content__item .chat-body-header .phone {\r\n  font-size: 16px;\r\n  color: #a3a3a7;\r\n}\r\n.chat-body .message-content__item .chat-body-header img {\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 15px;\r\n}\r\n.chat-body .message-box {\r\n  /* padding: 25px;\r\n    height: calc(100% - 175px); */\r\n}\r\n.chat-body .message-box .message-box__item {\r\n  margin-bottom: 15px;\r\n}\r\n.chat-body .message-box .message-box__item.incoming {\r\n  text-align: left;\r\n}\r\n.chat-body .message-box .message-box__item.incoming .time {\r\n  right: 0;\r\n}\r\n.chat-body .message-box .message-box__item.outgoing {\r\n  text-align: right;\r\n}\r\n.chat-body .message-box .message-box__item.outgoing .time {\r\n  left: 0;\r\n}\r\n.chat-body .message-box .message-box__item .name {\r\n  color: #535357;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n.chat-body .message-box .message-box__item .bot-text {\r\n  background: #f4f3f6 0% 0% no-repeat padding-box;\r\n  display: inline-block;\r\n  padding: 20px 15px;\r\n  /* padding-right: 50px; */\r\n  font-size: 15px;\r\n  color: #535357;\r\n  border-radius: 7px;\r\n  max-width: 61%;\r\n  margin-top: 3px;\r\n  text-align: left;\r\n  position: relative;\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n.chat-body .message-box .message-box__item .user-text {\r\n  background: #0056ff 0% 0% no-repeat padding-box;\r\n  display: inline-block;\r\n  padding: 20px 15px;\r\n  /* padding-right: 50px; */\r\n  font-size: 15px;\r\n  color: #ffffff;\r\n  border-radius: 7px;\r\n  max-width: 62%;\r\n  margin-top: 3px;\r\n  text-align: left;\r\n  position: relative;\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n.chat-body .message-form {\r\n  height: 75px;\r\n  border-top: 1px solid #e0e2e4;\r\n  padding: 20px 15px;\r\n}\r\n.chat-body .message-form input {\r\n  width: calc(100% - 50px);\r\n  border: none;\r\n  font-size: 16px;\r\n  margin-top: 5px;\r\n}\r\n.chat-body .message-form img {\r\n  float: right;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* SPINNER */\r\n\r\n.spinner {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 45px;\r\n  height: 9px;\r\n  margin-left: -22px;\r\n  margin-top: -13px;\r\n  text-align: center;\r\n}\r\n\r\n.spinner > div {\r\n  width: 9px;\r\n  height: 9px;\r\n  background-color: #dcdcdc;\r\n  border-radius: 100%;\r\n  display: inline-block;\r\n  -webkit-animation: bouncedelay 1.4s infinite ease-in-out;\r\n  animation: bouncedelay 1400ms ease-in-out infinite;\r\n  /* Prevent first frame from flickering when animation starts */\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n}\r\n\r\n.spinner .bounce1 {\r\n  -webkit-animation-delay: -0.32s;\r\n  animation-delay: -0.32s;\r\n}\r\n\r\n.spinner .bounce2 {\r\n  -webkit-animation-delay: -0.16s;\r\n  animation-delay: -0.16s;\r\n}\r\n\r\n@-webkit-keyframes bouncedelay {\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scale(0);\r\n    -webkit-transform: scale(0);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n    -webkit-transform: scale(1);\r\n  }\r\n}\r\n@keyframes bouncedelay {\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scale(0);\r\n    -webkit-transform: scale(0);\r\n  }\r\n  40% {\r\n    transform: scale(1);\r\n    -webkit-transform: scale(1);\r\n  }\r\n}\r\n#container {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  display: -ms-flexbox;\r\n  justify-content: space-around;\r\n  -webkit-justify-content: space-around;\r\n  align-items: center;\r\n  -webkit-align-items: center;\r\n}\r\n\r\n#loading-bubble {\r\n  display: flex;\r\n  display: -ms-flexbox;\r\n  justify-content: center;\r\n  -webkit-justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  background: #f4f3f6 0% 0% no-repeat padding-box;\r\n  display: inline-block;\r\n  padding: 20px 15px;\r\n  /* padding-right: 50px; */\r\n  font-size: 15px;\r\n  color: #535357;\r\n  border-radius: 7px;\r\n  max-width: 55%;\r\n  margin-top: 3px;\r\n  text-align: left;\r\n  -webkit-animation: message-bounce 2.5s infinite ease-in-out;\r\n  animation: message-bounce 2.5s ease-in-out infinite;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n}\r\n#loading-bubble.grey {\r\n  background-color: #a5b0b5;\r\n}\r\n\r\n#loading-bubble .spinner {\r\n  position: static !important;\r\n  margin-top: -11px;\r\n  margin-left: 0px;\r\n}\r\n#loading-bubble .spinner div {\r\n  background-color: #2e66bd;\r\n}\r\n\r\n@-webkit-keyframes message-bounce {\r\n  0% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    -webkit-transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n}\r\n\r\n@keyframes message-bounce {\r\n  0% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    -webkit-transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(0.9);\r\n    -webkit-transform: scale(0.9);\r\n  }\r\n}\r\n\r\n.join-message {\r\n  background-color: green;\r\n  color: white;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  max-width: 80%;\r\n}\r\n\r\n.just-joined {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n}\r\n\r\n.line-loader {\r\n  height: 4px;\r\n  background-color: #ccc;\r\n  position: relative;\r\n}\r\n\r\n.line-loader:before {\r\n  content: \"\";\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  background-color: #007aff;\r\n  animation: line-loader 5s linear;\r\n  animation-fill-mode: forwards;\r\n}\r\n\r\n@keyframes line-loader {\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 32px;\r\n  top: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  opacity: 0.3;\r\n}\r\n.close:hover {\r\n  opacity: 1;\r\n}\r\n.close:before,\r\n.close:after {\r\n  position: absolute;\r\n  left: 15px;\r\n  content: \" \";\r\n  height: 15px;\r\n  width: 2px;\r\n  background-color: #fff;\r\n}\r\n.close:before {\r\n  transform: rotate(45deg);\r\n}\r\n.close:after {\r\n  transform: rotate(-45deg);\r\n}\r\n\r\n.loading-div {\r\n  position: absolute;\r\n  /* top: 0; */\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  z-index: 1000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.loading-div::after {\r\n  content: \"\";\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #ccc;\r\n  border-top-color: #333;\r\n  border-radius: 50%;\r\n  animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div v-if=\"loaded\">\r\n    <v-list-item\r\n      :title=\"convo.text\"\r\n      :subtitle=\"convo.subtitle\"\r\n      :to=\"`/conversation/${convo.conversationId}`\"\r\n      :prepend-avatar=\"imageSrc\"\r\n      append-icon\r\n    >\r\n      <template #append>\r\n        <v-badge color=\"green\" v-if=\"convo.userNewmessage\">\r\n          <!-- <v-icon small>mdi-circle-medium</v-icon> -->\r\n        </v-badge>\r\n      </template>\r\n      <template v-slot:subtitle=\"{}\">\r\n        <span class=\"text-primary\">\r\n          {{\r\n            capitalizeName(\r\n              convo.user === \"bot\"\r\n                ? \"Alex\"\r\n                : convo.user === user\r\n                ? \"you\"\r\n                : agent || \"bot\"\r\n            )\r\n          }}\r\n        </span>\r\n        &mdash; {{ timeAgo(convo.createdAt) }}\r\n      </template>\r\n    </v-list-item>\r\n    <v-divider inset></v-divider>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLastChat } from \"@/utils/firbase_utils\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\nexport default {\r\n  data: () => ({\r\n    loaded: false,\r\n  }),\r\n  props: [\"convo\", \"agent\", \"user\"],\r\n  components: {},\r\n\r\n  methods: {\r\n    capitalizeName(name) {\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n    timeAgo(timestamp) {\r\n      const now = dayjs();\r\n      const datetime = dayjs(timestamp.toDate());\r\n      let diff = datetime.diff(now, \"second\");\r\n      let suffix = diff > 0 ? \" ago\" : \" ago\";\r\n      diff = Math.abs(diff);\r\n\r\n      if (diff < 60) {\r\n        return `Just now`;\r\n      } else if (diff < 3600) {\r\n        let minutes = Math.floor(diff / 60);\r\n        return `${minutes} ${minutes > 1 ? \"minutes\" : \"minute\"}${suffix}`;\r\n      } else if (diff < 86400) {\r\n        let hours = Math.floor(diff / 3600);\r\n        return `${hours} ${hours > 1 ? \"hours\" : \"hour\"}${suffix}`;\r\n      } else {\r\n        let days = Math.floor(diff / 86400);\r\n        return `${days} ${days > 1 ? \"days\" : \"day\"}${suffix}`;\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    console.log(this.convo, \"the convovov\");\r\n    this.loaded = true;\r\n  },\r\n  computed: {\r\n    displayAgent() {\r\n      // let theUser = this.agent || \"bot\";\r\n      // if (this.convo.user === \"bot\") {\r\n      //   theUser = this.convo.user;\r\n      // }\r\n      return this.convo.user === \"bot\" ? \"Alex\" : this.agent || \"bot\";\r\n    },\r\n\r\n    imageSrc() {\r\n      // console.log(this.displayAgent, \"the agent \");\r\n      const url = `https://ui-avatars.com/api/?name=${this.displayAgent}&size=40&background=%23ccc&color=fff&color=fff&rounded=true&font-size=0.5`;\r\n      return url;\r\n    },\r\n\r\n    // ...other computed properties\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-list-item {\r\n  cursor: pointer !important;\r\n}\r\n</style>\r\n","import { render } from \"./singleChat.vue?vue&type=template&id=7bbf30ff&scoped=true\"\nimport script from \"./singleChat.vue?vue&type=script&lang=js\"\nexport * from \"./singleChat.vue?vue&type=script&lang=js\"\n\nimport \"./singleChat.vue?vue&type=style&index=0&id=7bbf30ff&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7bbf30ff\"]])\n\nexport default __exports__","import { render } from \"./chatmain.vue?vue&type=template&id=1179bf61\"\nimport script from \"./chatmain.vue?vue&type=script&lang=js\"\nexport * from \"./chatmain.vue?vue&type=script&lang=js\"\n\nimport \"./chatmain.vue?vue&type=style&index=0&id=1179bf61&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div v-show=\"!feedback\" id=\"chatview\">\r\n      <transition name=\"bounce\">\r\n        <div>\r\n          <div class=\"chat-header\">\r\n            <v-icon\r\n              style=\"cursor: pointer\"\r\n              @click=\"$router.push({ name: 'home' })\"\r\n              start\r\n              icon=\"mdi-arrow-left\"\r\n            ></v-icon>\r\n            <h3>Chatly {{ agent }}</h3>\r\n            <NewImage v-if=\"agent !== null\" :name=\"botName\" size=\"50\" />\r\n            <v-btn\r\n              v-if=\"!ended && ended !== null\"\r\n              color=\"green\"\r\n              @click=\"showFeeback\"\r\n              >end Convo</v-btn\r\n            >\r\n          </div>\r\n          <div\r\n            v-if=\"showLoader\"\r\n            class=\"line-loader\"\r\n            :style=\"{ width: loaderWidth + '%' }\"\r\n          ></div>\r\n          <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n            <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n            <!-- Line loader for chat timeout -->\r\n            <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n            <div class=\"message-box\">\r\n              <div\r\n                v-for=\"(message, index) in messages\"\r\n                :key=\"index\"\r\n                :value=\"user\"\r\n                :style=\"[\r\n                  !checkNxt(message, index) ? 'margin-bottom: 6px;' : '',\r\n                ]\"\r\n                :class=\"[\r\n                  message.user === user\r\n                    ? 'message-box__item outgoing'\r\n                    : message.user === 'user'\r\n                    ? 'message-box__item outgoing'\r\n                    : 'message-box__item incoming',\r\n                ]\"\r\n              >\r\n                <div v-if=\"message.type === 'text'\">\r\n                  <div v-show=\"checkPrev(message, index)\" class=\"name\">\r\n                    <NewImage\r\n                      v-if=\"message.user !== user\"\r\n                      :name=\"message.user == 'bot' ? botName : message.user\"\r\n                      :size=\"20\"\r\n                    />\r\n                    {{\r\n                      capitalizeName(\r\n                        message.user == \"bot\"\r\n                          ? botName\r\n                          : message.user === user\r\n                          ? \"you\"\r\n                          : message.user\r\n                      )\r\n                    }}\r\n                  </div>\r\n\r\n                  <div\r\n                    :class=\"[\r\n                      message.user === user\r\n                        ? 'user-text'\r\n                        : message.user === 'user'\r\n                        ? 'user-text'\r\n                        : 'bot-text',\r\n                    ]\"\r\n                  >\r\n                    <span v-html=\"renderMessage(message.text)\"></span>\r\n                  </div>\r\n                </div>\r\n                <div v-else-if=\"message.type === 'option'\">\r\n                  <div\r\n                    v-for=\"(options, index) in message.option\"\r\n                    :key=\"index\"\r\n                    style=\"margin-bottom: 5px\"\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      :name=\"`name${index}`\"\r\n                      :value=\"options.text\"\r\n                      :id=\"index\"\r\n                    />\r\n                    <label\r\n                      :for=\"index\"\r\n                      class=\"md-chip md-chip-clickable md-chip-hover\"\r\n                      @click=\"clickSelect(options, message)\"\r\n                    >\r\n                      {{ options.text }}</label\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"message.type === 'joined'\" class=\"just-joined\">\r\n                  <span class=\"join-message\"\r\n                    >{{ message.text }} Just joined chat</span\r\n                  >\r\n                </div>\r\n              </div>\r\n\r\n              <div style=\"text-align: left; margin-bottom: 15px\">\r\n                <div v-if=\"isTyping || loading\" id=\"loading-bubble\">\r\n                  <div class=\"spinner\">\r\n                    <div class=\"bounce1\"></div>\r\n                    <div class=\"bounce2\"></div>\r\n                    <div class=\"bounce3\"></div>\r\n                  </div>\r\n                  <!-- <div>{{ typingMsg }}</div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"!ended\">\r\n            <div\r\n              v-if=\"!automated\"\r\n              class=\"chat-footer\"\r\n              :style=\"[ended ? 'display: block' : '']\"\r\n            >\r\n              <textarea\r\n                rows=\"1\"\r\n                ref=\"message\"\r\n                :disabled=\"automated\"\r\n                v-model=\"newMessage\"\r\n                @keyup.enter=\"sendMessage\"\r\n                @keydown.shift.enter.prevent=\"insertNewLine\"\r\n                @keyup=\"onTyping\"\r\n                type=\"text\"\r\n                placeholder=\"Type a message...\"\r\n                style=\"max-height: calc(3 * (1.5em + 2px))\"\r\n              ></textarea>\r\n              <button :disabled=\"newMessage === ''\" @click=\"sendMessage\">\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            v-else\r\n            class=\"chat-footer\"\r\n            :style=\"[ended ? 'display: block' : '']\"\r\n          >\r\n            <div\r\n              style=\"\r\n                margin: '24px auto 12px';\r\n                text-align: 'center';\r\n                font-size: '14px';\r\n                line-height: '21px';\r\n                padding-top: '0px';\r\n                color: 'rgb(115, 115, 115)';\r\n              \"\r\n            >\r\n              Your conversation has ended\r\n            </div>\r\n            <button @click=\"$emit('createNewConvo')\" class=\"start\">\r\n              Start Conversation\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n    <feedBack\r\n      @getConversationBy=\"getConversationBy\"\r\n      @updateConversation=\"updateConversation\"\r\n      v-show=\"feedback\"\r\n      @goBack=\"feedback = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport incoming from \"../assets/incoming.mp3\";\r\nimport outgoing from \"../assets/outgoing.mp3\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  readMessage,\r\n  getConvoChats,\r\n  saveChats,\r\n  setStepConversation,\r\n  getConversation,\r\n} from \"@/utils/firbase_utils\";\r\n\r\nimport NewImage from \"../components/NewImage.vue\";\r\nimport feedBack from \"../components/feedBack.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"chatView\",\r\n  data() {\r\n    return {\r\n      feedback: false,\r\n      socket: null,\r\n      automated: true,\r\n      loading: false,\r\n      showErrorDialog: true,\r\n      isLoading: false,\r\n      errorMessage: \"Error Message\",\r\n      showChat: false,\r\n      agent: null,\r\n      ip: \"\",\r\n      newMessage: \"\",\r\n      conversationId: \"\",\r\n      isTyping: false,\r\n      joined: false,\r\n      typingMsg: \"\",\r\n      step: 0,\r\n      messages: [],\r\n      chatTimeout: null,\r\n      chatTimeoutDuration: 300000, // 5 minutes\r\n      chatStartTime: null,\r\n      loaderWidth: 0,\r\n      intervalIds: [],\r\n      showLoader: false,\r\n      convoEnded: false,\r\n      isBotEnabled: true,\r\n      ended: null,\r\n      flow: [\r\n        {\r\n          step: 0,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Hi! I'm glad to assist you today. Let's know each other:\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              text: \"Do you have an order already?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 1,\r\n                  text: \"Yes\",\r\n                },\r\n                {\r\n                  id: 2,\r\n                  text: \"No\",\r\n                },\r\n              ],\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Please select what you want to do with the order\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 1.1,\r\n                  text: \"i want to make a return/swap\",\r\n                },\r\n                {\r\n                  id: 1.2,\r\n                  text: \"I want to know the order status\",\r\n                },\r\n                {\r\n                  id: 1.3,\r\n                  text: \"Others\",\r\n                },\r\n              ],\r\n\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.1,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can easly Return or swap an order here: <a href='https://site.com/return' target='_blank'>https://site.com/return</a> \",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.2,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can track your order here: <a href='https://site.com/tracking' target='_blank'>https://site.com/tracking</a>\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.3,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"Tell us how else can we help?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"What would you like to do?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 2.1,\r\n                  text: \"Place a new order\",\r\n                },\r\n                {\r\n                  id: 2.2,\r\n                  text: \"I have a question\",\r\n                },\r\n                {\r\n                  id: 2.3,\r\n                  text: \"Others\",\r\n                },\r\n              ],\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.1,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"What products do you want?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.2,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can ask any question, we are here for you\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.3,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"What other thing do you want us to do for you?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      newMessage: \"\",\r\n    };\r\n  },\r\n  components: {\r\n    NewImage,\r\n    feedBack,\r\n  },\r\n  props: [\r\n    \"addConversation\",\r\n    \"user\",\r\n    \"updateConversation\",\r\n    \"getConversationBy\",\r\n    \"botName\",\r\n    \"createNewConvo\",\r\n  ],\r\n  methods: {\r\n    insertNewLine(event) {\r\n      if (event.shiftKey) {\r\n        const textarea = this.$refs.message;\r\n        const startPos = textarea.selectionStart;\r\n        const endPos = textarea.selectionEnd;\r\n        const currentValue = this.newMessage;\r\n        this.newMessage = `${currentValue.substring(\r\n          0,\r\n          startPos\r\n        )}\\n${currentValue.substring(endPos)}`;\r\n        // prevent the default behavior of inserting a new line\r\n        event.preventDefault();\r\n      }\r\n    },\r\n    showFeeback() {\r\n      this.feedback = true;\r\n    },\r\n\r\n    async joinConversation(conversationId) {\r\n      if (!this.ended) {\r\n        this.socket.emit(\"join\", { id: conversationId, user: this.user });\r\n        console.log(`${this.user} just joined conversation ${conversationId}`);\r\n        this.joined = true;\r\n      }\r\n    },\r\n\r\n    async sendMessage() {\r\n      if (this.newMessage === \"\") {\r\n        return;\r\n      }\r\n      const message = { text: this.newMessage };\r\n      // const response = await axios.post('/api/messages', { conversationId: this.conversationId, message });\r\n      await this.socket.emit(\"message\", {\r\n        conversationId: this.conversationId,\r\n        type: \"text\",\r\n        username: this.user,\r\n        message: message,\r\n        isUser: true,\r\n      });\r\n\r\n      this.socket.emit(\"typing\", {\r\n        status: false,\r\n        user: this.user,\r\n        id: this.conversationId,\r\n      });\r\n      this.chatStartTime = Date.now();\r\n      localStorage.setItem(\"chatStarted\", true);\r\n      localStorage.setItem(\r\n        `chatStartTime-${this.conversationId}`,\r\n        this.chatStartTime\r\n      );\r\n      this.resetChatTimeout();\r\n      this.newMessage = \"\";\r\n    },\r\n\r\n    onTyping() {\r\n      if (!this.isTyping) {\r\n        this.socket.emit(\"typing\", {\r\n          status: true,\r\n          user: this.user,\r\n          id: this.conversationId,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          this.socket.emit(\"typing\", {\r\n            status: false,\r\n            user: this.user,\r\n            id: this.conversationId,\r\n          });\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    checkPrev(object, index) {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      if (this.messages[index - 1].user === object.user) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    checkNxt(object, index) {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      const lastIndex = this.messages.length - 1;\r\n      const currentIndex = this.messages.indexOf(object);\r\n      if (currentIndex === lastIndex) {\r\n        return true;\r\n      }\r\n      if (this.messages[index + 1].user === object.user) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    async newMessageSound(sound) {\r\n      var audio = new Audio(sound);\r\n      audio.play();\r\n    },\r\n\r\n    async clickSelect(msg, fullmsg) {\r\n      // console.log(msg, \"the message\");\r\n      this.newMessageSound(outgoing);\r\n      this.loading = true;\r\n      this.messages.pop();\r\n      const newMessage = {\r\n        text: msg.text,\r\n        user: \"user\",\r\n        type: \"text\",\r\n      };\r\n      this.messages = [...this.messages, newMessage];\r\n\r\n      this.loading = true;\r\n      await this.checkCase(this.step, true, msg, false);\r\n      await this.checkCase(this.step, false, msg, false);\r\n      this.newMessageSound(incoming);\r\n      this.chatToChatbottom();\r\n      this.loading = false;\r\n    },\r\n\r\n    async chatToChatbottom() {\r\n      if (document.querySelector(\"#chat-body\")) {\r\n        // console.log(\"scroll\");\r\n        document.querySelector(\"#chat-body\").scrollTop =\r\n          document.querySelector(\"#chat-body\").scrollHeight;\r\n      }\r\n    },\r\n\r\n    async saveMessage(msg, id) {\r\n      const newMessage = {\r\n        text: msg.text,\r\n        type: msg.type,\r\n        user: msg.user,\r\n        isUser: true,\r\n      };\r\n      await saveChats(newMessage, id);\r\n    },\r\n\r\n    requestAssistance() {\r\n      if (!this.agent && !this.ended) {\r\n        const data = { conversationId: this.conversationId, userId: this.user };\r\n        this.socket.emit(\"requestAssistance\", data);\r\n        // Check if chat session has already started\r\n        const chatStarted = localStorage.getItem(\"chatStarted\");\r\n        this.showLoader = true;\r\n      }\r\n    },\r\n\r\n    async stopAutomate() {\r\n      // const botMsg = {\r\n      //   text: \"Great 😄 A member of our team will be in touch shortly. what can we do for you?\",\r\n      //   user: \"bot\",\r\n      //   type: \"text\",\r\n      //   isUser: true,\r\n      // };\r\n      // this.messages.push(botMsg);\r\n      // this.saveMessage(botMsg, this.conversationId);\r\n      this.joinConversation(this.conversationId);\r\n      this.automated = false;\r\n      this.chatToChatbottom();\r\n      this.requestAssistance();\r\n    },\r\n\r\n    isSocketInConversation() {\r\n      const conversationRoom = `conversation:${this.conversationId}`;\r\n\r\n      this.socket.emit(\r\n        \"isSocketInConversation\",\r\n        conversationRoom,\r\n        (isJoined) => {\r\n          if (isJoined) {\r\n            console.log(\r\n              `Socket has joined conversation ${this.conversationId}`\r\n            );\r\n          } else {\r\n            console.log(\r\n              `Socket has not joined conversation ${this.conversationId}`\r\n            );\r\n            this.joinConversation(this.conversationId);\r\n          }\r\n        }\r\n      );\r\n    },\r\n\r\n    async checkCase(step, save, msg, first) {\r\n      // find the object that has the step give in the function value\r\n      // console.log(save, \"the messages\", step, first);\r\n      let valueStep = this.flow.find((obj) => obj.step === step);\r\n      // console.log(save, \"the messages\", valueStep);\r\n      if (valueStep.next === \"end\" && first) {\r\n        // console.log(\"the end of it \");\r\n        if (!valueStep.auto) {\r\n          this.isSocketInConversation();\r\n          let intervalIdReq;\r\n\r\n          // Start the interval\r\n          // intervalIdReq = setInterval(() => {\r\n          //   // Call your method here\r\n          //   this.requestAssistance();\r\n          // }, 4000);\r\n\r\n          this.automated = false;\r\n        }\r\n        this.chatToChatbottom();\r\n        return;\r\n      }\r\n\r\n      if (save) {\r\n        // console.log(valueStep);\r\n        valueStep.messages.pop();\r\n        // loop through and  save user options\r\n        for (let index = 0; index < valueStep.messages.length; index++) {\r\n          const element = valueStep.messages[index];\r\n          element.isUser = true;\r\n          await this.saveMessage(element, this.conversationId);\r\n        }\r\n\r\n        let userMsg = {\r\n          text: msg.text,\r\n          user: this.user,\r\n          type: \"text\",\r\n          isUser: true,\r\n        };\r\n        await this.saveMessage(userMsg, this.conversationId);\r\n        await setStepConversation(this.conversationId, msg.id);\r\n        this.step = msg.id;\r\n      }\r\n\r\n      // No check and update next question for automated process\r\n      if (!save) {\r\n        for (let index = 0; index < valueStep.messages.length; index++) {\r\n          const element = valueStep.messages[index];\r\n          element.isUser = true;\r\n          // console.log(\"valueStep\", valueStep);\r\n          this.messages.push(element);\r\n          if (valueStep.next === \"end\" || !valueStep.auto) {\r\n            await this.saveMessage(element, this.conversationId);\r\n            // console.log(\"saving ending \");\r\n          }\r\n        }\r\n        if (valueStep.next === \"end\" && !valueStep.auto) {\r\n          await this.stopAutomate();\r\n          await this.sendToBot(\"point 3\");\r\n        }\r\n      }\r\n      // console.log(valueStep.next, save, \"the values\", step);\r\n    },\r\n\r\n    async lastMessageIsBot() {\r\n      const lastMessage = this.messages[this.messages.length - 1];\r\n\r\n      if (lastMessage.user === \"bot\") {\r\n        console.log(lastMessage, \"last message\");\r\n      }\r\n      return lastMessage && lastMessage.user === \"bot\";\r\n    },\r\n\r\n    startChatTimeout() {\r\n      // Calculate remaining time based on elapsed time\r\n      const elapsedTime = Date.now() - this.chatStartTime;\r\n      const remainingTime = Math.max(this.chatTimeoutDuration - elapsedTime, 0);\r\n\r\n      // Start the chat timeout timer\r\n      this.chatTimeout = setTimeout(() => {\r\n        // End the chat session on timeout\r\n        if (!this.ended) {\r\n          this.socket.emit(\"timeUp\", this.conversationId);\r\n        }\r\n\r\n        this.expiredConvId(true);\r\n      }, remainingTime);\r\n\r\n      // Update the line loader every second\r\n      const intervalId = setInterval(() => {\r\n        const elapsedTime = Date.now() - this.chatStartTime;\r\n        const remainingTime = Math.max(\r\n          this.chatTimeoutDuration - elapsedTime,\r\n          0\r\n        );\r\n        const remainingPercentage =\r\n          (remainingTime / this.chatTimeoutDuration) * 100;\r\n        this.loaderWidth = 100 - remainingPercentage;\r\n      }, 1000);\r\n\r\n      this.intervalIds.push(intervalId);\r\n    },\r\n\r\n    resetChatTimeout() {\r\n      // Reset the chat timeout timer\r\n      clearTimeout(this.chatTimeout);\r\n      if (!this.chatStartTime) {\r\n        this.chatStartTime = Date.now();\r\n      }\r\n      this.startChatTimeout();\r\n\r\n      // Clear the line loader interval\r\n      clearInterval(this.intervalIds.pop());\r\n      this.loaderWidth = 0;\r\n    },\r\n\r\n    getConversationById(conversationId) {\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\")) || {};\r\n      const conversation =\r\n        savedState.conversations?.byId[conversationId] || null;\r\n      return conversation;\r\n    },\r\n\r\n    getConversationIdFromLocalStorage() {\r\n      const conversationData = localStorage.getItem(\"conversationId\");\r\n      if (conversationData) {\r\n        const conversationId = conversationData.split(\"-\")[0];\r\n        return conversationId;\r\n      }\r\n      return null; // conversation ID not found or invalid\r\n    },\r\n\r\n    saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      // const conversationId = localStorage.getItem(\"conversationId\");\r\n      const convo = this.$route.params.id || this.conversationId;\r\n      const expire = this.getConversationById(convo).expire;\r\n      if (convo) {\r\n        const conversationTimestamp = parseInt(expire);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n\r\n    async expiredConvId(value) {\r\n      if (this.isConversationIdExpired() || value) {\r\n        // this.ended = true;\r\n      }\r\n    },\r\n\r\n    async getConversationId() {\r\n      let localChatId = this.$route.params.id || null;\r\n      if (localChatId === null) {\r\n        this.$router.push({ name: \"home\" });\r\n      }\r\n\r\n      return localChatId;\r\n    },\r\n\r\n    capitalizeName(name) {\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n\r\n    iniStartTime() {\r\n      this.chatStartTime = localStorage.getItem(\r\n        `chatStartTime-${this.conversationId}`\r\n      );\r\n      if (this.chatStartTime) {\r\n        // Restore chat start time from local storage\r\n\r\n        this.showLoader = true;\r\n        this.startChatTimeout();\r\n      }\r\n      // Set the chatStarted flag and chat start time in local storage\r\n      if (!this.chatStartTime) {\r\n        this.chatStartTime = Date.now();\r\n        localStorage.setItem(\r\n          `chatStartTime-${this.conversationId}`,\r\n          this.chatStartTime\r\n        );\r\n      }\r\n    },\r\n\r\n    async updateConversation(conversationId, conversationData) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const newState = {\r\n        ...data,\r\n        conversations: {\r\n          ...data.conversations,\r\n          byId: {\r\n            ...data.conversations.byId,\r\n            [conversationId]: {\r\n              ...data.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      //   this.updateState(newState);\r\n      console.log(newState, \"updateing feedback\");\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async sendToBot(point) {\r\n      console.log(\"joshijax\", point);\r\n      this.sending = true;\r\n      this.isTyping = true;\r\n      let messageStrings = this.messages.map((msg) => \"\\n\" + msg.text);\r\n      let isbot = await this.lastMessageIsBot();\r\n\r\n      if (isbot || this.automated) {\r\n        this.sending = false;\r\n        this.isTyping = false;\r\n        return;\r\n      }\r\n      let allMessageText = \" \\nhello\\n \" + messageStrings.join(\"\");\r\n      console.log(allMessageText, \"TEXT\", messageStrings);\r\n      this.inputText = \"\";\r\n      try {\r\n        console.log(allMessageText, \"TEXT2\");\r\n        const response = await axios({\r\n          method: \"post\",\r\n          url: \"http://127.0.0.1:8000/answer-me/\",\r\n\r\n          data: {\r\n            prompt: allMessageText,\r\n          },\r\n        });\r\n\r\n        console.log(\"JOSHIJAX\", typeof response.data.response);\r\n\r\n        await this.socket.emit(\"message\", {\r\n          conversationId: this.conversationId,\r\n          type: \"text\",\r\n          username: \"bot\",\r\n          message: { text: response.data.response },\r\n          isUser: false,\r\n        });\r\n        this.isTyping = false;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.isTyping = false;\r\n      }\r\n      this.sending = false;\r\n    },\r\n\r\n    messageEndsWithGoodbye(statement) {\r\n      if (!statement) {\r\n        return false;\r\n      }\r\n      // Define common keywords and phrases that indicate a goodbye message\r\n      const goodbyeKeywords = [\r\n        \"goodbye\",\r\n        \"bye\",\r\n        \"farewell\",\r\n        \"see you\",\r\n        \"take care\",\r\n        \"have a nice\",\r\n        \"later\",\r\n      ];\r\n\r\n      // Define regular expressions to match common patterns in goodbye messages\r\n      const patterns = [\r\n        /\\b(thanks|thank you)\\b/gi,\r\n        /\\b(good night|night)\\b/gi,\r\n        /\\b(talk to you|chat with you)\\b/gi,\r\n        /\\b(see you|cu|ttyl|ttys)\\b/gi,\r\n        /\\b(be safe)\\b/gi,\r\n        /\\b(have a great|have a nice)\\b/gi,\r\n        /\\b(take care)\\b/gi,\r\n        /\\b(sleep well)\\b/gi,\r\n        /\\b(catch you later|laters)\\b/gi,\r\n      ];\r\n\r\n      // Check if the statement contains a goodbye keyword\r\n      for (const keyword of goodbyeKeywords) {\r\n        if (statement.toLowerCase().includes(keyword)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // Check if the statement matches any of the common patterns\r\n      for (const pattern of patterns) {\r\n        if (pattern.test(statement)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // If no keywords or patterns were found, assume it's not a goodbye message\r\n      return false;\r\n    },\r\n\r\n    renderMessage(message) {\r\n      // Detect links in the message and render them as clickable links\r\n      const linkRegex = /(https?|ftp):\\/\\/[^\\s]+/gi;\r\n\r\n      if (this.isLink(message)) {\r\n        // Replace the link in the message with an anchor tag element\r\n        message = message.replace(\r\n          linkRegex,\r\n          '<a href=\"$&\" target=\"_blank\">$&</a>'\r\n        );\r\n      }\r\n\r\n      return message;\r\n    },\r\n\r\n    isLink(text) {\r\n      // Match links that do not already have an anchor tag\r\n      const linkRegex = /^(?!.*?<a\\s).*?(https?|ftp):\\/\\/[^\\s]+.*$/i;\r\n      return linkRegex.test(text);\r\n    },\r\n\r\n    async iniChat() {\r\n      console.log(\"joshijaxmsg\", this.botName);\r\n      this.isLoading = true;\r\n      let convoinfo = {};\r\n      this.conversationId = await this.getConversationId();\r\n      convoinfo = await getConversation(this.conversationId);\r\n      this.agent = convoinfo.agent;\r\n\r\n      this.messages = await getConvoChats(this.conversationId);\r\n\r\n      // console.log(\"glory\", this.messages);\r\n\r\n      this.step = convoinfo.step;\r\n\r\n      await this.expiredConvId(false);\r\n\r\n      this.chatToChatbottom();\r\n\r\n      this.iniStartTime();\r\n      // await this.submitText();\r\n      this.isLoading = false;\r\n      if (convoinfo.hasOwnProperty(\"ended\")) {\r\n        this.ended = convoinfo.ended;\r\n        let item = this.getConversationBy(this.$route.params.id);\r\n\r\n        item.ended = convoinfo.ended;\r\n        // console.log(item, \"the item\");\r\n        await this.updateConversation(this.$route.params.id, item);\r\n      } else {\r\n        this.ended = false;\r\n      }\r\n\r\n      await this.checkCase(this.step, false, null, true);\r\n\r\n      if (!this.ended && this.isBotEnabled && !this.automated) {\r\n        let logivVal = await this.lastMessageIsBot();\r\n\r\n        if (!logivVal) {\r\n          this.sendToBot(\"point 2\");\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.socket = io(\"http://localhost:3000/\");\r\n    this.socket.on(\"connect\", () => {\r\n      console.log(\"Connected to server\");\r\n\r\n      this.socket.emit(\"userType\", \"customer\");\r\n    });\r\n\r\n    // litsen to new\r\n\r\n    this.socket.on(\"newMessage\", async (message) => {\r\n      console.log(message.user, this.user);\r\n      if (message.user === this.user || message.user === \"user\") {\r\n        if (this.user === message.user) {\r\n        }\r\n        let value = {\r\n          text: message.text,\r\n          user: message.user,\r\n          type: \"text\",\r\n        };\r\n        console.log(\"sent out\", value);\r\n        await this.messages.push(value);\r\n        // console.log(this.messages, \"here final\");\r\n        await this.chatToChatbottom();\r\n        await this.newMessageSound(outgoing);\r\n        if (this.isBotEnabled) {\r\n          this.sendToBot(\"point 1\");\r\n        }\r\n      } else {\r\n        console.log(\"recieved\", message);\r\n        this.messages.push(message);\r\n        // console.log(this.messages, \"here final\");\r\n        this.chatToChatbottom();\r\n        this.newMessageSound(incoming);\r\n        readMessage(this.conversationId);\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"joined\", async (message) => {\r\n      console.log(\r\n        this.user != message.user,\r\n        this.user,\r\n        message.user,\r\n        \"the data i need\"\r\n      );\r\n\r\n      if (this.user != message.user) {\r\n        if (this.agent !== message.user) {\r\n          this.messages.push(message);\r\n          // this.saveMessage(message);\r\n          await this.chatToChatbottom();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"typing\", (isTyping) => {\r\n      // console.log(isTyping);\r\n      this.isTyping = isTyping.status;\r\n      this.typingMsg = `${isTyping.user} is typing`;\r\n      this.chatToChatbottom();\r\n    });\r\n\r\n    this.socket.on(\"requestAccepted\", async (data) => {\r\n      console.log(data, \"requestAccepted\");\r\n      this.agent = data.userId;\r\n    });\r\n\r\n    await this.iniChat();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.socket.off();\r\n  },\r\n\r\n  watch: {\r\n    messages: {\r\n      handler(newMessages) {\r\n        const lastMessage = newMessages[newMessages.length - 1];\r\n        if (\r\n          lastMessage &&\r\n          this.messageEndsWithGoodbye(lastMessage.text) &&\r\n          this.ended !== null &&\r\n          !this.ended\r\n        ) {\r\n          // console.log('Last message ended with \"Goodbye\"');\r\n\r\n          setTimeout(() => {\r\n            this.showFeeback();\r\n            // console.log('Last message ended with \"Goodbye\"')\r\n          }, 3000);\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n\r\n    $route: {\r\n      async handler(to, from) {\r\n        await this.iniChat();\r\n        // if (to.params.id !== from.params.id) {\r\n\r\n        // }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    displayAgent() {\r\n      return this.agent || \"bot\";\r\n    },\r\n    // ...other computed properties\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <div id=\"chatview\">\r\n    <transition name=\"bounce\">\r\n      <div>\r\n        <div class=\"chat-header\">\r\n          <v-icon\r\n            style=\"cursor: pointer\"\r\n            @click=\"$emit('goBack')\"\r\n            start\r\n            icon=\"mdi-arrow-left\"\r\n          ></v-icon>\r\n          <h3>Chatly</h3>\r\n        </div>\r\n\r\n        <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n          <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n\r\n          <div class=\"d-flex flex-wrap\">\r\n            <v-form ref=\"form\">\r\n              <h3>Please tell us how was your experience?</h3>\r\n              <v-btn-toggle v-model=\"selectedEmoji\" mandatory>\r\n                <v-btn\r\n                  v-for=\"emoji in emojis\"\r\n                  :key=\"emoji.value\"\r\n                  :value=\"emoji.value\"\r\n                  class=\"ma-2 custom-btn\"\r\n                >\r\n                  <span class=\"emoji\">{{ emoji.label }}</span>\r\n                  <v-tooltip top>\r\n                    <span class=\"tooltip-value\">{{ emoji.value }}</span>\r\n                  </v-tooltip>\r\n                </v-btn>\r\n              </v-btn-toggle>\r\n              <v-text-field\r\n                v-model=\"comments\"\r\n                label=\"Additional Comments\"\r\n                :rules=\"rules.comments\"\r\n              ></v-text-field>\r\n              <v-btn\r\n                color=\"blue\"\r\n                @click=\"submitFeedback\"\r\n                :disabled=\"selectedEmoji === null\"\r\n                >Submit</v-btn\r\n              >\r\n            </v-form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-footer\">\r\n          <!-- <div\r\n                style=\"\r\n                  margin: 24px auto 12px;\r\n                  text-align: center;\r\n                  font-size: 14px;\r\n                  line-height: 21px;\r\n                  padding-top: 0px;\r\n                  color: rgb(115, 115, 115);\r\n                \"\r\n              >\r\n                Your conversation has ended\r\n              </div>\r\n              <button @click=\"createNewConvo\" class=\"start\">\r\n                Start Conversation\r\n              </button> -->\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <ErrorDialog\r\n      v-if=\"showErrorDialog\"\r\n      :error=\"errorMessage\"\r\n      @dismiss=\"hideErrorDialog\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mainPage from \"../components/mainPage.vue\";\r\nimport { updateConvo } from \"@/utils/firbase_utils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmoji: null,\r\n      comments: \"\",\r\n      isLoading: false,\r\n      emojis: [\r\n        { value: \"bad\", label: \"😠\" },\r\n        { value: \"fair\", label: \"😕\" },\r\n        { value: \"good\", label: \"😊\" },\r\n        { value: \"great\", label: \"😄\" },\r\n      ],\r\n      rules: {\r\n        comments: [\r\n          (value) => !!value || \"Comments are required\",\r\n          (value) =>\r\n            value.length <= 1000 ||\r\n            \"Comments must be less than 1000 characters\",\r\n        ],\r\n      },\r\n    };\r\n  },\r\n\r\n  components: {\r\n    mainPage,\r\n  },\r\n\r\n  methods: {\r\n    async updateConversation(conversationId, conversationData) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const newState = {\r\n        ...data,\r\n        conversations: {\r\n          ...data.conversations,\r\n          byId: {\r\n            ...data.conversations.byId,\r\n            [conversationId]: {\r\n              ...data.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      //   this.updateState(newState);\r\n      console.log(newState, \"updateing feedback\");\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async submitFeedback() {\r\n      if (this.$refs.form.validate()) {\r\n        await updateConvo(this.$route.params.id, {\r\n          ended: true,\r\n          comment: this.comments,\r\n          reaction: this.selectedEmoji,\r\n        });\r\n        let item = this.getConversationBy(this.$route.params.id);\r\n        console.log(\"the item\", item);\r\n        item.ended = true;\r\n        // console.log(item, \"the item\");\r\n        await this.updateConversation(this.$route.params.id, item);\r\n        this.$router.push({ name: \"home\" });\r\n      }\r\n      // Code to submit feedback goes here\r\n    },\r\n  },\r\n\r\n  created() {},\r\n};\r\n</script>\r\n<style scoped>\r\n.v-btn-toggle {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.custom-btn {\r\n  font-size: 37px;\r\n  padding: 16px;\r\n}\r\n\r\n.emoji {\r\n  display: block;\r\n}\r\n\r\n.tooltip-value {\r\n  font-size: 14px;\r\n}\r\n\r\n.v-btn-group--density-default.v-btn-group {\r\n  height: 95px;\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div id=\"chatview\">\r\n      <transition name=\"bounce\">\r\n        <div v-show=\"showPop\">\r\n          <div class=\"chat-header\">\r\n            <h3>Chatly</h3>\r\n            <!-- <i class=\"fa fa-times\" @click=\"showPop = false\"></i> -->\r\n          </div>\r\n          <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n            <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n            <!-- Line loader for chat timeout -->\r\n            <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n            <div class=\"message-box\">\r\n              <v-list item-props lines=\"two\">\r\n                <SingleChat\r\n                  :convo=\"convo\"\r\n                  v-for=\"convo in sortedConversations\"\r\n                  :key=\"convo.text\"\r\n                  :agent=\"convo.agent\"\r\n                  :user=\"user\"\r\n                  @updateUnreadMsg=\"updateUnreadMsg\"\r\n                  class=\"chat-transition\"\r\n                />\r\n              </v-list>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"chat-footer\">\r\n            <v-btn\r\n              @click=\"createNewConvo\"\r\n              class=\"start\"\r\n              :aria-details=\"getCount\"\r\n              getCount\r\n              :disabled=\"getCount\"\r\n            >\r\n              Start Conversation\r\n            </v-btn>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SingleChat from \"./singleChat.vue\";\r\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\r\nimport io from \"socket.io-client\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\nimport { reactive } from \"vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      socketMainpage: null,\r\n      chatActive: false,\r\n      isLoading: false,\r\n      conversations: reactive([]),\r\n    };\r\n  },\r\n  props: [\"showPop\", \"addConversation\", \"user\"],\r\n  components: {\r\n    SingleChat,\r\n  },\r\n  methods: {\r\n    show() {\r\n      this.$emit(\"showPoper\");\r\n    },\r\n\r\n    async createNewConvo() {\r\n      this.isLoading = true;\r\n      let chatId = await createConversationId(this.user);\r\n      console.log(chatId);\r\n      await this.saveConversationId(chatId);\r\n      this.isLoading = false;\r\n      this.$router.push({\r\n        name: \"conversation\",\r\n        params: { id: chatId },\r\n      });\r\n    },\r\n\r\n    updateUnreadMsg() {\r\n      this.$emit(\"updateUnreadMsg\", 1);\r\n    },\r\n\r\n    async saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n        ended: false,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    handleNewMessage(newMessage) {\r\n      console.log(newMessage.createdAt, \"time check\");\r\n      const conversationIndex = this.conversations.findIndex(\r\n        (c) => c.conversationId === newMessage.conversationId\r\n      );\r\n      if (conversationIndex > -1) {\r\n        // Update the conversation with the new message text\r\n        const conversation = this.conversations[conversationIndex];\r\n        conversation.text = newMessage.text;\r\n        conversation.userNewmessage = true;\r\n        conversation.createdAt = newMessage.createdAt;\r\n        this.conversations.splice(conversationIndex, 1, conversation);\r\n\r\n        // Move the conversation to the top of the list\r\n        this.$nextTick(() => {\r\n          const [movedConversation] = this.conversations.splice(\r\n            conversationIndex,\r\n            1\r\n          );\r\n          this.conversations.unshift(movedConversation);\r\n        });\r\n      }\r\n    },\r\n\r\n    async getAllInfo(conversation) {\r\n      const result = await getLastChat(conversation);\r\n\r\n      let userNewmessage = (await result.parentData.userNewmessage) || false;\r\n      let lastMsg = await result.lastChatData;\r\n      if (result.lastChatData === null) {\r\n        lastMsg = {\r\n          text: \"hello message\",\r\n          user: \"Bot\",\r\n          createdAt: Timestamp.now(),\r\n        };\r\n      }\r\n      let ended;\r\n      if (result.parentData.hasOwnProperty(\"ended\")) {\r\n        ended = result.parentData.ended;\r\n      } else {\r\n        ended = false;\r\n      }\r\n\r\n      return {\r\n        conversationId: conversation,\r\n        text: lastMsg.text,\r\n        user: lastMsg.user,\r\n        agent: result.parentData.agent,\r\n        ended,\r\n        userNewmessage: userNewmessage,\r\n        createdAt: lastMsg.createdAt,\r\n      };\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      const conversationId = localStorage.getItem(\"conversationId\");\r\n      if (conversationId) {\r\n        const conversationTimestamp = parseInt(conversationId.split(\"-\")[1]);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.isLoading = true;\r\n    this.socketMainpage = io(\"https://serverchatly.herokuapp.com\");\r\n    this.socketMainpage.on(\"connect\", () => {\r\n      console.log(\"Connected to server\");\r\n    });\r\n\r\n    this.socketMainpage.on(\"newMessage\", (message) => {\r\n      message.createdAt = Timestamp.now();\r\n      console.log(message.conversationId, this.user, \"the new message\");\r\n      this.handleNewMessage(message);\r\n    });\r\n\r\n    const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n    const conversationsById = savedState.conversations.byId;\r\n\r\n    const valuesArray = [];\r\n\r\n    for (const id in conversationsById) {\r\n      const obj = { ...conversationsById[id], id };\r\n      valuesArray.push(obj);\r\n    }\r\n\r\n    const reversedArray = valuesArray.reverse(); // reverse the order of the array\r\n\r\n    const firstThree = reversedArray.slice(0, 3); // get the first three elements of the reversed array\r\n\r\n    console.log(firstThree, \"data i want\");\r\n\r\n    for (let i = 0; i < firstThree.length; i++) {\r\n      const element = firstThree[i];\r\n      let convoInfo = await this.getAllInfo(element.id);\r\n\r\n      this.conversations = [...this.conversations, convoInfo];\r\n    }\r\n\r\n    if (firstThree.length > 0) {\r\n      this.socketMainpage.emit(\"join\", {\r\n        id: firstThree[0].id,\r\n        user: this.user,\r\n      });\r\n    }\r\n\r\n    console.log(this.conversations, \"data i want\");\r\n\r\n    this.isLoading = false;\r\n  },\r\n  computed: {\r\n    sortedConversations() {\r\n      return this.conversations.sort((a, b) => {\r\n        return b.createdAt.seconds - a.createdAt.seconds;\r\n      });\r\n    },\r\n\r\n    getCount() {\r\n      const endedCount = this.conversations.reduce((count, message) => {\r\n        return count + (!message.ended ? 1 : 0);\r\n      }, 0);\r\n      console.log(\"computed\", endedCount);\r\n\r\n      return endedCount > 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.chat-transition {\r\n  transition: all 0.3s ease-out;\r\n}\r\n</style>\r\n","import { render } from \"./mainPage.vue?vue&type=template&id=2b96475c\"\nimport script from \"./mainPage.vue?vue&type=script&lang=js\"\nexport * from \"./mainPage.vue?vue&type=script&lang=js\"\n\nimport \"./mainPage.vue?vue&type=style&index=0&id=2b96475c&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./feedBack.vue?vue&type=template&id=09d26ae6&scoped=true\"\nimport script from \"./feedBack.vue?vue&type=script&lang=js\"\nexport * from \"./feedBack.vue?vue&type=script&lang=js\"\n\nimport \"./feedBack.vue?vue&type=style&index=0&id=09d26ae6&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09d26ae6\"]])\n\nexport default __exports__","import { render } from \"./chatView.vue?vue&type=template&id=59f9eef3\"\nimport script from \"./chatView.vue?vue&type=script&lang=js\"\nexport * from \"./chatView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div id=\"chatview\">\r\n    <transition name=\"bounce\">\r\n      <div>\r\n        <div class=\"chat-header\">\r\n          <v-icon\r\n            style=\"cursor: pointer\"\r\n            @click=\"\r\n              $router.push({\r\n                name: 'conversation',\r\n                params: { id: $route.params.id },\r\n              })\r\n            \"\r\n            start\r\n            icon=\"mdi-arrow-left\"\r\n          ></v-icon>\r\n          <h3>Chatly</h3>\r\n        </div>\r\n\r\n        <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n          <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n\r\n          <div class=\"d-flex flex-wrap\">\r\n            <v-form ref=\"form\">\r\n              <h1>Feedback</h1>\r\n              <v-btn-toggle v-model=\"selectedEmoji\" mandatory>\r\n                <v-btn\r\n                  v-for=\"emoji in emojis\"\r\n                  :key=\"emoji.value\"\r\n                  :value=\"emoji.value\"\r\n                  class=\"ma-2 custom-btn\"\r\n                >\r\n                  <span class=\"emoji\">{{ emoji.label }}</span>\r\n                  <v-tooltip top>\r\n                    <span class=\"tooltip-value\">{{ emoji.value }}</span>\r\n                  </v-tooltip>\r\n                </v-btn>\r\n              </v-btn-toggle>\r\n              <v-text-field\r\n                v-model=\"comments\"\r\n                label=\"Additional Comments\"\r\n                :rules=\"rules.comments\"\r\n              ></v-text-field>\r\n              <v-btn\r\n                color=\"blue\"\r\n                @click=\"submitFeedback\"\r\n                :disabled=\"selectedEmoji === null\"\r\n                >Submit</v-btn\r\n              >\r\n            </v-form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-footer\">\r\n          <!-- <div\r\n              style=\"\r\n                margin: 24px auto 12px;\r\n                text-align: center;\r\n                font-size: 14px;\r\n                line-height: 21px;\r\n                padding-top: 0px;\r\n                color: rgb(115, 115, 115);\r\n              \"\r\n            >\r\n              Your conversation has ended\r\n            </div>\r\n            <button @click=\"createNewConvo\" class=\"start\">\r\n              Start Conversation\r\n            </button> -->\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <ErrorDialog\r\n      v-if=\"showErrorDialog\"\r\n      :error=\"errorMessage\"\r\n      @dismiss=\"hideErrorDialog\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mainPage from \"../components/mainPage.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmoji: null,\r\n      comments: \"\",\r\n      isLoading: false,\r\n      emojis: [\r\n        { value: \"bad\", label: \"😠\" },\r\n        { value: \"fair\", label: \"😕\" },\r\n        { value: \"good\", label: \"😊\" },\r\n        { value: \"great\", label: \"😄\" },\r\n      ],\r\n      rules: {\r\n        comments: [\r\n          (value) => !!value || \"Comments are required\",\r\n          (value) =>\r\n            value.length <= 1000 ||\r\n            \"Comments must be less than 1000 characters\",\r\n        ],\r\n      },\r\n    };\r\n  },\r\n\r\n  props: [\"showPop\", \"showChat\", \"addConversation\", \"stateval\", \"user\"],\r\n\r\n  components: {\r\n    mainPage,\r\n  },\r\n\r\n  methods: {\r\n    async submitFeedback() {\r\n      if (this.$refs.form.validate()) {\r\n        console.log(\"the item\");\r\n        let item = this.getConversationBy(this.conversationId);\r\n        item.ended = false;\r\n        // console.log(item, \"the item\");\r\n        this.updateConversation(this.conversationId, item);\r\n      }\r\n      // Code to submit feedback goes here\r\n    },\r\n  },\r\n\r\n  created() {},\r\n};\r\n</script>\r\n<style scoped>\r\n.v-btn-toggle {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.custom-btn {\r\n  font-size: 37px;\r\n  padding: 16px;\r\n}\r\n\r\n.emoji {\r\n  display: block;\r\n}\r\n\r\n.tooltip-value {\r\n  font-size: 14px;\r\n}\r\n\r\n.v-btn-group--density-default.v-btn-group {\r\n  height: 95px;\r\n}\r\n</style>\r\n","import { render } from \"./feedbackView.vue?vue&type=template&id=2f0b8e7e&scoped=true\"\nimport script from \"./feedbackView.vue?vue&type=script&lang=js\"\nexport * from \"./feedbackView.vue?vue&type=script&lang=js\"\n\nimport \"./feedbackView.vue?vue&type=style&index=0&id=2f0b8e7e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\Project\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2f0b8e7e\"]])\n\nexport default __exports__","import {\n  createRouter,\n  createWebHistory,\n  createWebHashHistory,\n} from \"vue-router\";\nimport chatmain from \"../views/chatmain.vue\";\nimport chatView from \"../views/chatView.vue\";\nimport feedbackView from \"../views/feedbackView.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    component: chatmain,\n  },\n  {\n    path: \"/conversation/:id\",\n    name: \"conversation\",\n    component: chatView,\n  },\n  {\n    path: \"/feedback/:id\",\n    name: \"feedback\",\n    component: feedbackView,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n});\n\nrouter.afterEach((to, from) => {\n  const appState = JSON.parse(localStorage.getItem(\"appState\")) || {};\n  console.log(\"thus joshua ikiah\", appState);\n  const newState = {\n    ...appState,\n    router: {\n      location: {\n        pathname: to.path,\n        name: to.name,\n        search: to.query,\n        hash: to.hash,\n        state: null,\n        key: \"\",\n      },\n      action: to.name === from.name ? \"REPLACE\" : \"PUSH\",\n      previousLocations: [\n        {\n          location: {\n            pathname: from.path,\n            search: from.query,\n            hash: from.hash,\n            state: null,\n            key: \"\",\n          },\n          action: to.name === from.name ? \"REPLACE\" : \"PUSH\",\n        },\n      ],\n    },\n  };\n  localStorage.setItem(\"appState\", JSON.stringify(newState));\n});\n\nexport default router;\n","import { createApp, defineCustomElement } from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport testApp from \"./testApp.vue\";\r\nimport vuetify from \"./plugins/vuetify\";\r\nimport { loadFonts } from \"./plugins/webfontloader\";\r\nimport VueCustomElement from \"vue-custom-element\";\r\nimport router from \"./router\";\r\n\r\nconst app = createApp(App);\r\napp.use(router);\r\napp.use(vuetify);\r\n\r\n// // Define the custom element with defineCustomElement\r\n// const CustomElement = defineCustomElement(app);\r\n\r\n// // Define the custom element using customElements.define\r\n// customElements.define(\"chat-window\", CustomElement);\r\n\r\n// Define a custom element from the Vue app\r\n// const CustomElement = defineCustomElement(app, {\r\n//   // The name of your custom element\r\n//   tagName: \"my-custom-element\",\r\n// });\r\n\r\n// customElements.define(\"my-custom-element\", CustomElement);\r\n\r\ncreateApp(testApp).use(router).use(vuetify).mount(\"#chatly-app\");\r\n\r\n// export function initWidget(elementId) {\r\n//   createApp(App)\r\n//     .use(router)\r\n//     .use(vuetify)\r\n//     .mount(\"#\" + elementId);\r\n// }\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_widget\"] = self[\"webpackChunkvue_widget\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(422); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","xmlns","viewBox","_createElementVNode","d","cx","cy","r","fill","x","y","_hoisted_3","_hoisted_4","_hoisted_5","width","height","_hoisted_8","_createElementBlock","_createVNode","_Transition","name","style","$data","_hoisted_1","_createBlock","_component_router_view","checkFirst","$options","updateState","addConversation","updateConversation","removeConversation","getConversationBy","showChat","showPop","stateval","user","unreadMsg","botName","onCreateNewConvo","onUpdateUnreadMsg","onClick","_hoisted_2","_hoisted_7","StartFirebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","getFirestore","db","createConversationId","async","dbref","collection","val","addDoc","step","agent","then","res","id","doc","error","setStepConversation","collectRef","updateDoc","console","log","saveChats","message","parentDocRef","subcollectionRef","text","type","isUser","newMessage","createdAt","serverTimestamp","agentNewmessage","lastMsgTime","userNewmessage","getConversation","snap","getDoc","exists","data","getLastChat","queryVal","query","orderBy","limit","parentData","querySnapshot","getDocs","docs","length","lastChatData","updateConvo","getConvoChats","value","orderedSubcollection","forEach","push","readMessage","ip","isLoading","methods","updateUnreadMsg","this","statecheck","localStorage","getItem","role","locale","hasConversations","conversations","byId","setItem","JSON","stringify","newState","conversationId","conversationData","parse","hasOwnProperty","removedConversation","remainingConversations","userIdCookie","fetch","json","split","join","timestamp","Date","now","fetchState","read","expire","ended","savedState","conversationsById","lastIdKey","Object","keys","pop","lastConversation","values","lastConversationEnded","chatId","saveConversationId","$router","params","get_creat_user","appState","router","location","pathname","__exports__","render","_component_chatmaintest","ref","_component_test","$props","onGoBack","onGoBackTo","_hoisted_6","_component_v_list","lines","_Fragment","convo","_component_SingleChat","key","_component_v_btn","getCount","_ctx","_component_v_list_item","title","subtitle","append","_component_v_badge","color","_component_v_divider","inset","dayjs","relativeTime","loaded","props","components","capitalizeName","charAt","toUpperCase","slice","timeAgo","datetime","toDate","diff","suffix","Math","abs","minutes","floor","hours","days","computed","displayAgent","imageSrc","url","_hoisted_17","_component_v_icon","start","icon","_component_NewImage","size","index","innerHTML","option","options","for","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_22","rows","disabled","onKeyup","onKeydown","placeholder","_component_feedBack","onGetConversationBy","onUpdateConversation","String","Number","default","mounted","canvas","$refs","context","getContext","fontSize","fontFamily","fillStyle","fillRect","textAlign","textBaseline","font","fillText","getNameInitial","watch","newValue","oldValue","_component_v_form","_component_v_btn_toggle","mandatory","emoji","label","_component_v_tooltip","top","_hoisted_9","_component_v_text_field","rules","comments","_hoisted_10","_component_ErrorDialog","onDismiss","selectedEmoji","emojis","form","validate","comment","reaction","item","$emit","created","incoming","document","querySelector","outgoing","feedback","socket","automated","loading","showErrorDialog","errorMessage","isTyping","joined","typingMsg","messages","chatTimeout","chatTimeoutDuration","chatStartTime","loaderWidth","intervalIds","showLoader","convoEnded","isBotEnabled","flow","next","auto","NewImage","feedBack","insertNewLine","event","shiftKey","textarea","startPos","selectionStart","endPos","selectionEnd","currentValue","substring","preventDefault","showFeeback","emit","username","status","resetChatTimeout","onTyping","setTimeout","checkPrev","object","checkNxt","lastIndex","currentIndex","indexOf","sound","play","msg","fullmsg","newMessageSound","checkCase","chatToChatbottom","scrollTop","scrollHeight","requestAssistance","userId","joinConversation","isSocketInConversation","conversationRoom","isJoined","save","first","valueStep","find","obj","element","saveMessage","userMsg","stopAutomate","sendToBot","lastMessage","startChatTimeout","elapsedTime","remainingTime","max","expiredConvId","intervalId","setInterval","remainingPercentage","clearTimeout","clearInterval","getConversationById","conversation","getConversationIdFromLocalStorage","isConversationIdExpired","conversationTimestamp","parseInt","twoDaysInMilliseconds","localChatId","iniStartTime","point","sending","messageStrings","map","isbot","lastMessageIsBot","allMessageText","inputText","response","axios","method","prompt","messageEndsWithGoodbye","statement","goodbyeKeywords","patterns","keyword","toLowerCase","includes","pattern","test","renderMessage","linkRegex","isLink","replace","convoinfo","logivVal","io","on","iniChat","beforeUnmount","off","handler","newMessages","deep","$route","to","from","immediate","socketMainpage","chatActive","showingConvo","SingleChat","show","convoId","init","$forceUpdate","handleNewMessage","conversationIndex","findIndex","c","splice","result","lastMsg","Timestamp","valuesArray","reversedArray","reverse","firstThree","i","convoInfo","getAllInfo","sortedConversations","sort","a","b","seconds","endedCount","reduce","count","chatmaintest","createVuetify","reactive","$nextTick","movedConversation","unshift","mainPage","audio","Audio","getConversationId","routes","path","component","chatmain","chatView","feedbackView","createRouter","history","createWebHashHistory","afterEach","search","hash","state","action","previousLocations","createApp","App","use","vuetify","testApp","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}