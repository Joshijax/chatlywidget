{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://vue-widget/./src/testApp.vue","webpack://vue-widget/./src/utils/firebaseDb.js","webpack://vue-widget/./src/utils/firbase_utils.js","webpack://vue-widget/./src/views/test/chatmaintest.vue","webpack://vue-widget/./src/components/test/singleChat.vue","webpack://vue-widget/./src/components/test/singleChat.vue?2f03","webpack://vue-widget/./src/views/test/testing.vue","webpack://vue-widget/./src/components/NewImage.vue","webpack://vue-widget/./src/components/NewImage.vue?d6b8","webpack://vue-widget/./src/components/test/feedBack.vue","webpack://vue-widget/./src/components/test/feedBack.vue?8cc5","webpack://vue-widget/./src/components/chatComp/inputFields.vue","webpack://vue-widget/./src/components/chatComp/inputFields.vue?010e","webpack://vue-widget/./src/views/test/testing.vue?5def","webpack://vue-widget/./src/views/test/chatmaintest.vue?e000","webpack://vue-widget/./src/testApp.vue?efb9","webpack://vue-widget/./src/plugins/vuetify.js","webpack://vue-widget/./src/main.js","webpack://vue-widget/webpack/bootstrap","webpack://vue-widget/webpack/runtime/chunk loaded","webpack://vue-widget/webpack/runtime/compat get default export","webpack://vue-widget/webpack/runtime/define property getters","webpack://vue-widget/webpack/runtime/global","webpack://vue-widget/webpack/runtime/hasOwnProperty shorthand","webpack://vue-widget/webpack/runtime/make namespace object","webpack://vue-widget/webpack/runtime/publicPath","webpack://vue-widget/webpack/runtime/jsonp chunk loading","webpack://vue-widget/webpack/startup"],"sourcesContent":["<template>\r\n  <div id=\"chat_123876\">\r\n    <transition name=\"bounce\">\r\n      <div\r\n        :style=\"[\r\n          showPop\r\n            ? 'border: 1px solid rgb(242, 242, 242); box-shadow: 6px 2px 15px 5px rgba(0, 0, 0, 0.1);'\r\n            : '',\r\n        ]\"\r\n      >\r\n        <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n        <chatmaintest\r\n          :checkFirst=\"checkFirst\"\r\n          @updateState=\"updateState\"\r\n          :addConversation=\"addConversation\"\r\n          :updateConversation=\"updateConversation\"\r\n          :removeConversation=\"removeConversation\"\r\n          :getConversationBy=\"getConversationBy\"\r\n          :showChat=\"showChat\"\r\n          :showPop=\"showPop\"\r\n          :stateval=\"stateval\"\r\n          :user=\"user\"\r\n          :unreadMsg=\"unreadMsg\"\r\n          :botName=\"botName\"\r\n          @createNewConvo=\"createNewConvo\"\r\n          @updateUnreadMsg=\"updateUnreadMsg\"\r\n          v-if=\"showPop\"\r\n        />\r\n      </div>\r\n    </transition>\r\n\r\n    <div class=\"chat-icon\" @click=\"toggleChat()\">\r\n      <transition name=\"bounce\">\r\n        <svg\r\n          v-if=\"!showPop\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n        >\r\n          <path\r\n            d=\"M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64h96v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L309.3 416H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z\"\r\n          />\r\n        </svg>\r\n\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          v-else\r\n        >\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            clip-rule=\"evenodd\"\r\n            d=\"M18.601 8.39897C18.269 8.06702 17.7309 8.06702 17.3989 8.39897L12 13.7979L6.60099 8.39897C6.26904 8.06702 5.73086 8.06702 5.39891 8.39897C5.06696 8.73091 5.06696 9.2691 5.39891 9.60105L11.3989 15.601C11.7309 15.933 12.269 15.933 12.601 15.601L18.601 9.60105C18.9329 9.2691 18.9329 8.73091 18.601 8.39897Z\"\r\n            fill=\"white\"\r\n          ></path>\r\n        </svg>\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\r\nimport chatmaintest from \"./views/test/chatmaintest.vue\";\r\nimport style from \"@/assets/css/main.css\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      showChat: false,\r\n      showPop: false,\r\n      user: \"\",\r\n      ip: \"\",\r\n      stateval: {},\r\n      unreadMsg: 0,\r\n      botName: \"Alex\",\r\n      isLoading: false,\r\n    };\r\n  },\r\n  components: { chatmaintest },\r\n\r\n  methods: {\r\n    updateUnreadMsg(value) {\r\n      this.unreadMsg = this.unreadMsg + value;\r\n      //   console.log(value, \"updating unread messge\", this.unreadMsg);\r\n    },\r\n    toggleChat() {\r\n      this.showPop = !this.showPop;\r\n      const newState = {\r\n        ...this.stateval,\r\n        state: {\r\n          ...this.stateval.state,\r\n          toggle: this.showPop,\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n\r\n    async checkFirst() {\r\n      let statecheck = localStorage.getItem(\"appState\");\r\n      if (statecheck === null) {\r\n        let data = {\r\n          user: {\r\n            role: \"lead\",\r\n            locale: \"en\",\r\n            hasConversations: true,\r\n          },\r\n          conversations: {\r\n            byId: {},\r\n          },\r\n          state: {\r\n            page: {\r\n              name: \"home\",\r\n              id: null,\r\n            },\r\n            toggle: false,\r\n          },\r\n        };\r\n        localStorage.setItem(\"appState\", JSON.stringify(data));\r\n      }\r\n    },\r\n    async updateState(newState) {\r\n      this.stateval = newState;\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n    addConversation(conversationId, conversationData) {\r\n      const newState = {\r\n        ...this.stateval,\r\n        conversations: {\r\n          ...this.stateval.conversations,\r\n          byId: {\r\n            ...this.stateval.conversations.byId,\r\n            [conversationId]: conversationData,\r\n          },\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n    updateConversation(conversationId, conversationData) {\r\n      const newState = {\r\n        ...this.stateval,\r\n        conversations: {\r\n          ...this.stateval.conversations,\r\n          byId: {\r\n            ...this.stateval.conversations.byId,\r\n            [conversationId]: {\r\n              ...this.stateval.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    removeConversation(conversationId) {\r\n      const {\r\n        [conversationId]: removedConversation,\r\n        ...remainingConversations\r\n      } = this.stateval.conversations.byId;\r\n      const newState = {\r\n        ...this.stateval,\r\n        conversations: {\r\n          ...this.stateval.conversations,\r\n          byId: remainingConversations,\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    },\r\n\r\n    async get_creat_user() {\r\n      // Check if we have a user ID cookie\r\n      // this.setCookie(\"userId\", \"10511221794\", 7)\r\n      // const userIdCookie = await this.getCookie(\"userId\");\r\n\r\n      const userIdCookie = localStorage.getItem(\"userId\");\r\n\r\n      // console.log(userIdCookie, \"okay the this\");\r\n\r\n      if (userIdCookie) {\r\n        // If we have a user ID cookie, use that\r\n        this.user = userIdCookie;\r\n      } else {\r\n        // Otherwise, fetch the user's IP address and create a new user ID\r\n        await fetch(\"https://api.ipify.org?format=json\")\r\n          .then((x) => x.json())\r\n          .then(({ ip }) => {\r\n            this.user = ip.split(\".\").join(\"\");\r\n            this.ip = ip;\r\n          });\r\n\r\n        // Set the new user ID as a cookie\r\n        // Cookies.set(\"userId\", this.user, { expires: 365 });\r\n        localStorage.setItem(\"userId\", this.user);\r\n      }\r\n\r\n      // console.log(this.ip, this.user, \"hellooooooooo\");\r\n    },\r\n\r\n    async saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n        ended: false,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    async createNewConvo() {\r\n      this.isLoading = true;\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n      const conversationsById = savedState.conversations.byId;\r\n\r\n      const lastIdKey = Object.keys(conversationsById).pop();\r\n\r\n      const lastConversation = Object.values(conversationsById).pop();\r\n      const lastConversationEnded = lastConversation\r\n        ? lastConversation.ended\r\n        : true;\r\n      //   console.log(\r\n      //     \"Last conversation ended:\",\r\n      //     lastConversationEnded,\r\n      //     lastConversation,\r\n      //     lastIdKey\r\n      //   );\r\n\r\n      if (lastConversationEnded) {\r\n        this.isLoading = true;\r\n        let chatId = await createConversationId(this.user);\r\n        // console.log(chatId);\r\n        await this.saveConversationId(chatId);\r\n        this.isLoading = false;\r\n        this.$router.push({\r\n          name: \"conversation\",\r\n          params: { id: chatId },\r\n        });\r\n      } else {\r\n        this.$router.push({\r\n          name: \"conversation\",\r\n          params: { id: lastIdKey },\r\n        });\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    this.checkFirst();\r\n\r\n    const savedState =\r\n      JSON.parse(localStorage.getItem(\"appState\")) || this.stateval;\r\n    await this.updateState(savedState);\r\n\r\n    this.removeConversation(\"undefined\");\r\n\r\n    // this.addConversation(\"ei6I4cTFfnyA6KeiQXck\", {\r\n    //   fetchState: \"partial\",\r\n    //   read: true,\r\n    //   expire: 1679263135957,\r\n    // });\r\n  },\r\n\r\n  async created() {\r\n    await this.checkFirst();\r\n    await this.get_creat_user();\r\n    const appState = JSON.parse(localStorage.getItem(\"appState\"));\r\n    // console.log(\"Created...\", appState.router.location.name);\r\n    if (appState && appState.hasOwnProperty(\"state\")) {\r\n      this.showPop = appState.state.toggle;\r\n    } else {\r\n      const newState = {\r\n        ...appState,\r\n        state: {\r\n          toggle: false,\r\n          page: {\r\n            name: \"home\",\r\n            id: null,\r\n          },\r\n        },\r\n      };\r\n      this.updateState(newState);\r\n    }\r\n  },\r\n};\r\n</script>\r\n","import { initializeApp } from \"firebase/app\";\r\n\r\nimport { getFirestore, Timestamp } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCkr7FFrAeCGR1GRo_cUNPyFf5kz8Zm9Ho\",\r\n  authDomain: \"chatly-9e73d.firebaseapp.com\",\r\n  projectId: \"chatly-9e73d\",\r\n  storageBucket: \"chatly-9e73d.appspot.com\",\r\n  messagingSenderId: \"692360901272\",\r\n  appId: \"1:692360901272:web:f2e46455a122ed050216ed\",\r\n  measurementId: \"G-DN2SKEJYP6\",\r\n  storageBucket: \"\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst storage = getStorage(app);\r\n\r\nfunction StartFirebase() {\r\n  return getFirestore(app);\r\n}\r\n\r\nexport { StartFirebase, storage };\r\n","import { StartFirebase, storage } from \"./firebaseDb\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  doc,\r\n  query,\r\n  where,\r\n  addDoc,\r\n  serverTimestamp,\r\n  orderBy,\r\n  updateDoc,\r\n  limit,\r\n} from \"firebase/firestore\";\r\nconst db = StartFirebase();\r\n\r\nconst createConversationId = async (user) => {\r\n  const dbref = collection(db, \"conversation\");\r\n  let val = \"\";\r\n  try {\r\n    const docRef = await addDoc(dbref, { step: 0, user: user, agent: \"\" }).then(\r\n      async (res) => {\r\n        // console.log(res, \"this is the resspin\");\r\n        // console.log(\"Document written with ID: \", res.id);\r\n        val = res.id;\r\n        const conversationDocRef = doc(db, \"conversation\", val);\r\n      }\r\n    );\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n  return val;\r\n};\r\n\r\nconst getStepConversation = async (id) => {\r\n  const snap = await getDoc(doc(db, \"conversation\", id));\r\n\r\n  if (snap.exists()) {\r\n    console.log(snap.data(), \"steppsss\");\r\n    return snap.data().step;\r\n  } else {\r\n    console.log(\"No such document\");\r\n  }\r\n};\r\n\r\nconst getConversationAgent = async (id) => {\r\n  const snap = await getDoc(doc(db, \"conversation\", id));\r\n\r\n  if (snap.exists()) {\r\n    // console.log(snap.data(), \"steppsss\");\r\n    return snap.data().agent;\r\n  } else {\r\n    console.log(\"No such document\");\r\n  }\r\n};\r\n\r\nconst setStepConversation = async (id, step) => {\r\n  const collectRef = collection(db, \"conversation\");\r\n  try {\r\n    await updateDoc(doc(collectRef, id), { step: step });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst updateConversationAgent = async (id, agent) => {\r\n  const collectRef = collection(db, \"conversation\");\r\n  try {\r\n    await updateDoc(doc(collectRef, id), { agent: agent });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst saveChats = async (message, id) => {\r\n  console.log(message, id, \"trying to save\");\r\n\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n  const subcollectionRef = collection(parentDocRef, \"chat\");\r\n\r\n  const { text, type, user, isUser } = message;\r\n\r\n  const newMessage = {\r\n    ...message,\r\n    createdAt: serverTimestamp(),\r\n  };\r\n\r\n  // Add a new document to the sub-collection with the current timestamp\r\n  await addDoc(subcollectionRef, newMessage).then(async (res) => {\r\n    console.log(\"Document written with ID: \", res.id);\r\n\r\n    // Update the conversation document to indicate that a new message has been added\r\n    if (isUser) {\r\n      await updateDoc(parentDocRef, {\r\n        agentNewmessage: true,\r\n        lastMsgTime: serverTimestamp(),\r\n      });\r\n      console.log(\"Conversation document updated with agentNewmessage: true\");\r\n    } else {\r\n      await updateDoc(parentDocRef, {\r\n        userNewmessage: true,\r\n        lastMsgTime: serverTimestamp(),\r\n      });\r\n      console.log(\"Conversation document updated with userNewmessage: true\");\r\n    }\r\n  });\r\n};\r\n\r\nconst getConversation = async (id) => {\r\n  const snap = await getDoc(doc(db, \"conversation\", id));\r\n\r\n  if (snap.exists()) {\r\n    // console.log(snap.data(), \"steppsss\");\r\n    return snap.data();\r\n  } else {\r\n    console.log(\"No such document\");\r\n  }\r\n};\r\n\r\nconst getLastChat = async (id) => {\r\n  // Create a reference to the parent document that contains the sub-collection\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n\r\n  // Create a reference to the sub-collection and order by \"createdAt\" in descending order\r\n  const subcollectionRef = collection(parentDocRef, \"chat\");\r\n  const queryVal = query(\r\n    subcollectionRef,\r\n    orderBy(\"createdAt\", \"desc\"),\r\n    limit(1)\r\n  );\r\n\r\n  let parentData = await getDoc(doc(db, \"conversation\", id));\r\n  if (parentData.exists()) {\r\n    // console.log(snap.data(), \"steppsss\");\r\n    parentData = parentData.data();\r\n  }\r\n  // Get the first document in the query snapshot\r\n  const querySnapshot = await getDocs(queryVal);\r\n\r\n  // console.log(querySnapshot.docs[0].data(), \"fetch data\");\r\n  if (querySnapshot.docs.length > 0) {\r\n    const lastChatData = querySnapshot.docs[0].data();\r\n    return { lastChatData, parentData };\r\n  } else {\r\n    return { lastChatData: null, parentData };\r\n  }\r\n};\r\n\r\nconst findRefobj = async (table, obj, objval) => {\r\n  // console.log(table, obj, objval);\r\n  const refCollectionRef = collection(db, table);\r\n  const q = query(refCollectionRef, where(obj, \"==\", objval));\r\n  const querySnapshot = await getDocs(q);\r\n  // console.log(\"got here again\", querySnapshot);\r\n  if (querySnapshot.size === 0) {\r\n    // console.log(\"false\");\r\n    return false;\r\n  }\r\n\r\n  // console.log(\"got here again\");\r\n\r\n  // console.log(\"size\", querySnapshot.docs[0].data());\r\n\r\n  let valdata = querySnapshot.docs[0].data();\r\n  let value = {\r\n    wallet: valdata.wallet,\r\n    ref_code: valdata.ref_code,\r\n  };\r\n\r\n  // console.log(value, \"value\");\r\n\r\n  return valdata;\r\n};\r\n\r\nconst updateConvo = async (id, data) => {\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n  await updateDoc(parentDocRef, data);\r\n};\r\n\r\nconst getConvoChats = async (id) => {\r\n  // Create a reference to the parent document that contains the sub-collection\r\n  // console.log(\"convo ID\", id);\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n  const value = [];\r\n\r\n  // Create a reference to the sub-collection\r\n  // const subcollectionRef = collection(parentDocRef, \"chat\");\r\n\r\n  // Create a reference to the sub-collection and order by \"createdAt\" in descending order\r\n  const subcollectionRef = collection(parentDocRef, \"chat\");\r\n\r\n  const orderedSubcollection = query(\r\n    subcollectionRef,\r\n    orderBy(\"createdAt\", \"asc\")\r\n  );\r\n\r\n  await updateDoc(parentDocRef, { userNewmessage: false });\r\n\r\n  // Get the documents in the sub-collection ordered by \"createdAt\"\r\n  const querySnapshot = await getDocs(orderedSubcollection);\r\n\r\n  // console.log(\"docs\", querySnapshot);\r\n\r\n  // Iterate over the documents in the query snapshot\r\n  querySnapshot.forEach((doc) => {\r\n    // console.log(doc.id, \" => \", doc.data());\r\n    value.push(doc.data());\r\n  });\r\n\r\n  return value;\r\n};\r\n\r\nconst readMessage = async (id) => {\r\n  // Create a reference to the parent document that contains the sub-collection\r\n  // console.log(\"convo ID\", id);\r\n  const parentDocRef = doc(db, \"conversation\", id);\r\n\r\n  await updateDoc(parentDocRef, { userNewmessage: false });\r\n};\r\n\r\nexport {\r\n  setStepConversation,\r\n  createConversationId,\r\n  saveChats,\r\n  getConvoChats,\r\n  getStepConversation,\r\n  getLastChat,\r\n  updateConversationAgent,\r\n  getConversationAgent,\r\n  findRefobj,\r\n  readMessage,\r\n  getConversation,\r\n  updateConvo,\r\n};\r\n","<template>\r\n  <div>\r\n    <div v-if=\"!showingConvo\">\r\n      <div id=\"chatview\">\r\n        <transition name=\"bounce\">\r\n          <div class=\"chat-container\">\r\n            <div class=\"chat-header\">\r\n              <h3 class=\"h1-chatly1345\">Arthian</h3>\r\n              <!-- <i class=\"fa fa-times\" @click=\"showPop = false\"></i> -->\r\n            </div>\r\n            <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n              <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n              <!-- Line loader for chat timeout -->\r\n              <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n              <div class=\"message-box\">\r\n                <v-list\r\n                  v-if=\"activeConversations.length > 0\"\r\n                  item-props\r\n                  lines=\"two\"\r\n                >\r\n                  <h3 class=\"h1-chatly1345\">Current conversation</h3>\r\n                  <SingleChat\r\n                    :convo=\"convo\"\r\n                    v-for=\"convo in activeConversations\"\r\n                    :key=\"convo.text\"\r\n                    :agent=\"convo.agent\"\r\n                    :user=\"user\"\r\n                    @updateUnreadMsg=\"updateUnreadMsg\"\r\n                    class=\"chat-transition\"\r\n                    @click=\"show(convo.conversationId)\"\r\n                  />\r\n                </v-list>\r\n                <v-list\r\n                  v-if=\"endedConversations.length > 0\"\r\n                  item-props\r\n                  lines=\"two\"\r\n                >\r\n                  <h3>Previous Closed Conversations</h3>\r\n                  <SingleChat\r\n                    :convo=\"convo\"\r\n                    v-for=\"convo in endedConversations\"\r\n                    :key=\"convo.text\"\r\n                    :agent=\"convo.agent\"\r\n                    :user=\"user\"\r\n                    @updateUnreadMsg=\"updateUnreadMsg\"\r\n                    class=\"chat-transition\"\r\n                    @click=\"show(convo.conversationId)\"\r\n                  />\r\n                </v-list>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"chat-footer\">\r\n              <v-btn\r\n                @click=\"createNewConvo\"\r\n                class=\"start\"\r\n                :aria-details=\"getCount\"\r\n                getCount\r\n                v-if=\"!getCount && !isLoading\"\r\n              >\r\n                Start Conversation\r\n              </v-btn>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n    <test\r\n      :botName=\"botName\"\r\n      :user=\"user\"\r\n      :conversationId=\"conversationId\"\r\n      @goBack=\"goBack\"\r\n      @goBackTo=\"goBackTo\"\r\n      @createNewConvo=\"createNewConvo\"\r\n      v-else\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SingleChat from \"../../components/test/singleChat.vue\";\r\nimport { createConversationId, getLastChat } from \"@/utils/firbase_utils\";\r\nimport io from \"socket.io-client\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\nimport test from \"./testing.vue\";\r\n// import style from \"\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      socketMainpage: null,\r\n      chatActive: false,\r\n      isLoading: false,\r\n      conversations: [],\r\n      showingConvo: false,\r\n      conversationId: \"\",\r\n      state: null,\r\n    };\r\n  },\r\n  props: [\"showPop\", \"addConversation\", \"user\", \"botName\", \"stateval\"],\r\n  components: {\r\n    SingleChat,\r\n    test,\r\n  },\r\n  methods: {\r\n    show(convoId) {\r\n      this.conversationId = \"\";\r\n      this.conversationId = convoId;\r\n      this.showingConvo = true;\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      this.state = data;\r\n      const newState = {\r\n        ...this.state,\r\n        state: {\r\n          ...this.state.state,\r\n          page: {\r\n            name: \"conversation\",\r\n            id: convoId,\r\n          },\r\n        },\r\n      };\r\n      this.$emit(\"updateState\", newState);\r\n    },\r\n\r\n    async goBack() {\r\n      this.showingConvo = false;\r\n      await this.init();\r\n      this.$forceUpdate();\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      this.state = data;\r\n      const newState = {\r\n        ...this.state,\r\n        state: {\r\n          ...this.state.state,\r\n          page: {\r\n            name: \"home\",\r\n            id: null,\r\n          },\r\n        },\r\n      };\r\n      this.$emit(\"updateState\", newState);\r\n    },\r\n\r\n    async goBackTo() {\r\n      this.showingConvo = false;\r\n      await this.init();\r\n      this.$forceUpdate();\r\n    },\r\n\r\n    updateUnreadMsg() {\r\n      this.$emit(\"updateUnreadMsg\");\r\n    },\r\n\r\n    async saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n        ended: false,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    handleNewMessage(newMessage) {\r\n      //   console.log(newMessage.createdAt, \"time check\");\r\n      const conversationIndex = this.conversations.findIndex(\r\n        (c) => c.conversationId === newMessage.conversationId\r\n      );\r\n      if (conversationIndex > -1) {\r\n        // Update the conversation with the new message text\r\n        const conversation = this.conversations[conversationIndex];\r\n        conversation.text = newMessage.text;\r\n        conversation.userNewmessage = true;\r\n        conversation.createdAt = newMessage.createdAt;\r\n        this.conversations.splice(conversationIndex, 1, conversation);\r\n\r\n        // Move the conversation to the top of the list\r\n      }\r\n    },\r\n\r\n    async getAllInfo(conversation) {\r\n      const result = await getLastChat(conversation);\r\n\r\n      let userNewmessage = (await result.parentData.userNewmessage) || false;\r\n      let lastMsg = await result.lastChatData;\r\n      if (result.lastChatData === null) {\r\n        lastMsg = {\r\n          text: \"hello message\",\r\n          user: \"Bot\",\r\n          createdAt: Timestamp.now(),\r\n        };\r\n      } else if (result.lastChatData.type === \"voice\") {\r\n        lastMsg = {\r\n          text: \"voice Message\",\r\n          user: result.lastChatData.user,\r\n          createdAt: result.lastChatData.createdAt,\r\n        };\r\n      } else if (result.lastChatData.type === \"image\") {\r\n        lastMsg = {\r\n          text: \"Image\",\r\n          user: result.lastChatData.user,\r\n          createdAt: result.lastChatData.createdAt,\r\n        };\r\n      }\r\n      let ended;\r\n      if (result.parentData.hasOwnProperty(\"ended\")) {\r\n        ended = result.parentData.ended;\r\n      } else {\r\n        ended = false;\r\n      }\r\n\r\n      return {\r\n        conversationId: conversation,\r\n        text: lastMsg.text,\r\n        user: lastMsg.user,\r\n        agent: result.parentData.agent,\r\n        ended,\r\n        userNewmessage: userNewmessage,\r\n        createdAt: lastMsg.createdAt,\r\n      };\r\n    },\r\n\r\n    async createNewConvo() {\r\n      console.log(\"click\");\r\n      this.isLoading = true;\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n      const conversationsById = savedState.conversations.byId;\r\n\r\n      const lastIdKey = Object.keys(conversationsById).pop();\r\n\r\n      const lastConversation = Object.values(conversationsById).pop();\r\n      const lastConversationEnded = lastConversation\r\n        ? lastConversation.ended\r\n        : true;\r\n\r\n      if (lastConversationEnded) {\r\n        this.isLoading = true;\r\n        let chatId = await createConversationId(this.user);\r\n        // console.log(chatId);\r\n        await this.saveConversationId(chatId);\r\n        this.isLoading = false;\r\n        this.show(chatId);\r\n      } else {\r\n        this.show(lastIdKey);\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      const conversationId = localStorage.getItem(\"conversationId\");\r\n      if (conversationId) {\r\n        const conversationTimestamp = parseInt(conversationId.split(\"-\")[1]);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n\r\n    async init() {\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\"));\r\n\r\n      const conversationsById = savedState.conversations.byId;\r\n\r\n      const valuesArray = [];\r\n\r\n      for (const id in conversationsById) {\r\n        const obj = { ...conversationsById[id], id };\r\n        valuesArray.push(obj);\r\n      }\r\n\r\n      const reversedArray = valuesArray.reverse(); // reverse the order of the array\r\n\r\n      const firstThree = reversedArray.slice(0, 3); // get the first three elements of the reversed array\r\n\r\n      //   console.log(firstThree, \"data i want\");\r\n\r\n      for (let i = 0; i < firstThree.length; i++) {\r\n        const element = firstThree[i];\r\n        let convoInfo = await this.getAllInfo(element.id);\r\n\r\n        // Check if the conversation already exists in the array\r\n        const index = this.conversations.findIndex(\r\n          (c) => c.conversationId === convoInfo.conversationId\r\n        );\r\n\r\n        // If the conversation exists, update the existing object\r\n        if (index !== -1) {\r\n          this.conversations[index] = convoInfo;\r\n        } else {\r\n          // Otherwise, add the new object to the array\r\n          this.conversations.push(convoInfo);\r\n        }\r\n      }\r\n\r\n      console.log(this.conversations, \"this is fine\");\r\n\r\n      if (firstThree.length > 0) {\r\n        this.socketMainpage.emit(\"join\", {\r\n          id: firstThree[0].id,\r\n          user: this.user,\r\n        });\r\n      }\r\n\r\n      //   console.log(this.conversations, \"data i want\");\r\n\r\n      this.isLoading = false;\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    this.isLoading = true;\r\n    this.socketMainpage = io(\"https://chatlysocket.herokuapp.com/\");\r\n    this.socketMainpage.on(\"connect\", () => {\r\n      //   console.log(\"Connected to server\");\r\n    });\r\n\r\n    this.socketMainpage.on(\"newMessage\", (message) => {\r\n      message.createdAt = Timestamp.now();\r\n      //   console.log(message.conversationId, this.user, \"the new message\");\r\n      this.handleNewMessage(message);\r\n    });\r\n\r\n    const appState = JSON.parse(localStorage.getItem(\"appState\"));\r\n    if (appState) {\r\n      if (appState.state.page.name === \"conversation\") {\r\n        this.conversationId = appState.state.page.id;\r\n        this.showingConvo = true;\r\n      }\r\n    }\r\n\r\n    await this.init();\r\n  },\r\n  computed: {\r\n    sortedConversations() {\r\n      return this.conversations.slice().sort((a, b) => {\r\n        return b.createdAt.seconds - a.createdAt.seconds;\r\n      });\r\n    },\r\n\r\n    activeConversations() {\r\n      return this.conversations.filter((c) => !c.ended);\r\n    },\r\n    endedConversations() {\r\n      return this.conversations.filter((c) => c.ended);\r\n    },\r\n\r\n    getCount() {\r\n      const endedCount = this.conversations.reduce((count, message) => {\r\n        return count + (!message.ended ? 1 : 0);\r\n      }, 0);\r\n      //   console.log(\"computed\", endedCount);\r\n\r\n      return endedCount > 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <div v-if=\"loaded\">\r\n    <v-list-item\r\n      :title=\"convo.text\"\r\n      :subtitle=\"convo.subtitle\"\r\n      :prepend-avatar=\"imageSrc\"\r\n      append-icon\r\n    >\r\n      <template #append>\r\n        <v-badge color=\"green\" v-if=\"convo.userNewmessage\">\r\n          <!-- <v-icon small>mdi-circle-medium</v-icon> -->\r\n        </v-badge>\r\n      </template>\r\n      <template v-slot:subtitle=\"{}\">\r\n        <span class=\"text-primary\">\r\n          {{\r\n            capitalizeName(\r\n              convo.user === \"bot\"\r\n                ? \"Alex\"\r\n                : convo.user === user\r\n                ? \"you\"\r\n                : agent || \"bot\"\r\n            )\r\n          }}\r\n        </span>\r\n        &mdash; {{ timeAgo(convo.createdAt) }}\r\n      </template>\r\n    </v-list-item>\r\n    <v-divider inset></v-divider>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLastChat } from \"@/utils/firbase_utils\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\nexport default {\r\n  data: () => ({\r\n    loaded: false,\r\n  }),\r\n  props: [\"convo\", \"agent\", \"user\"],\r\n  components: {},\r\n\r\n  methods: {\r\n    capitalizeName(name) {\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n    timeAgo(timestamp) {\r\n      const now = dayjs();\r\n      const datetime = dayjs(timestamp.toDate());\r\n      let diff = datetime.diff(now, \"second\");\r\n      let suffix = diff > 0 ? \" ago\" : \" ago\";\r\n      diff = Math.abs(diff);\r\n\r\n      if (diff < 60) {\r\n        return `Just now`;\r\n      } else if (diff < 3600) {\r\n        let minutes = Math.floor(diff / 60);\r\n        return `${minutes} ${minutes > 1 ? \"minutes\" : \"minute\"}${suffix}`;\r\n      } else if (diff < 86400) {\r\n        let hours = Math.floor(diff / 3600);\r\n        return `${hours} ${hours > 1 ? \"hours\" : \"hour\"}${suffix}`;\r\n      } else {\r\n        let days = Math.floor(diff / 86400);\r\n        return `${days} ${days > 1 ? \"days\" : \"day\"}${suffix}`;\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    console.log(this.convo, \"the convovov\");\r\n    this.loaded = true;\r\n  },\r\n  computed: {\r\n    displayAgent() {\r\n      // let theUser = this.agent || \"bot\";\r\n      // if (this.convo.user === \"bot\") {\r\n      //   theUser = this.convo.user;\r\n      // }\r\n      return this.convo.user === \"bot\" ? \"Alex\" : this.agent || \"bot\";\r\n    },\r\n\r\n    imageSrc() {\r\n      // console.log(this.displayAgent, \"the agent \");\r\n      const url = `https://ui-avatars.com/api/?name=${this.displayAgent}&size=40&background=%23ccc&color=fff&color=fff&rounded=true&font-size=0.5`;\r\n      return url;\r\n    },\r\n\r\n    // ...other computed properties\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./singleChat.vue?vue&type=template&id=06be367d\"\nimport script from \"./singleChat.vue?vue&type=script&lang=js\"\nexport * from \"./singleChat.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div v-show=\"!feedback\" id=\"chatview\">\r\n      <transition name=\"bounce\">\r\n        <div class=\"chat-container\">\r\n          <div class=\"chat-header\">\r\n            <img\r\n              @click=\"$emit('goBack')\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              style=\"cursor: pointer\"\r\n              src=\"https://img.icons8.com/windows/32/ffffff/long-arrow-left.png\"\r\n              alt=\"long-arrow-left\"\r\n            />\r\n            <h3 class=\"h1-chatly1345\">Arthian {{ agent }}</h3>\r\n            <NewImage v-if=\"agent !== null\" :name=\"botName\" size=\"50\" />\r\n            <img\r\n              v-if=\"!ended && ended !== null\"\r\n              @click=\"showFeeback\"\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src=\"https://img.icons8.com/ios/50/ffffff/delete-sign.png\"\r\n              alt=\"delete-sign\"\r\n            />\r\n          </div>\r\n          <div\r\n            v-if=\"showLoader\"\r\n            class=\"line-loader\"\r\n            :style=\"{ width: loaderWidth + '%' }\"\r\n          ></div>\r\n          <div ref=\"chatbody\" class=\"chat-body\" id=\"chat-body\">\r\n            <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n            <!-- Line loader for chat timeout -->\r\n            <!-- <div class=\"line-loader\" :style=\"{ width: loaderWidth + '%' }\"></div> -->\r\n\r\n            <div class=\"message-box\">\r\n              <div\r\n                v-for=\"(message, index) in messages\"\r\n                :key=\"index\"\r\n                :value=\"user\"\r\n                :style=\"[\r\n                  !checkNxt(message, index) ? 'margin-bottom: 6px;' : '',\r\n                ]\"\r\n                :class=\"[\r\n                  message.user === user\r\n                    ? 'message-box__item outgoing'\r\n                    : message.user === 'user'\r\n                    ? 'message-box__item outgoing'\r\n                    : 'message-box__item incoming',\r\n                ]\"\r\n              >\r\n                <div v-if=\"message.type === 'text'\">\r\n                  <div v-show=\"checkPrev(message, index)\" class=\"name\">\r\n                    <NewImage\r\n                      v-if=\"message.user !== user\"\r\n                      :name=\"message.user == 'bot' ? botName : message.user\"\r\n                      :size=\"20\"\r\n                    />\r\n                    {{\r\n                      capitalizeName(\r\n                        message.user == \"bot\"\r\n                          ? botName\r\n                          : message.user === user\r\n                          ? \"you\"\r\n                          : message.user\r\n                      )\r\n                    }}\r\n                  </div>\r\n\r\n                  <div\r\n                    :class=\"[\r\n                      message.user === user\r\n                        ? 'user-text'\r\n                        : message.user === 'user'\r\n                        ? 'user-text'\r\n                        : 'bot-text',\r\n                    ]\"\r\n                  >\r\n                    <span v-html=\"renderMessage(message.text)\"></span>\r\n                  </div>\r\n                </div>\r\n                <div v-else-if=\"message.type === 'option'\">\r\n                  <div\r\n                    v-for=\"(options, index) in message.option\"\r\n                    :key=\"index\"\r\n                    style=\"margin-bottom: 5px\"\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      :name=\"`name${index}`\"\r\n                      :value=\"options.text\"\r\n                      :id=\"index\"\r\n                    />\r\n                    <label\r\n                      :for=\"index\"\r\n                      class=\"md-chip md-chip-clickable md-chip-hover\"\r\n                      @click=\"clickSelect(options)\"\r\n                    >\r\n                      {{ options.text }}</label\r\n                    >\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- if user just joined Chat -->\r\n                <div v-if=\"message.type === 'joined'\" class=\"just-joined\">\r\n                  <span class=\"join-message\"\r\n                    >{{ message.text }} Just joined chat</span\r\n                  >\r\n                </div>\r\n\r\n                <!-- if message type is input -->\r\n\r\n                <div v-else-if=\"message.type === 'input'\">\r\n                  <inputFields\r\n                    :message=\"message\"\r\n                    @handleInputSubmit=\"handleInputSubmit\"\r\n                  />\r\n                </div>\r\n\r\n                <!-- if message type is voice -->\r\n                <div v-else-if=\"message.type === 'voice'\">\r\n                  <!-- <audio id=\"audio\" :src=\"message.text\" controls></audio> -->\r\n                  <button @click=\"playVoiceMessage(message)\">\r\n                    Play voice message\r\n                  </button>\r\n                </div>\r\n                <div v-else-if=\"message.type === 'image'\">\r\n                  <img :src=\"message.text\" alt=\"\" width=\"50\" height=\"50\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div style=\"text-align: left; margin-bottom: 15px\">\r\n                <div v-if=\"isTyping || loading\" id=\"loading-bubble\">\r\n                  <div class=\"spinner\">\r\n                    <div class=\"bounce1\"></div>\r\n                    <div class=\"bounce2\"></div>\r\n                    <div class=\"bounce3\"></div>\r\n                  </div>\r\n                  <!-- <div>{{ typingMsg }}</div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"!ended\">\r\n            <div\r\n              v-if=\"previewImageUrl\"\r\n              style=\"position: relative; width: fit-content\"\r\n            >\r\n              <img\r\n                :src=\"previewImageUrl\"\r\n                style=\"\r\n                  max-width: 100%;\r\n                  max-height: 100px;\r\n                  min-width: 100%;\r\n                  min-height: 100px;\r\n                \"\r\n              />\r\n\r\n              <button\r\n                class=\"css-2chq30\"\r\n                @click=\"cancelImage\"\r\n                style=\"position: absolute; top: 5px; right: -10px\"\r\n              >\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M18 6L6 18M6 6L18 18\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n              <button\r\n                @click.prevent=\"sendImage\"\r\n                style=\"position: absolute; bottom: 5px; right: -10px\"\r\n              >\r\n                <svg\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M5 12H19M19 12L12 5M19 12L12 19\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            <div\r\n              v-if=\"!automated\"\r\n              class=\"chat-footer\"\r\n              :style=\"[ended ? 'display: block' : '']\"\r\n            >\r\n              <textarea\r\n                rows=\"1\"\r\n                ref=\"message\"\r\n                :disabled=\"automated\"\r\n                v-model=\"newMessage\"\r\n                @keyup.enter=\"sendMessage\"\r\n                @keydown.shift.enter.prevent=\"insertNewLine\"\r\n                @keyup=\"onTyping\"\r\n                type=\"text\"\r\n                placeholder=\"Type a message...\"\r\n                style=\"max-height: calc(3 * (1.5em + 2px))\"\r\n              ></textarea>\r\n              <img\r\n                v-if=\"!recording\"\r\n                :src=\"require('@/assets/mic.png')\"\r\n                @click=\"startRecording\"\r\n                class=\"recordingIcon footIcon\"\r\n              />\r\n              <img\r\n                v-if=\"recording\"\r\n                :src=\"require('@/assets/stop.png')\"\r\n                @click=\"stopRecording\"\r\n                class=\"recordingIcon footIcon\"\r\n              />\r\n\r\n              <input\r\n                ref=\"fileInput\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                @change=\"handleFileUpload\"\r\n                style=\"display: none\"\r\n              />\r\n              <button\r\n                :aria-controls=\"$refs.fileInput\"\r\n                @click=\"$refs.fileInput.click()\"\r\n                aria-label=\"Attach file\"\r\n                class=\"footIcon\"\r\n              >\r\n                <svg\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M21.1525 10.8995L12.1369 19.9151C10.0866 21.9653 6.7625 21.9653 4.71225 19.9151C2.662 17.8648 2.662 14.5407 4.71225 12.4904L13.7279 3.47483C15.0947 2.108 17.3108 2.108 18.6776 3.47483C20.0444 4.84167 20.0444 7.05775 18.6776 8.42458L10.0156 17.0866C9.33213 17.7701 8.22409 17.7701 7.54068 17.0866C6.85726 16.4032 6.85726 15.2952 7.54068 14.6118L15.1421 7.01037\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n\r\n              <button\r\n                class=\"footButton\"\r\n                :disabled=\"newMessage === ''\"\r\n                @click=\"sendMessage\"\r\n              >\r\n                <svg\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M5 12H19M19 12L12 5M19 12L12 19\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            v-else\r\n            class=\"chat-footer\"\r\n            :style=\"[ended ? 'display: block' : '']\"\r\n          >\r\n            <div class=\"text\">Your conversation has ended</div>\r\n            <button @click=\"$emit('createNewConvo')\" class=\"start\">\r\n              Start Conversation\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n    <feedBack\r\n      @getConversationBy=\"getConversationBy\"\r\n      @updateConversation=\"updateConversation\"\r\n      v-show=\"feedback\"\r\n      :conversationId=\"conversationId\"\r\n      @goBack=\"feedback = false\"\r\n      @goBackTo=\"$emit('goBackTo')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import incoming from \"../../assets/incoming.mp3\";\r\n// import outgoing from \"../../assets/outgoing.mp3\";\r\nvar incoming = document.querySelector('audio[src$=\"incoming.mp3\"]');\r\nvar outgoing = document.querySelector('audio[src$=\"outgoing.mp3\"]');\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  readMessage,\r\n  getConvoChats,\r\n  saveChats,\r\n  setStepConversation,\r\n  getConversation,\r\n} from \"@/utils/firbase_utils\";\r\n\r\nimport { storage } from \"@/utils/firebaseDb\";\r\n\r\nimport NewImage from \"../../components/NewImage.vue\";\r\nimport feedBack from \"../../components/test/feedBack.vue\";\r\nimport axios from \"axios\";\r\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\r\nimport inputFields from \"@/components/chatComp/inputFields.vue\";\r\n\r\nexport default {\r\n  name: \"chatView\",\r\n  data() {\r\n    return {\r\n      feedback: false,\r\n      socket: null,\r\n      automated: true,\r\n      loading: false,\r\n      showErrorDialog: true,\r\n      isLoading: false,\r\n      errorMessage: \"Error Message\",\r\n      showChat: false,\r\n      agent: null,\r\n      ip: \"\",\r\n      newMessage: \"\",\r\n      // conversationId: \"\",\r\n      isTyping: false,\r\n      joined: false,\r\n      typingMsg: \"\",\r\n      step: 0,\r\n      messages: [],\r\n      chatTimeout: null,\r\n      chatTimeoutDuration: 300000, // 5 minutes\r\n      chatStartTime: null,\r\n      loaderWidth: 0,\r\n      intervalIds: [],\r\n      showLoader: false,\r\n      convoEnded: false,\r\n      isBotEnabled: true,\r\n      ended: null,\r\n      selectedFile: null,\r\n      flow: [\r\n        {\r\n          step: 0,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Hi! I'm glad to assist you today. Let's know each other:\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              text: \"Do you have an order already?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 1.01,\r\n                  text: \"Yes\",\r\n                },\r\n                {\r\n                  id: 2,\r\n                  text: \"No\",\r\n                },\r\n              ],\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.01,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Please can we know this: \",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              inputs: [\r\n                {\r\n                  id: 1.02,\r\n                  type: \"email\",\r\n                  placeholder: \"email address\",\r\n                },\r\n              ],\r\n\r\n              type: \"input\",\r\n            },\r\n          ],\r\n        },\r\n\r\n        {\r\n          step: 1.02,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              user: \"user\",\r\n              inputs: [\r\n                {\r\n                  id: 1,\r\n                  type: \"number\",\r\n                  placeholder: \"Order Id\",\r\n                },\r\n              ],\r\n\r\n              type: \"input\",\r\n            },\r\n          ],\r\n        },\r\n\r\n        {\r\n          step: 1,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"Please select what you want to do with the order\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 1.1,\r\n                  text: \"i want to make a return/swap\",\r\n                },\r\n                {\r\n                  id: 1.2,\r\n                  text: \"I want to know the order status\",\r\n                },\r\n                {\r\n                  id: 1.3,\r\n                  text: \"Others\",\r\n                },\r\n              ],\r\n\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.1,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can easly Return or swap an order here: <a href='https://site.com/return' target='_blank'>https://site.com/return</a> \",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.2,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can track your order here: <a href='https://site.com/tracking' target='_blank'>https://site.com/tracking</a>\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 1.3,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"Tell us how else can we help?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2,\r\n          next: true,\r\n          auto: true,\r\n          messages: [\r\n            {\r\n              text: \"What would you like to do?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n            {\r\n              user: \"user\",\r\n              option: [\r\n                {\r\n                  id: 2.1,\r\n                  text: \"Place a new order\",\r\n                },\r\n                {\r\n                  id: 2.2,\r\n                  text: \"I have a question\",\r\n                },\r\n                {\r\n                  id: 2.3,\r\n                  text: \"Others\",\r\n                },\r\n              ],\r\n              type: \"option\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.1,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"What products do you want?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.2,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"You can ask any question, we are here for you\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          step: 2.3,\r\n          next: \"end\",\r\n          auto: false,\r\n          messages: [\r\n            {\r\n              text: \"What other thing do you want us to do for you?\",\r\n              user: \"bot\",\r\n              type: \"text\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      newMessage: \"\",\r\n      recording: false,\r\n      mediaRecorder: null,\r\n      previewImageUrl: null,\r\n    };\r\n  },\r\n  components: {\r\n    NewImage,\r\n    feedBack,\r\n    inputFields,\r\n  },\r\n  props: [\r\n    \"addConversation\",\r\n    \"user\",\r\n    \"updateConversation\",\r\n    \"getConversationBy\",\r\n    \"botName\",\r\n    \"createNewConvo\",\r\n    \"conversationId\",\r\n  ],\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.selectedFile = event.target.files[0];\r\n      // Create a data URL for the selected image and set it as the preview image\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        this.previewImageUrl = event.target.result;\r\n      };\r\n      reader.readAsDataURL(this.selectedFile);\r\n    },\r\n\r\n    async sendImage() {\r\n      const message = {\r\n        conversationId: this.conversationId,\r\n        username: this.user,\r\n        type: \"image\",\r\n\r\n        message: this.previewImageUrl,\r\n        isUser: true,\r\n      };\r\n\r\n      this.socket.emit(\"image\", message);\r\n\r\n      const newMessage = {\r\n        text: this.previewImageUrl,\r\n        type: \"image\",\r\n        user: this.user,\r\n        isUser: true,\r\n        conversationId: this.conversationId,\r\n      };\r\n      this.messages.push(newMessage);\r\n\r\n      this.previewImageUrl = \"\";\r\n\r\n      // If an image is selected, upload it to Firebase Storage\r\n      //  const storageRef = storage.ref();\r\n      // const fileRef = storageRef.child(this.selectedFile.name);\r\n      // await fileRef.put(this.selectedFile);\r\n      // const fileUrl = await fileRef.getDownloadURL();\r\n\r\n      // const storageRef = ref(storage, this.selectedFile.name);\r\n\r\n      // // Data URL string\r\n      // const message4 =\r\n      //   \"data:text/plain;base64,5b6p5Y+344GX44G+44GX44Gf77yB44GK44KB44Gn44Go44GG77yB\";\r\n      // uploadString(storageRef, message4, \"data_url\").then((snapshot) => {\r\n      //   console.log(\"Uploaded a data_url string!\");\r\n      // });\r\n\r\n      // this.$emit(\"new-message\", {\r\n      //   type: \"image\",\r\n      //   content: fileUrl,\r\n      // });\r\n      // cons;\r\n      // // Reset the selectedFile and previewImageUrl properties\r\n      // this.selectedFile = null;\r\n      // this.previewImageUrl = null;\r\n      // this.cancelImage();\r\n    },\r\n\r\n    cancelImage() {\r\n      this.selectedFile = null;\r\n      this.previewImageUrl = null;\r\n    },\r\n\r\n    insertNewLine(event) {\r\n      if (event.shiftKey) {\r\n        const textarea = this.$refs.message;\r\n        const startPos = textarea.selectionStart;\r\n        const endPos = textarea.selectionEnd;\r\n        const currentValue = this.newMessage;\r\n        this.newMessage = `${currentValue.substring(\r\n          0,\r\n          startPos\r\n        )}\\n${currentValue.substring(endPos)}`;\r\n        // prevent the default behavior of inserting a new line\r\n        event.preventDefault();\r\n      }\r\n    },\r\n\r\n    showFeeback() {\r\n      this.feedback = true;\r\n    },\r\n\r\n    async joinConversation(conversationId) {\r\n      if (!this.ended) {\r\n        this.socket.emit(\"join\", { id: conversationId, user: this.user });\r\n        // console.log(`${this.user} just joined conversation ${conversationId}`);\r\n        this.joined = true;\r\n      }\r\n    },\r\n\r\n    async sendMessage() {\r\n      if (this.newMessage === \"\") {\r\n        return;\r\n      }\r\n      const message = { text: this.newMessage };\r\n      // const response = await axios.post('/api/messages', { conversationId: this.conversationId, message });\r\n      await this.socket.emit(\"message\", {\r\n        conversationId: this.conversationId,\r\n        type: \"text\",\r\n        username: this.user,\r\n        message: message,\r\n        isUser: true,\r\n      });\r\n\r\n      this.socket.emit(\"typing\", {\r\n        status: false,\r\n        user: this.user,\r\n        id: this.conversationId,\r\n      });\r\n      this.chatStartTime = Date.now();\r\n      localStorage.setItem(\"chatStarted\", true);\r\n      localStorage.setItem(\r\n        `chatStartTime-${this.conversationId}`,\r\n        this.chatStartTime\r\n      );\r\n      this.resetChatTimeout();\r\n      this.newMessage = \"\";\r\n    },\r\n\r\n    onTyping() {\r\n      if (!this.isTyping) {\r\n        this.socket.emit(\"typing\", {\r\n          status: true,\r\n          user: this.user,\r\n          id: this.conversationId,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          this.socket.emit(\"typing\", {\r\n            status: false,\r\n            user: this.user,\r\n            id: this.conversationId,\r\n          });\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    checkPrev(object, index) {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      if (this.messages[index - 1].user === object.user) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    checkNxt(object, index) {\r\n      if (index === 0) {\r\n        return true;\r\n      }\r\n      const lastIndex = this.messages.length - 1;\r\n      const currentIndex = this.messages.indexOf(object);\r\n      if (currentIndex === lastIndex) {\r\n        return true;\r\n      }\r\n      if (this.messages[index + 1].user === object.user) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n\r\n    async newMessageSound(sound) {\r\n      // var audio = new Audio(sound);\r\n\r\n      sound.play();\r\n\r\n      let previousTitle = document.title;\r\n\r\n      let newTitle = \"You have a new message 📩\";\r\n\r\n      // Set the new title\r\n      document.title = newTitle;\r\n\r\n      // Revert back to the previous title after specified seconds\r\n      setTimeout(function () {\r\n        document.title = previousTitle;\r\n      }, 2000);\r\n    },\r\n\r\n    async clickSelect(msg) {\r\n      // console.log(msg, \"the message\");\r\n      this.newMessageSound(outgoing);\r\n      this.loading = true;\r\n      this.messages.pop();\r\n      const newMessage = {\r\n        id: msg.id,\r\n        text: msg.text,\r\n        user: this.user,\r\n        type: \"text\",\r\n        isUser: true,\r\n      };\r\n      this.messages = [...this.messages, newMessage];\r\n\r\n      this.loading = true;\r\n      console.log(this.step, \"this step\");\r\n      await this.checkCase(this.step, true, newMessage, false);\r\n      await this.checkCase(this.step, false, newMessage, false);\r\n      this.newMessageSound(incoming);\r\n      this.chatToChatbottom();\r\n      this.loading = false;\r\n    },\r\n\r\n    async handleInputSubmit(result) {\r\n      const { msg, inputValue, value, id, placeholder } = result;\r\n\r\n      this.newMessageSound(outgoing);\r\n      this.loading = true;\r\n      this.messages.pop();\r\n      console.log(id, \"joshjiax\");\r\n      const updateMsg = {\r\n        id,\r\n        text: value,\r\n        value: inputValue,\r\n        type: \"input\",\r\n        user: this.user,\r\n        isUser: true,\r\n        saved: true,\r\n        placeholder,\r\n      };\r\n      // Perform actions with the input value, such as sending it to the server or updating the component's state\r\n      console.log(updateMsg);\r\n\r\n      this.messages = [...this.messages, updateMsg];\r\n\r\n      // this.loading = true;\r\n      console.log(this.step, \"this step\");\r\n      await this.checkCase(this.step, true, updateMsg, false);\r\n      await this.checkCase(this.step, false, updateMsg, false);\r\n      this.newMessageSound(incoming);\r\n      this.chatToChatbottom();\r\n      this.loading = false;\r\n    },\r\n\r\n    async checkCase(step, save, msg, first) {\r\n      console.log(step, save, msg);\r\n      // find the object that has the step give in the function value\r\n\r\n      let valueStep = this.flow.find((obj) => obj.step === step);\r\n\r\n      if (valueStep.next === \"end\" && first) {\r\n        // console.log(\"the end of it \");\r\n        if (!valueStep.auto) {\r\n          this.isSocketInConversation();\r\n          let intervalIdReq;\r\n\r\n          this.automated = false;\r\n        }\r\n        this.chatToChatbottom();\r\n        return;\r\n      }\r\n\r\n      if (save) {\r\n        valueStep.messages.pop();\r\n        // loop through and  save user options\r\n        for (let index = 0; index < valueStep.messages.length; index++) {\r\n          const element = valueStep.messages[index];\r\n          element.isUser = true;\r\n          await this.saveMessage(element, this.conversationId);\r\n        }\r\n\r\n        await saveChats(msg, this.conversationId);\r\n        await setStepConversation(this.conversationId, msg.id);\r\n        this.step = msg.id;\r\n      }\r\n\r\n      // No check and update next question for automated process\r\n      if (!save) {\r\n        for (let index = 0; index < valueStep.messages.length; index++) {\r\n          const element = valueStep.messages[index];\r\n          element.isUser = true;\r\n          // console.log(\"valueStep\", valueStep);\r\n          this.messages.push(element);\r\n          if (valueStep.next === \"end\" || !valueStep.auto) {\r\n            await this.saveMessage(element, this.conversationId);\r\n          }\r\n          this.chatToChatbottom();\r\n        }\r\n        if (valueStep.next === \"end\" && !valueStep.auto) {\r\n          await this.stopAutomate();\r\n          // await this.sendToBot();\r\n        }\r\n      }\r\n      // console.log(valueStep.next, save, \"the values\", step);\r\n    },\r\n\r\n    async chatToChatbottom() {\r\n      if (\r\n        document\r\n          .querySelector(\"#chatly-app\")\r\n          .shadowRoot.querySelector(\"#chat-body\")\r\n      ) {\r\n        const chatBody = document\r\n          .querySelector(\"#chatly-app\")\r\n          .shadowRoot.querySelector(\"#chat-body\");\r\n\r\n        chatBody.scrollTop = chatBody.scrollHeight;\r\n      }\r\n    },\r\n\r\n    async saveMessage(msg, id) {\r\n      const newMessage = {\r\n        text: msg.text,\r\n        type: msg.type,\r\n        user: msg.user,\r\n        isUser: true,\r\n      };\r\n      await saveChats(newMessage, id);\r\n    },\r\n\r\n    requestAssistance() {\r\n      if (!this.agent && !this.ended) {\r\n        const data = { conversationId: this.conversationId, userId: this.user };\r\n        this.socket.emit(\"requestAssistance\", data);\r\n        // Check if chat session has already started\r\n        const chatStarted = localStorage.getItem(\"chatStarted\");\r\n        this.showLoader = true;\r\n      }\r\n    },\r\n\r\n    async stopAutomate() {\r\n      this.joinConversation(this.conversationId);\r\n      this.automated = false;\r\n      this.chatToChatbottom();\r\n      this.requestAssistance();\r\n    },\r\n\r\n    isSocketInConversation() {\r\n      const conversationRoom = `conversation:${this.conversationId}`;\r\n\r\n      this.socket.emit(\r\n        \"isSocketInConversation\",\r\n        conversationRoom,\r\n        (isJoined) => {\r\n          if (isJoined) {\r\n          } else {\r\n            this.joinConversation(this.conversationId);\r\n          }\r\n        }\r\n      );\r\n    },\r\n\r\n    async lastMessageIsBot() {\r\n      const lastMessage = this.messages[this.messages.length - 1];\r\n\r\n      if (lastMessage.type === \"voice\" || lastMessage.type === \"image\") {\r\n        return true;\r\n        // console.log(lastMessage, \"last message\");\r\n      }\r\n      return lastMessage && lastMessage.user === \"bot\";\r\n    },\r\n\r\n    startChatTimeout() {\r\n      // Calculate remaining time based on elapsed time\r\n      const elapsedTime = Date.now() - this.chatStartTime;\r\n      const remainingTime = Math.max(this.chatTimeoutDuration - elapsedTime, 0);\r\n\r\n      // Start the chat timeout timer\r\n      this.chatTimeout = setTimeout(() => {\r\n        // End the chat session on timeout\r\n        if (!this.ended) {\r\n          this.socket.emit(\"timeUp\", this.conversationId);\r\n        }\r\n\r\n        this.expiredConvId(true);\r\n      }, remainingTime);\r\n\r\n      // Update the line loader every second\r\n      const intervalId = setInterval(() => {\r\n        const elapsedTime = Date.now() - this.chatStartTime;\r\n        const remainingTime = Math.max(\r\n          this.chatTimeoutDuration - elapsedTime,\r\n          0\r\n        );\r\n        const remainingPercentage =\r\n          (remainingTime / this.chatTimeoutDuration) * 100;\r\n        this.loaderWidth = 100 - remainingPercentage;\r\n      }, 1000);\r\n\r\n      this.intervalIds.push(intervalId);\r\n    },\r\n\r\n    resetChatTimeout() {\r\n      // Reset the chat timeout timer\r\n      clearTimeout(this.chatTimeout);\r\n      if (!this.chatStartTime) {\r\n        this.chatStartTime = Date.now();\r\n      }\r\n      this.startChatTimeout();\r\n\r\n      // Clear the line loader interval\r\n      clearInterval(this.intervalIds.pop());\r\n      this.loaderWidth = 0;\r\n    },\r\n\r\n    getConversationById(conversationId) {\r\n      const savedState = JSON.parse(localStorage.getItem(\"appState\")) || {};\r\n      const conversation =\r\n        savedState.conversations?.byId[conversationId] || null;\r\n      return conversation;\r\n    },\r\n\r\n    getConversationIdFromLocalStorage() {\r\n      const conversationData = localStorage.getItem(\"conversationId\");\r\n      if (conversationData) {\r\n        const conversationId = conversationData.split(\"-\")[0];\r\n        return conversationId;\r\n      }\r\n      return null; // conversation ID not found or invalid\r\n    },\r\n\r\n    saveConversationId(conversationId) {\r\n      // Check if conversation ID has expired\r\n\r\n      const timestamp = Date.now();\r\n\r\n      const conversationData = {\r\n        fetchState: \"partial\",\r\n        read: true,\r\n        expire: timestamp,\r\n      };\r\n      this.addConversation(conversationId, conversationData);\r\n\r\n      // localStorage.setItem(\"conversationId\", conversationData);\r\n    },\r\n\r\n    isConversationIdExpired() {\r\n      // const conversationId = localStorage.getItem(\"conversationId\");\r\n      const convo = this.conversationId || this.conversationId;\r\n      const expire = this.getConversationById(convo);\r\n      if (convo && expire) {\r\n        const conversationTimestamp = parseInt(expire.expire);\r\n        const now = Date.now();\r\n        const twoDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 2 days in milliseconds\r\n        return now - conversationTimestamp > twoDaysInMilliseconds;\r\n      }\r\n      return true; // conversation ID not found or invalid\r\n    },\r\n\r\n    async expiredConvId(value) {\r\n      if (this.isConversationIdExpired() || value) {\r\n        // this.ended = true;\r\n      }\r\n    },\r\n\r\n    async getConversationId() {\r\n      let localChatId = this.conversationId || null;\r\n      if (localChatId === null) {\r\n        this.$router.push({ name: \"home\" });\r\n      }\r\n\r\n      return localChatId;\r\n    },\r\n\r\n    capitalizeName(name) {\r\n      // console.log(name, \"the name\");\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n\r\n    iniStartTime() {\r\n      this.chatStartTime = localStorage.getItem(\r\n        `chatStartTime-${this.conversationId}`\r\n      );\r\n      if (this.chatStartTime) {\r\n        // Restore chat start time from local storage\r\n\r\n        this.showLoader = true;\r\n        this.startChatTimeout();\r\n      }\r\n      // Set the chatStarted flag and chat start time in local storage\r\n      if (!this.chatStartTime) {\r\n        this.chatStartTime = Date.now();\r\n        localStorage.setItem(\r\n          `chatStartTime-${this.conversationId}`,\r\n          this.chatStartTime\r\n        );\r\n      }\r\n    },\r\n\r\n    async updateConversation(conversationId, conversationData) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const newState = {\r\n        ...data,\r\n        conversations: {\r\n          ...data.conversations,\r\n          byId: {\r\n            ...data.conversations.byId,\r\n            [conversationId]: {\r\n              ...data.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      //   this.updateState(newState);\r\n      // console.log(newState, \"updateing feedback\");\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async sendToBot() {\r\n      // console.log(\"joshijax\", point);\r\n\r\n      let isbot = await this.lastMessageIsBot();\r\n      if (isbot || this.automated) {\r\n        this.sending = false;\r\n        this.isTyping = false;\r\n        return;\r\n      }\r\n      this.sending = true;\r\n      this.isTyping = true;\r\n      let imageMessages = this.messages.filter(\r\n        (msg) => msg.type === \"text\" || msg.type === \"input\"\r\n      );\r\n      let messageStrings = imageMessages.map((msg) => \"\\n\" + msg.text);\r\n\r\n      let allMessageText = \" \\nhello\\n \" + messageStrings.join(\"\");\r\n      console.log(allMessageText, \"TEXT\");\r\n      this.inputText = \"\";\r\n      try {\r\n        // console.log(allMessageText, \"TEXT2\");\r\n        const response = await axios({\r\n          method: \"post\",\r\n          url: \"https://beta.arthian.dev/answer-me/\",\r\n\r\n          data: {\r\n            prompt: allMessageText,\r\n          },\r\n        });\r\n\r\n        // console.log(\"JOSHIJAX\", typeof response.data.response);\r\n\r\n        await this.socket.emit(\"message\", {\r\n          conversationId: this.conversationId,\r\n          type: \"text\",\r\n          username: \"bot\",\r\n          message: { text: response.data.response },\r\n          isUser: false,\r\n        });\r\n        this.isTyping = false;\r\n      } catch (error) {\r\n        // console.error(error);\r\n        this.isTyping = false;\r\n      }\r\n      this.sending = false;\r\n    },\r\n\r\n    messageEndsWithGoodbye(statement) {\r\n      if (!statement) {\r\n        return false;\r\n      }\r\n      // Define common keywords and phrases that indicate a goodbye message\r\n      const goodbyeKeywords = [\r\n        \"goodbye\",\r\n        \"bye\",\r\n        \"farewell\",\r\n        \"see you\",\r\n        \"take care\",\r\n        \"have a nice\",\r\n        \"later\",\r\n      ];\r\n\r\n      // Define regular expressions to match common patterns in goodbye messages\r\n      const patterns = [\r\n        /\\b(thanks|thank you)\\b/gi,\r\n        /\\b(good night|night)\\b/gi,\r\n        /\\b(talk to you|chat with you)\\b/gi,\r\n        /\\b(see you|cu|ttyl|ttys)\\b/gi,\r\n        /\\b(be safe)\\b/gi,\r\n        /\\b(have a great|have a nice)\\b/gi,\r\n        /\\b(take care)\\b/gi,\r\n        /\\b(sleep well)\\b/gi,\r\n        /\\b(catch you later|laters)\\b/gi,\r\n      ];\r\n\r\n      // Check if the statement contains a goodbye keyword\r\n      for (const keyword of goodbyeKeywords) {\r\n        if (statement.toLowerCase().includes(keyword)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // Check if the statement matches any of the common patterns\r\n      for (const pattern of patterns) {\r\n        if (pattern.test(statement)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // If no keywords or patterns were found, assume it's not a goodbye message\r\n      return false;\r\n    },\r\n\r\n    renderMessage(message) {\r\n      // Detect links in the message and render them as clickable links\r\n      const linkRegex = /(https?|ftp):\\/\\/[^\\s]+/gi;\r\n\r\n      if (this.isLink(message)) {\r\n        // Replace the link in the message with an anchor tag element\r\n        message = message.replace(\r\n          linkRegex,\r\n          '<a href=\"$&\" target=\"_blank\">$&</a>'\r\n        );\r\n      }\r\n\r\n      return message;\r\n    },\r\n\r\n    isLink(text) {\r\n      // Match links that do not already have an anchor tag\r\n      const linkRegex = /^(?!.*?<a\\s).*?(https?|ftp):\\/\\/[^\\s]+.*$/i;\r\n      return linkRegex.test(text);\r\n    },\r\n\r\n    async iniChat() {\r\n      // console.log(\"joshijaxmsg\", this.botName);\r\n      this.isLoading = true;\r\n      let convoinfo = {};\r\n\r\n      convoinfo = await getConversation(this.conversationId);\r\n      this.agent = convoinfo.agent;\r\n\r\n      this.messages = await getConvoChats(this.conversationId);\r\n\r\n      console.log(\"glory\", convoinfo, this.messages);\r\n\r\n      this.step = convoinfo.step;\r\n\r\n      await this.expiredConvId(false);\r\n\r\n      this.chatToChatbottom();\r\n\r\n      this.iniStartTime();\r\n      // await this.submitText();\r\n      this.isLoading = false;\r\n      if (convoinfo.hasOwnProperty(\"ended\")) {\r\n        this.ended = convoinfo.ended;\r\n        let item = this.getConversationBy(this.conversationId);\r\n\r\n        item.ended = convoinfo.ended;\r\n        // console.log(item, \"the item\");\r\n        await this.updateConversation(this.conversationId, item);\r\n      } else {\r\n        this.ended = false;\r\n      }\r\n\r\n      await this.checkCase(this.step, false, null, true);\r\n\r\n      if (!this.ended && this.isBotEnabled && !this.automated) {\r\n        let logivVal = await this.lastMessageIsBot();\r\n\r\n        if (!logivVal) {\r\n          this.sendToBot();\r\n        }\r\n      }\r\n    },\r\n\r\n    recordingAudio() {\r\n      this.recording = true;\r\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\r\n        this.mediaRecorder = new MediaRecorder(stream);\r\n        const chunks = [];\r\n        this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n          chunks.push(event.data);\r\n        });\r\n        this.mediaRecorder.addEventListener(\"stop\", () => {\r\n          this.recording = false;\r\n          const blob = new Blob(chunks, { type: \"audio/webm\" });\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(blob);\r\n          const conversationId = this.conversationId;\r\n          console.log(\"sending audio\", conversationId);\r\n          reader.addEventListener(\"loadend\", () => {\r\n            console.log(\"sending audio\", conversationId);\r\n            const message = {\r\n              conversationId: conversationId,\r\n              username: this.user,\r\n              type: \"voice\",\r\n              author: \"Me\",\r\n              message: reader.result,\r\n              isUser: true,\r\n            };\r\n            // this.socket.emit(\"voiceMessage\", message);\r\n            this.messages.push(message);\r\n          });\r\n        });\r\n        this.mediaRecorder.start();\r\n      });\r\n    },\r\n\r\n    requestMicrophonePermission() {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ audio: true })\r\n        .then((stream) => {\r\n          this.mediaStream = stream;\r\n          this.startRecording();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n\r\n    startRecording() {\r\n      if (navigator.permissions) {\r\n        navigator.permissions\r\n          .query({ name: \"microphone\" })\r\n          .then((permissionStatus) => {\r\n            if (permissionStatus.state === \"granted\") {\r\n              // permission already granted, proceed with recording\r\n              this.recordingAudio();\r\n            } else if (permissionStatus.state === \"prompt\") {\r\n              // permission not yet granted, show permission prompt\r\n              navigator.mediaDevices\r\n                .getUserMedia({ audio: true })\r\n                .then((stream) => {\r\n                  stream.getTracks().forEach((track) => track.stop());\r\n                  this.recordingAudio();\r\n                })\r\n                .catch((error) => {\r\n                  console.error(error);\r\n                });\r\n            } else if (permissionStatus.state === \"denied\") {\r\n              // permission denied, show error message or prompt user to enable permission\r\n              console.error(\"Permission denied for microphone\");\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    stopRecording() {\r\n      this.mediaRecorder.stop();\r\n    },\r\n\r\n    playVoiceMessage(message) {\r\n      const audio = new Audio(message.text);\r\n      const playButton = document.createElement(\"button\");\r\n      playButton.textContent = \"Play\";\r\n      playButton.onclick = () => {\r\n        audio.play();\r\n      };\r\n      playButton.click();\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    // console.log(\"botName 2\", this.botName);\r\n    this.socket = io(\"https://chatlysocket.herokuapp.com/\");\r\n    this.socket.on(\"connect\", () => {\r\n      // console.log(\"Connected to server\");\r\n\r\n      this.socket.emit(\"userType\", \"customer\");\r\n    });\r\n\r\n    // litsen to new\r\n\r\n    this.socket.on(\"newMessage\", async (message) => {\r\n      console.log(message.user, this.user);\r\n      if (message.user === this.user || message.user === \"user\") {\r\n        // console.log(\"sent out\", value);\r\n        await this.messages.push(message);\r\n        // console.log(this.messages, \"here final\");\r\n        await this.chatToChatbottom();\r\n        await this.newMessageSound(outgoing);\r\n        if (this.isBotEnabled) {\r\n          this.sendToBot();\r\n        }\r\n      } else {\r\n        // console.log(\"recieved\", message);\r\n        this.messages.push(message);\r\n        // console.log(this.messages, \"here final\");\r\n        this.chatToChatbottom();\r\n        this.newMessageSound(incoming);\r\n        readMessage(this.conversationId);\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"joined\", async (message) => {\r\n      // console.log(\r\n      //   this.user != message.user,\r\n      //   this.user,\r\n      //   message.user,\r\n      //   \"the data i need\"\r\n      // );\r\n\r\n      if (this.user != message.user) {\r\n        if (this.agent !== message.user) {\r\n          this.messages.push(message);\r\n          // this.saveMessage(message);\r\n          await this.chatToChatbottom();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"typing\", (isTyping) => {\r\n      // console.log(isTyping);\r\n      this.isTyping = isTyping.status;\r\n      this.typingMsg = `${isTyping.user} is typing`;\r\n      this.chatToChatbottom();\r\n    });\r\n\r\n    this.socket.on(\"requestAccepted\", async (data) => {\r\n      // console.log(data, \"requestAccepted\");\r\n      this.agent = data.userId;\r\n    });\r\n\r\n    await this.iniChat();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.socket.off();\r\n  },\r\n\r\n  watch: {\r\n    messages: {\r\n      handler(newMessages) {\r\n        const lastMessage = newMessages[newMessages.length - 1];\r\n        if (\r\n          lastMessage &&\r\n          this.messageEndsWithGoodbye(lastMessage.text) &&\r\n          this.ended !== null &&\r\n          !this.ended\r\n        ) {\r\n          // console.log('Last message ended with \"Goodbye\"');\r\n\r\n          setTimeout(() => {\r\n            this.showFeeback();\r\n            // console.log('Last message ended with \"Goodbye\"')\r\n          }, 3000);\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n\r\n    conversationId: {\r\n      async handler(to, from) {\r\n        await this.iniChat();\r\n        // if (to.params.id !== from.params.id) {\r\n\r\n        // }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    displayAgent() {\r\n      return this.agent || \"bot\";\r\n    },\r\n    // ...other computed properties\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <canvas ref=\"canvas\"></canvas>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    name: String,\r\n    size: {\r\n      type: Number,\r\n      default: 40,\r\n    },\r\n  },\r\n  mounted() {\r\n    const canvas = this.$refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n    const size = this.size; // Size of the canvas\r\n    const fontSize = size / 2; // Font size of the letter\r\n    const fontFamily = \"Arial\"; // Font family of the letter\r\n\r\n    // Set the canvas size\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n\r\n    // Draw the letter\r\n    context.fillStyle = \"#ccc\"; // Background color\r\n    context.fillRect(0, 0, size, size);\r\n    context.fillStyle = \"#fff\"; // Text color\r\n    context.textAlign = \"center\";\r\n    context.textBaseline = \"middle\";\r\n    context.font = `${fontSize}px ${fontFamily}`;\r\n    context.fillText(this.getNameInitial(), size / 2, size / 2);\r\n  },\r\n  methods: {\r\n    getNameInitial() {\r\n      return this.name ? this.name[0].toUpperCase() : \"B\";\r\n    },\r\n  },\r\n  watch: {\r\n    name: function (newValue, oldValue) {\r\n      console.log(newValue, \"there was a chnage\");\r\n      const canvas = this.$refs.canvas;\r\n      const context = canvas.getContext(\"2d\");\r\n      const size = 40; // Size of the canvas\r\n      const fontSize = size / 2; // Font size of the letter\r\n      const fontFamily = \"Arial\"; // Font family of the letter\r\n\r\n      // Set the canvas size\r\n      canvas.width = size;\r\n      canvas.height = size;\r\n\r\n      // Draw the letter\r\n      context.fillStyle = \"#ccc\"; // Background color\r\n      context.fillRect(0, 0, size, size);\r\n      context.fillStyle = \"#fff\"; // Text color\r\n      context.textAlign = \"center\";\r\n      context.textBaseline = \"middle\";\r\n      context.font = `${fontSize}px ${fontFamily}`;\r\n      context.fillText(this.getNameInitial(), size / 2, size / 2);\r\n      // Re-mount the component\r\n      // this.$nextTick(() => {\r\n      //   this.$forceUpdate();\r\n      // });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./NewImage.vue?vue&type=template&id=4d2ed1f8\"\nimport script from \"./NewImage.vue?vue&type=script&lang=js\"\nexport * from \"./NewImage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div id=\"chatview\">\r\n    <transition name=\"bounce\">\r\n      <div class=\"chat-container\">\r\n        <div class=\"chat-header\">\r\n          <v-icon\r\n            style=\"cursor: pointer\"\r\n            @click=\"$emit('goBack')\"\r\n            start\r\n            icon=\"mdi-arrow-left\"\r\n          ></v-icon>\r\n          <h3>Arthian</h3>\r\n        </div>\r\n\r\n        <div\r\n          ref=\"chatbody\"\r\n          class=\"chat-body\"\r\n          id=\"chat-body\"\r\n          style=\"display: flex; justify-content: center; align-items: center\"\r\n        >\r\n          <div v-if=\"isLoading\" class=\"loading-div\"></div>\r\n\r\n          <div style=\"max-width: 360px\" class=\"\">\r\n            <v-form ref=\"form\" @submit.prevent=\"submitFeedback\">\r\n              <h3 style=\"text-align: center\">\r\n                Please tell us how was your experience?\r\n              </h3>\r\n              <v-btn-toggle v-model=\"selectedEmoji\" mandatory>\r\n                <v-btn\r\n                  v-for=\"emoji in emojis\"\r\n                  :key=\"emoji.value\"\r\n                  :value=\"emoji.value\"\r\n                  class=\"ma-2 custom-btn\"\r\n                >\r\n                  <span class=\"emoji\">{{ emoji.label }}</span>\r\n                  <v-tooltip top>\r\n                    <span class=\"tooltip-value\">{{ emoji.value }}</span>\r\n                  </v-tooltip>\r\n                </v-btn>\r\n              </v-btn-toggle>\r\n              <v-text-field\r\n                v-model=\"comments\"\r\n                label=\"Additional Comments\"\r\n                :rules=\"rules.comments\"\r\n              ></v-text-field>\r\n              <v-btn\r\n                color=\"blue\"\r\n                @click.prevent=\"submitFeedback\"\r\n                :disabled=\"selectedEmoji === null\"\r\n                >Submit</v-btn\r\n              >\r\n            </v-form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-footer\">\r\n          <!-- <div\r\n                style=\"\r\n                  margin: 24px auto 12px;\r\n                  text-align: center;\r\n                  font-size: 14px;\r\n                  line-height: 21px;\r\n                  padding-top: 0px;\r\n                  color: rgb(115, 115, 115);\r\n                \"\r\n              >\r\n                Your conversation has ended\r\n              </div>\r\n              <button @click=\"createNewConvo\" class=\"start\">\r\n                Start Conversation\r\n              </button> -->\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <ErrorDialog\r\n      v-if=\"showErrorDialog\"\r\n      :error=\"errorMessage\"\r\n      @dismiss=\"hideErrorDialog\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { updateConvo } from \"@/utils/firbase_utils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmoji: null,\r\n      comments: \"\",\r\n      isLoading: false,\r\n      emojis: [\r\n        { value: \"bad\", label: \"😠\" },\r\n        { value: \"fair\", label: \"😕\" },\r\n        { value: \"good\", label: \"😊\" },\r\n        { value: \"great\", label: \"😄\" },\r\n      ],\r\n      rules: {\r\n        comments: [\r\n          (value) => !!value || \"Comments are required\",\r\n          (value) =>\r\n            value.length <= 1000 ||\r\n            \"Comments must be less than 1000 characters\",\r\n        ],\r\n      },\r\n    };\r\n  },\r\n\r\n  components: {},\r\n  props: [\"conversationId\"],\r\n\r\n  methods: {\r\n    async updateConversation(conversationId, conversationData) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const newState = {\r\n        ...data,\r\n        conversations: {\r\n          ...data.conversations,\r\n          byId: {\r\n            ...data.conversations.byId,\r\n            [conversationId]: {\r\n              ...data.conversations.byId[conversationId],\r\n              ...conversationData,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      //   this.updateState(newState);\r\n      console.log(newState, \"updateing feedback\");\r\n      localStorage.setItem(\"appState\", JSON.stringify(newState));\r\n    },\r\n\r\n    getConversationBy(conversationId) {\r\n      const data = JSON.parse(localStorage.getItem(\"appState\"));\r\n      const conversations = data.conversations.byId;\r\n      if (conversations.hasOwnProperty(conversationId)) {\r\n        return conversations[conversationId];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async submitFeedback() {\r\n      if (this.$refs.form.validate()) {\r\n        await updateConvo(this.conversationId, {\r\n          ended: true,\r\n          comment: this.comments,\r\n          reaction: this.selectedEmoji,\r\n        });\r\n        let item = this.getConversationBy(this.conversationId);\r\n        console.log(\"the item\", item);\r\n        item.ended = true;\r\n        // console.log(item, \"the item\");\r\n        await this.updateConversation(this.conversationId, item);\r\n        this.$emit(\"goBackTo\");\r\n        // this.$router.push({ name: \"home\" });\r\n      }\r\n      // Code to submit feedback goes here\r\n    },\r\n  },\r\n\r\n  created() {},\r\n};\r\n</script>\r\n","import { render } from \"./feedBack.vue?vue&type=template&id=574a885d\"\nimport script from \"./feedBack.vue?vue&type=script&lang=js\"\nexport * from \"./feedBack.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div :aria-valuetext=\"message.saved\" v-if=\"!message.saved\">\r\n    <div\r\n      v-for=\"(input, index) in message.inputs\"\r\n      :key=\"index\"\r\n      class=\"input-div\"\r\n    >\r\n      <div class=\"input-placeholder\">\r\n        {{ capitalizeName(input.placeholder) }}\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <form @submit.prevent=\"handleInputSubmit(input.placeholder, input.id)\">\r\n          <input\r\n            required\r\n            :type=\"input.type\"\r\n            autocomplete=\"off\" \r\n            value=\"\"\r\n            :aria-label=\"input.placeholder\"\r\n            ref=\"qInput\"\r\n            v-model=\"inputField\"\r\n          />\r\n          <button v-if=\"input\" type=\"submit\" aria-label=\"Submit\" tabindex=\"0\">\r\n            <span aria-hidden=\"true\" class=\"\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n              >\r\n                <path\r\n                  d=\"M5.42773 4.70898C5.46387 4.85254 5.53809 4.98828 5.65039 5.10059L8.54932 8L5.64893 10.9004C5.31689 11.2324 5.31689 11.7705 5.64893 12.1025C5.98096 12.4336 6.51904 12.4336 6.85107 12.1025L10.3516 8.60059C10.5591 8.39355 10.6367 8.10449 10.585 7.83691C10.5537 7.67578 10.4761 7.52246 10.3516 7.39844L6.85254 3.89941C6.52051 3.56738 5.98242 3.56738 5.65039 3.89941C5.43066 4.11816 5.35645 4.42871 5.42773 4.70898Z\"\r\n                  fill=\"#ffffff\"\r\n                ></path>\r\n              </svg>\r\n            </span>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div :aria-valuetext=\"message.saved\" v-else>\r\n    <div :key=\"index\" class=\"input-div\">\r\n      <div class=\"input-placeholder\">\r\n        {{ capitalizeName(message.placeholder) }}\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input\r\n          disabled\r\n          required\r\n          :type=\"message.type\"\r\n          autocomplete=\"off\"\r\n          :value=\"message.value\"\r\n          :aria-label=\"message.placeholder\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    inputField: \"\",\r\n    placeholder: \"\",\r\n  }),\r\n  props: [\"message\"],\r\n  methods: {\r\n    async handleInputSubmit(placeholder, id) {\r\n      console.log(this.inputField, placeholder);\r\n\r\n      const value = `My ${placeholder} is: ${this.inputField}`;\r\n\r\n      console.log(this.message, this.inputField, value);\r\n\r\n      this.$emit(\"handleInputSubmit\", {\r\n        id,\r\n        msg: this.message,\r\n        inputValue: this.inputField,\r\n        placeholder: placeholder,\r\n        value: value,\r\n      });\r\n    },\r\n\r\n    capitalizeName(name) {\r\n      console.log(name, \"the name\");\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./inputFields.vue?vue&type=template&id=41d64396\"\nimport script from \"./inputFields.vue?vue&type=script&lang=js\"\nexport * from \"./inputFields.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./testing.vue?vue&type=template&id=3832ca30\"\nimport script from \"./testing.vue?vue&type=script&lang=js\"\nexport * from \"./testing.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./chatmaintest.vue?vue&type=template&id=7f4d8367\"\nimport script from \"./chatmaintest.vue?vue&type=script&lang=js\"\nexport * from \"./chatmaintest.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./testApp.vue?vue&type=template&id=23559469\"\nimport script from \"./testApp.vue?vue&type=script&lang=js\"\nexport * from \"./testApp.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\JOSHIJAX\\\\Desktop\\\\Chatly\\\\vue-widget\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport '@mdi/font/css/materialdesignicons.css'\nimport 'vuetify/styles'\n\n// Vuetify\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify(\n  // https://vuetifyjs.com/en/introduction/why-vuetify/#feature-guides\n)\n","import { createApp } from \"vue\";\r\nimport testApp from \"./testApp.vue\";\r\nimport vuetify from \"./plugins/vuetify\";\r\n\r\nconst shadowHost = document.querySelector(\"#chatly-app\");\r\nconst shadowRoot = shadowHost.attachShadow({ mode: \"open\" });\r\nshadowHost.style.display = \"none\";\r\n\r\n// Fetch the CSS file\r\nfetch(\"https://joshijax.github.io/chatlywidget/css/app.css\")\r\n  .then(function (response) {\r\n    return response.text();\r\n  })\r\n  .then(function (cssText) {\r\n    // Create a style element and set its content to the CSS text\r\n\r\n    const styleElement = document.createElement(\"style\");\r\n    styleElement.textContent = cssText;\r\n\r\n    fetch(\"https://joshijax.github.io/chatlywidget/css/chunk-vendors.css\")\r\n      .then(function (response) {\r\n        return response.text();\r\n      })\r\n      .then(function (cssText) {\r\n        // Create a style element and set its content to the CSS text\r\n\r\n        // Append the style element to the Shadow Root\r\n\r\n        // Create the Vue app and mount it within the Shadow Root\r\n        createApp(testApp).use(vuetify).mount(shadowRoot);\r\n\r\n        shadowRoot.prepend(styleElement);\r\n\r\n        const styleElement1 = document.createElement(\"style\");\r\n        styleElement1.textContent = cssText;\r\n        shadowRoot.prepend(styleElement1);\r\n\r\n        shadowHost.style.display = \"block\";\r\n      });\r\n  });\r\n\r\n// createApp(testApp).use(vuetify).mount(\"#chatly-app\");\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_widget\"] = self[\"webpackChunkvue_widget\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4737); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","xmlns","viewBox","_createElementVNode","d","_hoisted_4","width","height","fill","_hoisted_7","_createElementBlock","_hoisted_1","_createVNode","_Transition","name","style","$data","_hoisted_2","_createBlock","_component_chatmaintest","checkFirst","$options","onUpdateState","addConversation","updateConversation","removeConversation","getConversationBy","showChat","showPop","stateval","user","unreadMsg","botName","onCreateNewConvo","onUpdateUnreadMsg","onClick","_hoisted_6","_hoisted_3","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","getStorage","StartFirebase","getFirestore","db","createConversationId","async","dbref","collection","val","addDoc","step","agent","then","res","doc","error","setStepConversation","collectRef","updateDoc","console","log","saveChats","message","parentDocRef","subcollectionRef","text","type","isUser","newMessage","createdAt","serverTimestamp","agentNewmessage","lastMsgTime","userNewmessage","getConversation","snap","getDoc","exists","data","getLastChat","queryVal","query","orderBy","limit","parentData","querySnapshot","getDocs","docs","length","lastChatData","updateConvo","getConvoChats","value","orderedSubcollection","forEach","push","readMessage","ref","_component_test","$props","conversationId","onGoBack","onGoBackTo","_hoisted_5","_component_v_list","lines","_hoisted_8","_Fragment","convo","_component_SingleChat","key","_hoisted_9","_hoisted_10","_component_v_btn","getCount","_ctx","_component_v_list_item","title","subtitle","append","_component_v_badge","color","_component_v_divider","inset","dayjs","relativeTime","loaded","props","components","methods","capitalizeName","charAt","toUpperCase","slice","timeAgo","timestamp","now","datetime","toDate","diff","suffix","Math","abs","minutes","floor","hours","days","this","computed","displayAgent","imageSrc","url","__exports__","_hoisted_24","stroke","_hoisted_29","_hoisted_31","_hoisted_37","_hoisted_40","src","alt","_component_NewImage","size","index","innerHTML","option","options","for","_hoisted_15","_hoisted_16","_component_inputFields","onHandleInputSubmit","_hoisted_22","_hoisted_23","_hoisted_42","_hoisted_27","rows","disabled","onKeyup","onKeydown","placeholder","require","accept","onChange","fileInput","click","_component_feedBack","onGetConversationBy","onUpdateConversation","String","Number","default","mounted","canvas","$refs","context","getContext","fontSize","fontFamily","fillStyle","fillRect","textAlign","textBaseline","font","fillText","getNameInitial","watch","newValue","oldValue","_component_v_icon","start","icon","_component_v_form","onSubmit","_component_v_btn_toggle","mandatory","emoji","label","_component_v_tooltip","top","_component_v_text_field","rules","comments","_hoisted_11","_component_ErrorDialog","onDismiss","selectedEmoji","isLoading","emojis","conversationData","JSON","parse","localStorage","getItem","newState","conversations","byId","setItem","stringify","hasOwnProperty","form","validate","ended","comment","reaction","item","$emit","created","tabindex","saved","required","autocomplete","inputs","input","inputField","msg","inputValue","incoming","document","querySelector","outgoing","feedback","socket","automated","loading","showErrorDialog","errorMessage","ip","isTyping","joined","typingMsg","messages","chatTimeout","chatTimeoutDuration","chatStartTime","loaderWidth","intervalIds","showLoader","convoEnded","isBotEnabled","selectedFile","flow","next","auto","recording","mediaRecorder","previewImageUrl","NewImage","feedBack","inputFields","handleFileUpload","event","target","files","reader","FileReader","onload","result","readAsDataURL","username","emit","cancelImage","insertNewLine","shiftKey","textarea","startPos","selectionStart","endPos","selectionEnd","currentValue","substring","preventDefault","showFeeback","status","Date","resetChatTimeout","onTyping","setTimeout","checkPrev","object","checkNxt","lastIndex","currentIndex","indexOf","sound","play","previousTitle","newTitle","newMessageSound","pop","checkCase","chatToChatbottom","updateMsg","save","first","valueStep","find","obj","isSocketInConversation","element","saveMessage","stopAutomate","shadowRoot","chatBody","scrollTop","scrollHeight","requestAssistance","userId","joinConversation","conversationRoom","isJoined","lastMessage","startChatTimeout","elapsedTime","remainingTime","max","expiredConvId","intervalId","setInterval","remainingPercentage","clearTimeout","clearInterval","getConversationById","savedState","conversation","getConversationIdFromLocalStorage","split","saveConversationId","fetchState","read","expire","isConversationIdExpired","conversationTimestamp","parseInt","twoDaysInMilliseconds","localChatId","$router","iniStartTime","isbot","lastMessageIsBot","sending","imageMessages","filter","messageStrings","map","allMessageText","join","inputText","response","axios","method","prompt","messageEndsWithGoodbye","statement","goodbyeKeywords","patterns","keyword","toLowerCase","includes","pattern","test","renderMessage","linkRegex","isLink","replace","convoinfo","logivVal","sendToBot","recordingAudio","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","chunks","addEventListener","blob","Blob","author","requestMicrophonePermission","mediaStream","startRecording","catch","permissions","permissionStatus","state","getTracks","track","stop","stopRecording","playVoiceMessage","Audio","playButton","createElement","textContent","onclick","io","on","iniChat","beforeUnmount","off","handler","newMessages","deep","to","from","immediate","socketMainpage","chatActive","showingConvo","SingleChat","show","convoId","page","init","$forceUpdate","updateUnreadMsg","handleNewMessage","conversationIndex","findIndex","c","splice","lastMsg","Timestamp","conversationsById","lastIdKey","Object","keys","lastConversation","values","lastConversationEnded","chatId","valuesArray","reversedArray","reverse","firstThree","i","convoInfo","getAllInfo","appState","sortedConversations","sort","a","b","seconds","activeConversations","endedConversations","endedCount","reduce","count","chatmaintest","toggleChat","toggle","updateState","statecheck","role","locale","hasConversations","removedConversation","remainingConversations","userIdCookie","fetch","x","json","params","get_creat_user","render","createVuetify","shadowHost","attachShadow","mode","display","cssText","styleElement","createApp","testApp","use","vuetify","mount","prepend","styleElement1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}